/*
 * generated by Xtext 2.12.0
 */
package org.eclipse.cmf.occi.core.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OCCIGrammarAccess extends AbstractGrammarElementFinder {
	
	public class GrammarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Grammar");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cExtensionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConfigurationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Grammar ecore::EObject:
		//	Extension | Configuration;
		@Override public ParserRule getRule() { return rule; }
		
		//Extension | Configuration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Extension
		public RuleCall getExtensionParserRuleCall_0() { return cExtensionParserRuleCall_0; }
		
		//Configuration
		public RuleCall getConfigurationParserRuleCall_1() { return cConfigurationParserRuleCall_1; }
	}
	public class ConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Configuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConfigurationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDescriptionAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLocationKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLocationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLocationSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cLocationAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUseKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUseAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cUseExtensionCrossReference_4_1_0 = (CrossReference)cUseAssignment_4_1.eContents().get(0);
		private final RuleCall cUseExtensionSTRINGTerminalRuleCall_4_1_0_1 = (RuleCall)cUseExtensionCrossReference_4_1_0.eContents().get(1);
		private final Assignment cResourcesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cResourcesResourceParserRuleCall_5_0 = (RuleCall)cResourcesAssignment_5.eContents().get(0);
		private final Assignment cMixinsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMixinsMixinParserRuleCall_6_0 = (RuleCall)cMixinsAssignment_6.eContents().get(0);
		
		//Configuration:
		//	{Configuration}
		//	'configuration' ('description' description=STRING)? ('location' location=STRING)? ('use' use+=[Extension|STRING])*
		//	resources+=Resource*
		//	mixins+=Mixin*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Configuration} 'configuration' ('description' description=STRING)? ('location' location=STRING)? ('use'
		//use+=[Extension|STRING])* resources+=Resource* mixins+=Mixin*
		public Group getGroup() { return cGroup; }
		
		//{Configuration}
		public Action getConfigurationAction_0() { return cConfigurationAction_0; }
		
		//'configuration'
		public Keyword getConfigurationKeyword_1() { return cConfigurationKeyword_1; }
		
		//('description' description=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'description'
		public Keyword getDescriptionKeyword_2_0() { return cDescriptionKeyword_2_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_2_1() { return cDescriptionAssignment_2_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_1_0() { return cDescriptionSTRINGTerminalRuleCall_2_1_0; }
		
		//('location' location=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'location'
		public Keyword getLocationKeyword_3_0() { return cLocationKeyword_3_0; }
		
		//location=STRING
		public Assignment getLocationAssignment_3_1() { return cLocationAssignment_3_1; }
		
		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_3_1_0() { return cLocationSTRINGTerminalRuleCall_3_1_0; }
		
		//('use' use+=[Extension|STRING])*
		public Group getGroup_4() { return cGroup_4; }
		
		//'use'
		public Keyword getUseKeyword_4_0() { return cUseKeyword_4_0; }
		
		//use+=[Extension|STRING]
		public Assignment getUseAssignment_4_1() { return cUseAssignment_4_1; }
		
		//[Extension|STRING]
		public CrossReference getUseExtensionCrossReference_4_1_0() { return cUseExtensionCrossReference_4_1_0; }
		
		//STRING
		public RuleCall getUseExtensionSTRINGTerminalRuleCall_4_1_0_1() { return cUseExtensionSTRINGTerminalRuleCall_4_1_0_1; }
		
		//resources+=Resource*
		public Assignment getResourcesAssignment_5() { return cResourcesAssignment_5; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_5_0() { return cResourcesResourceParserRuleCall_5_0; }
		
		//mixins+=Mixin*
		public Assignment getMixinsAssignment_6() { return cMixinsAssignment_6; }
		
		//Mixin
		public RuleCall getMixinsMixinParserRuleCall_6_0() { return cMixinsMixinParserRuleCall_6_0; }
	}
	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Resource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdSTRINGTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKindAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cKindKindCrossReference_3_0 = (CrossReference)cKindAssignment_3.eContents().get(0);
		private final RuleCall cKindKindQualifiedIDParserRuleCall_3_0_1 = (RuleCall)cKindKindCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTitleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTitleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTitleAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLocationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLocationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLocationSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cLocationAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSummaryKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSummaryAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSummarySTRINGTerminalRuleCall_6_1_0 = (RuleCall)cSummaryAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPartsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPartsMixinBaseParserRuleCall_7_1_0 = (RuleCall)cPartsAssignment_7_1.eContents().get(0);
		private final Assignment cAttributesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAttributesAttributeStateParserRuleCall_7_2_0 = (RuleCall)cAttributesAssignment_7_2.eContents().get(0);
		private final Assignment cLinksAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cLinksLinkParserRuleCall_7_3_0 = (RuleCall)cLinksAssignment_7_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		
		//Resource:
		//	'resource'
		//	id=STRING
		//	':'
		//	kind=[Kind|QualifiedID] ('title' title=STRING)? ('location' location=STRING)? ('summary' summary=STRING)? ('{'
		//	parts+=MixinBase*
		//	attributes+=AttributeState*
		//	links+=Link*
		//	'}');
		@Override public ParserRule getRule() { return rule; }
		
		//'resource' id=STRING ':' kind=[Kind|QualifiedID] ('title' title=STRING)? ('location' location=STRING)? ('summary'
		//summary=STRING)? ('{' parts+=MixinBase* attributes+=AttributeState* links+=Link* '}')
		public Group getGroup() { return cGroup; }
		
		//'resource'
		public Keyword getResourceKeyword_0() { return cResourceKeyword_0; }
		
		//id=STRING
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_1_0() { return cIdSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//kind=[Kind|QualifiedID]
		public Assignment getKindAssignment_3() { return cKindAssignment_3; }
		
		//[Kind|QualifiedID]
		public CrossReference getKindKindCrossReference_3_0() { return cKindKindCrossReference_3_0; }
		
		//QualifiedID
		public RuleCall getKindKindQualifiedIDParserRuleCall_3_0_1() { return cKindKindQualifiedIDParserRuleCall_3_0_1; }
		
		//('title' title=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'title'
		public Keyword getTitleKeyword_4_0() { return cTitleKeyword_4_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_4_1() { return cTitleAssignment_4_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_4_1_0() { return cTitleSTRINGTerminalRuleCall_4_1_0; }
		
		//('location' location=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'location'
		public Keyword getLocationKeyword_5_0() { return cLocationKeyword_5_0; }
		
		//location=STRING
		public Assignment getLocationAssignment_5_1() { return cLocationAssignment_5_1; }
		
		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_5_1_0() { return cLocationSTRINGTerminalRuleCall_5_1_0; }
		
		//('summary' summary=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'summary'
		public Keyword getSummaryKeyword_6_0() { return cSummaryKeyword_6_0; }
		
		//summary=STRING
		public Assignment getSummaryAssignment_6_1() { return cSummaryAssignment_6_1; }
		
		//STRING
		public RuleCall getSummarySTRINGTerminalRuleCall_6_1_0() { return cSummarySTRINGTerminalRuleCall_6_1_0; }
		
		//'{' parts+=MixinBase* attributes+=AttributeState* links+=Link* '}'
		public Group getGroup_7() { return cGroup_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_0() { return cLeftCurlyBracketKeyword_7_0; }
		
		//parts+=MixinBase*
		public Assignment getPartsAssignment_7_1() { return cPartsAssignment_7_1; }
		
		//MixinBase
		public RuleCall getPartsMixinBaseParserRuleCall_7_1_0() { return cPartsMixinBaseParserRuleCall_7_1_0; }
		
		//attributes+=AttributeState*
		public Assignment getAttributesAssignment_7_2() { return cAttributesAssignment_7_2; }
		
		//AttributeState
		public RuleCall getAttributesAttributeStateParserRuleCall_7_2_0() { return cAttributesAttributeStateParserRuleCall_7_2_0; }
		
		//links+=Link*
		public Assignment getLinksAssignment_7_3() { return cLinksAssignment_7_3; }
		
		//Link
		public RuleCall getLinksLinkParserRuleCall_7_3_0() { return cLinksLinkParserRuleCall_7_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdSTRINGTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKindAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cKindKindCrossReference_3_0 = (CrossReference)cKindAssignment_3.eContents().get(0);
		private final RuleCall cKindKindQualifiedIDParserRuleCall_3_0_1 = (RuleCall)cKindKindCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTitleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTitleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTitleAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLocationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLocationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLocationSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cLocationAssignment_5_1.eContents().get(0);
		private final Keyword cTargetKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTargetAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cTargetResourceCrossReference_7_0 = (CrossReference)cTargetAssignment_7.eContents().get(0);
		private final RuleCall cTargetResourceSTRINGTerminalRuleCall_7_0_1 = (RuleCall)cTargetResourceCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cAttributesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cAttributesAttributeStateParserRuleCall_8_1_0 = (RuleCall)cAttributesAssignment_8_1.eContents().get(0);
		private final Assignment cPartsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cPartsMixinBaseParserRuleCall_8_2_0 = (RuleCall)cPartsAssignment_8_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		
		//Link:
		//	'link'
		//	id=STRING
		//	':'
		//	kind=[Kind|QualifiedID] ('title' title=STRING)? ('location' location=STRING)?
		//	'target' target=[Resource|STRING] ('{'
		//	attributes+=AttributeState*
		//	parts+=MixinBase*
		//	'}');
		@Override public ParserRule getRule() { return rule; }
		
		//'link' id=STRING ':' kind=[Kind|QualifiedID] ('title' title=STRING)? ('location' location=STRING)? 'target'
		//target=[Resource|STRING] ('{' attributes+=AttributeState* parts+=MixinBase* '}')
		public Group getGroup() { return cGroup; }
		
		//'link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//id=STRING
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_1_0() { return cIdSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//kind=[Kind|QualifiedID]
		public Assignment getKindAssignment_3() { return cKindAssignment_3; }
		
		//[Kind|QualifiedID]
		public CrossReference getKindKindCrossReference_3_0() { return cKindKindCrossReference_3_0; }
		
		//QualifiedID
		public RuleCall getKindKindQualifiedIDParserRuleCall_3_0_1() { return cKindKindQualifiedIDParserRuleCall_3_0_1; }
		
		//('title' title=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'title'
		public Keyword getTitleKeyword_4_0() { return cTitleKeyword_4_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_4_1() { return cTitleAssignment_4_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_4_1_0() { return cTitleSTRINGTerminalRuleCall_4_1_0; }
		
		//('location' location=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'location'
		public Keyword getLocationKeyword_5_0() { return cLocationKeyword_5_0; }
		
		//location=STRING
		public Assignment getLocationAssignment_5_1() { return cLocationAssignment_5_1; }
		
		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_5_1_0() { return cLocationSTRINGTerminalRuleCall_5_1_0; }
		
		//'target'
		public Keyword getTargetKeyword_6() { return cTargetKeyword_6; }
		
		//target=[Resource|STRING]
		public Assignment getTargetAssignment_7() { return cTargetAssignment_7; }
		
		//[Resource|STRING]
		public CrossReference getTargetResourceCrossReference_7_0() { return cTargetResourceCrossReference_7_0; }
		
		//STRING
		public RuleCall getTargetResourceSTRINGTerminalRuleCall_7_0_1() { return cTargetResourceSTRINGTerminalRuleCall_7_0_1; }
		
		//'{' attributes+=AttributeState* parts+=MixinBase* '}'
		public Group getGroup_8() { return cGroup_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_0() { return cLeftCurlyBracketKeyword_8_0; }
		
		//attributes+=AttributeState*
		public Assignment getAttributesAssignment_8_1() { return cAttributesAssignment_8_1; }
		
		//AttributeState
		public RuleCall getAttributesAttributeStateParserRuleCall_8_1_0() { return cAttributesAttributeStateParserRuleCall_8_1_0; }
		
		//parts+=MixinBase*
		public Assignment getPartsAssignment_8_2() { return cPartsAssignment_8_2; }
		
		//MixinBase
		public RuleCall getPartsMixinBaseParserRuleCall_8_2_0() { return cPartsMixinBaseParserRuleCall_8_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_3() { return cRightCurlyBracketKeyword_8_3; }
	}
	public class MixinBaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.MixinBase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMixinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMixinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMixinMixinCrossReference_1_0 = (CrossReference)cMixinAssignment_1.eContents().get(0);
		private final RuleCall cMixinMixinQualifiedIDParserRuleCall_1_0_1 = (RuleCall)cMixinMixinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeStateParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MixinBase:
		//	'mixin'
		//	mixin=[Mixin|QualifiedID]
		//	'{'
		//	attributes+=AttributeState*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'mixin' mixin=[Mixin|QualifiedID] '{' attributes+=AttributeState* '}'
		public Group getGroup() { return cGroup; }
		
		//'mixin'
		public Keyword getMixinKeyword_0() { return cMixinKeyword_0; }
		
		//mixin=[Mixin|QualifiedID]
		public Assignment getMixinAssignment_1() { return cMixinAssignment_1; }
		
		//[Mixin|QualifiedID]
		public CrossReference getMixinMixinCrossReference_1_0() { return cMixinMixinCrossReference_1_0; }
		
		//QualifiedID
		public RuleCall getMixinMixinQualifiedIDParserRuleCall_1_0_1() { return cMixinMixinQualifiedIDParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attributes+=AttributeState*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//AttributeState
		public RuleCall getAttributesAttributeStateParserRuleCall_3_0() { return cAttributesAttributeStateParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AttributeStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.AttributeState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//AttributeState:
		//	'attribute'
		//	name=QualifiedID
		//	'=' value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute' name=QualifiedID '=' value=STRING
		public Group getGroup() { return cGroup; }
		
		//'attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//name=QualifiedID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//QualifiedID
		public RuleCall getNameQualifiedIDParserRuleCall_1_0() { return cNameQualifiedIDParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=STRING
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0() { return cValueSTRINGTerminalRuleCall_3_0; }
	}
	public class ExtensionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Extension");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExtensionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSchemeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSchemeSTRINGTerminalRuleCall_3_0 = (RuleCall)cSchemeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSpecificationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSpecificationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSpecificationSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cSpecificationAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cImportKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cImportAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cImportExtensionCrossReference_6_1_0 = (CrossReference)cImportAssignment_6_1.eContents().get(0);
		private final RuleCall cImportExtensionSTRINGTerminalRuleCall_6_1_0_1 = (RuleCall)cImportExtensionCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cAsKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_6_2_1 = (RuleCall)cGroup_6_2.eContents().get(1);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cKindsAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cKindsKindParserRuleCall_7_0_0 = (RuleCall)cKindsAssignment_7_0.eContents().get(0);
		private final Assignment cMixinsAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cMixinsMixinParserRuleCall_7_1_0 = (RuleCall)cMixinsAssignment_7_1.eContents().get(0);
		private final Assignment cTypesAssignment_7_2 = (Assignment)cAlternatives_7.eContents().get(2);
		private final RuleCall cTypesDataTypeParserRuleCall_7_2_0 = (RuleCall)cTypesAssignment_7_2.eContents().get(0);
		
		//Extension:
		//	'extension'
		//	name=NameID ':' scheme=STRING ('description' description=STRING)? ('specification' specification=STRING)? ('import'
		//	^import+=[Extension|STRING /* URI */] ('as' ID)?)* (kinds+=Kind
		//	| mixins+=Mixin
		//	| types+=DataType)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'extension' name=NameID ':' scheme=STRING ('description' description=STRING)? ('specification' specification=STRING)?
		//('import' ^import+=[Extension|STRING /* URI */] ('as' ID)?)* (kinds+=Kind | mixins+=Mixin | types+=DataType)*
		public Group getGroup() { return cGroup; }
		
		//'extension'
		public Keyword getExtensionKeyword_0() { return cExtensionKeyword_0; }
		
		//name=NameID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//NameID
		public RuleCall getNameNameIDParserRuleCall_1_0() { return cNameNameIDParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//scheme=STRING
		public Assignment getSchemeAssignment_3() { return cSchemeAssignment_3; }
		
		//STRING
		public RuleCall getSchemeSTRINGTerminalRuleCall_3_0() { return cSchemeSTRINGTerminalRuleCall_3_0; }
		
		//('description' description=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_1_0() { return cDescriptionSTRINGTerminalRuleCall_4_1_0; }
		
		//('specification' specification=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'specification'
		public Keyword getSpecificationKeyword_5_0() { return cSpecificationKeyword_5_0; }
		
		//specification=STRING
		public Assignment getSpecificationAssignment_5_1() { return cSpecificationAssignment_5_1; }
		
		//STRING
		public RuleCall getSpecificationSTRINGTerminalRuleCall_5_1_0() { return cSpecificationSTRINGTerminalRuleCall_5_1_0; }
		
		//('import' ^import+=[Extension|STRING /* URI */] ('as' ID)?)*
		public Group getGroup_6() { return cGroup_6; }
		
		//'import'
		public Keyword getImportKeyword_6_0() { return cImportKeyword_6_0; }
		
		//^import+=[Extension|STRING /* URI */]
		public Assignment getImportAssignment_6_1() { return cImportAssignment_6_1; }
		
		//[Extension|STRING /* URI */]
		public CrossReference getImportExtensionCrossReference_6_1_0() { return cImportExtensionCrossReference_6_1_0; }
		
		//STRING
		public RuleCall getImportExtensionSTRINGTerminalRuleCall_6_1_0_1() { return cImportExtensionSTRINGTerminalRuleCall_6_1_0_1; }
		
		//('as' ID)?
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//'as'
		public Keyword getAsKeyword_6_2_0() { return cAsKeyword_6_2_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_6_2_1() { return cIDTerminalRuleCall_6_2_1; }
		
		//(kinds+=Kind | mixins+=Mixin | types+=DataType)*
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//kinds+=Kind
		public Assignment getKindsAssignment_7_0() { return cKindsAssignment_7_0; }
		
		//Kind
		public RuleCall getKindsKindParserRuleCall_7_0_0() { return cKindsKindParserRuleCall_7_0_0; }
		
		//mixins+=Mixin
		public Assignment getMixinsAssignment_7_1() { return cMixinsAssignment_7_1; }
		
		//Mixin
		public RuleCall getMixinsMixinParserRuleCall_7_1_0() { return cMixinsMixinParserRuleCall_7_1_0; }
		
		//types+=DataType
		public Assignment getTypesAssignment_7_2() { return cTypesAssignment_7_2; }
		
		//DataType
		public RuleCall getTypesDataTypeParserRuleCall_7_2_0() { return cTypesDataTypeParserRuleCall_7_2_0; }
	}
	public class KindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Kind");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKindKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cParentKindCrossReference_2_1_0 = (CrossReference)cParentAssignment_2_1.eContents().get(0);
		private final RuleCall cParentKindQualifiedIDParserRuleCall_2_1_0_1 = (RuleCall)cParentKindCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSourceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSourceKindCrossReference_3_1_0 = (CrossReference)cSourceAssignment_3_1.eContents().get(0);
		private final RuleCall cSourceKindQualifiedIDParserRuleCall_3_1_0_1 = (RuleCall)cSourceKindCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSourceAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cSourceKindCrossReference_3_2_1_0 = (CrossReference)cSourceAssignment_3_2_1.eContents().get(0);
		private final RuleCall cSourceKindQualifiedIDParserRuleCall_3_2_1_0_1 = (RuleCall)cSourceKindCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTargetKindCrossReference_4_1_0 = (CrossReference)cTargetAssignment_4_1.eContents().get(0);
		private final RuleCall cTargetKindQualifiedIDParserRuleCall_4_1_0_1 = (RuleCall)cTargetKindCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cTargetAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cTargetKindCrossReference_4_2_1_0 = (CrossReference)cTargetAssignment_4_2_1.eContents().get(0);
		private final RuleCall cTargetKindQualifiedIDParserRuleCall_4_2_1_0_1 = (RuleCall)cTargetKindCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTitleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTitleAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cTitleAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Assignment cAttributesAssignment_6_1_0 = (Assignment)cAlternatives_6_1.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_6_1_0_0 = (RuleCall)cAttributesAssignment_6_1_0.eContents().get(0);
		private final Assignment cActionsAssignment_6_1_1 = (Assignment)cAlternatives_6_1.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_6_1_1_0 = (RuleCall)cActionsAssignment_6_1_1.eContents().get(0);
		private final Assignment cConstraintsAssignment_6_1_2 = (Assignment)cAlternatives_6_1.eContents().get(2);
		private final RuleCall cConstraintsConstraintParserRuleCall_6_1_2_0 = (RuleCall)cConstraintsAssignment_6_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cFsmAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFsmFSMParserRuleCall_7_0 = (RuleCall)cFsmAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAnnotationsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cAnnotationsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_8_2_0 = (RuleCall)cAnnotationsAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cAnnotationsAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_8_3_1_0 = (RuleCall)cAnnotationsAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		
		//Kind:
		//	'kind'
		//	name=NameID ('extends' parent=[Kind|QualifiedID])? ('source' source+=[Kind|QualifiedID] (","
		//	source+=[Kind|QualifiedID])*)? ('target' target+=[Kind|QualifiedID] ("," target+=[Kind|QualifiedID])*)? ('title'
		//	title=STRING)? ('{' (attributes+=Attribute
		//	| actions+=Action
		//	| constraints+=Constraint)+
		//	'}')?
		//	fsm=FSM? ('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'kind' name=NameID ('extends' parent=[Kind|QualifiedID])? ('source' source+=[Kind|QualifiedID] (","
		//source+=[Kind|QualifiedID])*)? ('target' target+=[Kind|QualifiedID] ("," target+=[Kind|QualifiedID])*)? ('title'
		//title=STRING)? ('{' (attributes+=Attribute | actions+=Action | constraints+=Constraint)+ '}')? fsm=FSM? ('annotations'
		//'{' annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'kind'
		public Keyword getKindKeyword_0() { return cKindKeyword_0; }
		
		//name=NameID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//NameID
		public RuleCall getNameNameIDParserRuleCall_1_0() { return cNameNameIDParserRuleCall_1_0; }
		
		//('extends' parent=[Kind|QualifiedID])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//parent=[Kind|QualifiedID]
		public Assignment getParentAssignment_2_1() { return cParentAssignment_2_1; }
		
		//[Kind|QualifiedID]
		public CrossReference getParentKindCrossReference_2_1_0() { return cParentKindCrossReference_2_1_0; }
		
		//QualifiedID
		public RuleCall getParentKindQualifiedIDParserRuleCall_2_1_0_1() { return cParentKindQualifiedIDParserRuleCall_2_1_0_1; }
		
		//('source' source+=[Kind|QualifiedID] ("," source+=[Kind|QualifiedID])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'source'
		public Keyword getSourceKeyword_3_0() { return cSourceKeyword_3_0; }
		
		//source+=[Kind|QualifiedID]
		public Assignment getSourceAssignment_3_1() { return cSourceAssignment_3_1; }
		
		//[Kind|QualifiedID]
		public CrossReference getSourceKindCrossReference_3_1_0() { return cSourceKindCrossReference_3_1_0; }
		
		//QualifiedID
		public RuleCall getSourceKindQualifiedIDParserRuleCall_3_1_0_1() { return cSourceKindQualifiedIDParserRuleCall_3_1_0_1; }
		
		//("," source+=[Kind|QualifiedID])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//source+=[Kind|QualifiedID]
		public Assignment getSourceAssignment_3_2_1() { return cSourceAssignment_3_2_1; }
		
		//[Kind|QualifiedID]
		public CrossReference getSourceKindCrossReference_3_2_1_0() { return cSourceKindCrossReference_3_2_1_0; }
		
		//QualifiedID
		public RuleCall getSourceKindQualifiedIDParserRuleCall_3_2_1_0_1() { return cSourceKindQualifiedIDParserRuleCall_3_2_1_0_1; }
		
		//('target' target+=[Kind|QualifiedID] ("," target+=[Kind|QualifiedID])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'target'
		public Keyword getTargetKeyword_4_0() { return cTargetKeyword_4_0; }
		
		//target+=[Kind|QualifiedID]
		public Assignment getTargetAssignment_4_1() { return cTargetAssignment_4_1; }
		
		//[Kind|QualifiedID]
		public CrossReference getTargetKindCrossReference_4_1_0() { return cTargetKindCrossReference_4_1_0; }
		
		//QualifiedID
		public RuleCall getTargetKindQualifiedIDParserRuleCall_4_1_0_1() { return cTargetKindQualifiedIDParserRuleCall_4_1_0_1; }
		
		//("," target+=[Kind|QualifiedID])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//target+=[Kind|QualifiedID]
		public Assignment getTargetAssignment_4_2_1() { return cTargetAssignment_4_2_1; }
		
		//[Kind|QualifiedID]
		public CrossReference getTargetKindCrossReference_4_2_1_0() { return cTargetKindCrossReference_4_2_1_0; }
		
		//QualifiedID
		public RuleCall getTargetKindQualifiedIDParserRuleCall_4_2_1_0_1() { return cTargetKindQualifiedIDParserRuleCall_4_2_1_0_1; }
		
		//('title' title=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'title'
		public Keyword getTitleKeyword_5_0() { return cTitleKeyword_5_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_5_1() { return cTitleAssignment_5_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_5_1_0() { return cTitleSTRINGTerminalRuleCall_5_1_0; }
		
		//('{' (attributes+=Attribute | actions+=Action | constraints+=Constraint)+ '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_0() { return cLeftCurlyBracketKeyword_6_0; }
		
		//(attributes+=Attribute | actions+=Action | constraints+=Constraint)+
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_6_1_0() { return cAttributesAssignment_6_1_0; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_6_1_0_0() { return cAttributesAttributeParserRuleCall_6_1_0_0; }
		
		//actions+=Action
		public Assignment getActionsAssignment_6_1_1() { return cActionsAssignment_6_1_1; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_6_1_1_0() { return cActionsActionParserRuleCall_6_1_1_0; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_6_1_2() { return cConstraintsAssignment_6_1_2; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_6_1_2_0() { return cConstraintsConstraintParserRuleCall_6_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_2() { return cRightCurlyBracketKeyword_6_2; }
		
		//fsm=FSM?
		public Assignment getFsmAssignment_7() { return cFsmAssignment_7; }
		
		//FSM
		public RuleCall getFsmFSMParserRuleCall_7_0() { return cFsmFSMParserRuleCall_7_0; }
		
		//('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'annotations'
		public Keyword getAnnotationsKeyword_8_0() { return cAnnotationsKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_8_2() { return cAnnotationsAssignment_8_2; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_8_2_0() { return cAnnotationsAnnotationParserRuleCall_8_2_0; }
		
		//("," annotations+=Annotation)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_8_3_1() { return cAnnotationsAssignment_8_3_1; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_8_3_1_0() { return cAnnotationsAnnotationParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
	}
	public class MixinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Mixin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMixinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDependsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cDependsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cDependsMixinCrossReference_2_2_0 = (CrossReference)cDependsAssignment_2_2.eContents().get(0);
		private final RuleCall cDependsMixinQualifiedIDParserRuleCall_2_2_0_1 = (RuleCall)cDependsMixinCrossReference_2_2_0.eContents().get(1);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cDependsAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final CrossReference cDependsMixinCrossReference_2_3_1_0 = (CrossReference)cDependsAssignment_2_3_1.eContents().get(0);
		private final RuleCall cDependsMixinQualifiedIDParserRuleCall_2_3_1_0_1 = (RuleCall)cDependsMixinCrossReference_2_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAppliesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cAppliesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cAppliesKindCrossReference_3_2_0 = (CrossReference)cAppliesAssignment_3_2.eContents().get(0);
		private final RuleCall cAppliesKindQualifiedIDParserRuleCall_3_2_0_1 = (RuleCall)cAppliesKindCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cAppliesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cAppliesKindCrossReference_3_3_1_0 = (CrossReference)cAppliesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cAppliesKindQualifiedIDParserRuleCall_3_3_1_0_1 = (RuleCall)cAppliesKindCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTitleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTitleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTitleAssignment_4_1.eContents().get(0);
		private final Keyword cSchemeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSchemeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSchemeSTRINGTerminalRuleCall_6_0 = (RuleCall)cSchemeAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Alternatives cAlternatives_7_1 = (Alternatives)cGroup_7.eContents().get(1);
		private final Assignment cAttributesAssignment_7_1_0 = (Assignment)cAlternatives_7_1.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_7_1_0_0 = (RuleCall)cAttributesAssignment_7_1_0.eContents().get(0);
		private final Assignment cActionsAssignment_7_1_1 = (Assignment)cAlternatives_7_1.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_7_1_1_0 = (RuleCall)cActionsAssignment_7_1_1.eContents().get(0);
		private final Assignment cConstraintsAssignment_7_1_2 = (Assignment)cAlternatives_7_1.eContents().get(2);
		private final RuleCall cConstraintsConstraintParserRuleCall_7_1_2_0 = (RuleCall)cConstraintsAssignment_7_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cFsmAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cFsmFSMParserRuleCall_8_0 = (RuleCall)cFsmAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cAnnotationsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cAnnotationsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_9_2_0 = (RuleCall)cAnnotationsAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cAnnotationsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_9_3_1_0 = (RuleCall)cAnnotationsAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		
		//Mixin:
		//	'mixin'
		//	name=NameID ('depends' '(' depends+=[Mixin|QualifiedID] ("," depends+=[Mixin|QualifiedID])* ')')? ('applies' '('
		//	applies+=[Kind|QualifiedID] ("," applies+=[Kind|QualifiedID])* ')')? ('title' title=STRING)?
		//	'scheme' scheme=STRING ('{' (attributes+=Attribute
		//	| actions+=Action
		//	| constraints+=Constraint)+
		//	'}')?
		//	fsm=FSM? ('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'mixin' name=NameID ('depends' '(' depends+=[Mixin|QualifiedID] ("," depends+=[Mixin|QualifiedID])* ')')? ('applies' '('
		//applies+=[Kind|QualifiedID] ("," applies+=[Kind|QualifiedID])* ')')? ('title' title=STRING)? 'scheme' scheme=STRING
		//('{' (attributes+=Attribute | actions+=Action | constraints+=Constraint)+ '}')? fsm=FSM? ('annotations' '{'
		//annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'mixin'
		public Keyword getMixinKeyword_0() { return cMixinKeyword_0; }
		
		//name=NameID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//NameID
		public RuleCall getNameNameIDParserRuleCall_1_0() { return cNameNameIDParserRuleCall_1_0; }
		
		//('depends' '(' depends+=[Mixin|QualifiedID] ("," depends+=[Mixin|QualifiedID])* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'depends'
		public Keyword getDependsKeyword_2_0() { return cDependsKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }
		
		//depends+=[Mixin|QualifiedID]
		public Assignment getDependsAssignment_2_2() { return cDependsAssignment_2_2; }
		
		//[Mixin|QualifiedID]
		public CrossReference getDependsMixinCrossReference_2_2_0() { return cDependsMixinCrossReference_2_2_0; }
		
		//QualifiedID
		public RuleCall getDependsMixinQualifiedIDParserRuleCall_2_2_0_1() { return cDependsMixinQualifiedIDParserRuleCall_2_2_0_1; }
		
		//("," depends+=[Mixin|QualifiedID])*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//depends+=[Mixin|QualifiedID]
		public Assignment getDependsAssignment_2_3_1() { return cDependsAssignment_2_3_1; }
		
		//[Mixin|QualifiedID]
		public CrossReference getDependsMixinCrossReference_2_3_1_0() { return cDependsMixinCrossReference_2_3_1_0; }
		
		//QualifiedID
		public RuleCall getDependsMixinQualifiedIDParserRuleCall_2_3_1_0_1() { return cDependsMixinQualifiedIDParserRuleCall_2_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
		
		//('applies' '(' applies+=[Kind|QualifiedID] ("," applies+=[Kind|QualifiedID])* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'applies'
		public Keyword getAppliesKeyword_3_0() { return cAppliesKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//applies+=[Kind|QualifiedID]
		public Assignment getAppliesAssignment_3_2() { return cAppliesAssignment_3_2; }
		
		//[Kind|QualifiedID]
		public CrossReference getAppliesKindCrossReference_3_2_0() { return cAppliesKindCrossReference_3_2_0; }
		
		//QualifiedID
		public RuleCall getAppliesKindQualifiedIDParserRuleCall_3_2_0_1() { return cAppliesKindQualifiedIDParserRuleCall_3_2_0_1; }
		
		//("," applies+=[Kind|QualifiedID])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//applies+=[Kind|QualifiedID]
		public Assignment getAppliesAssignment_3_3_1() { return cAppliesAssignment_3_3_1; }
		
		//[Kind|QualifiedID]
		public CrossReference getAppliesKindCrossReference_3_3_1_0() { return cAppliesKindCrossReference_3_3_1_0; }
		
		//QualifiedID
		public RuleCall getAppliesKindQualifiedIDParserRuleCall_3_3_1_0_1() { return cAppliesKindQualifiedIDParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//('title' title=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'title'
		public Keyword getTitleKeyword_4_0() { return cTitleKeyword_4_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_4_1() { return cTitleAssignment_4_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_4_1_0() { return cTitleSTRINGTerminalRuleCall_4_1_0; }
		
		//'scheme'
		public Keyword getSchemeKeyword_5() { return cSchemeKeyword_5; }
		
		//scheme=STRING
		public Assignment getSchemeAssignment_6() { return cSchemeAssignment_6; }
		
		//STRING
		public RuleCall getSchemeSTRINGTerminalRuleCall_6_0() { return cSchemeSTRINGTerminalRuleCall_6_0; }
		
		//('{' (attributes+=Attribute | actions+=Action | constraints+=Constraint)+ '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_0() { return cLeftCurlyBracketKeyword_7_0; }
		
		//(attributes+=Attribute | actions+=Action | constraints+=Constraint)+
		public Alternatives getAlternatives_7_1() { return cAlternatives_7_1; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_7_1_0() { return cAttributesAssignment_7_1_0; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_7_1_0_0() { return cAttributesAttributeParserRuleCall_7_1_0_0; }
		
		//actions+=Action
		public Assignment getActionsAssignment_7_1_1() { return cActionsAssignment_7_1_1; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_7_1_1_0() { return cActionsActionParserRuleCall_7_1_1_0; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_7_1_2() { return cConstraintsAssignment_7_1_2; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_7_1_2_0() { return cConstraintsConstraintParserRuleCall_7_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_2() { return cRightCurlyBracketKeyword_7_2; }
		
		//fsm=FSM?
		public Assignment getFsmAssignment_8() { return cFsmAssignment_8; }
		
		//FSM
		public RuleCall getFsmFSMParserRuleCall_8_0() { return cFsmFSMParserRuleCall_8_0; }
		
		//('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'annotations'
		public Keyword getAnnotationsKeyword_9_0() { return cAnnotationsKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_9_2() { return cAnnotationsAssignment_9_2; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_9_2_0() { return cAnnotationsAnnotationParserRuleCall_9_2_0; }
		
		//("," annotations+=Annotation)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_9_3_1() { return cAnnotationsAssignment_9_3_1; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_9_3_1_0() { return cAnnotationsAnnotationParserRuleCall_9_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cKeyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKeyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKeySTRINGTerminalRuleCall_2_0 = (RuleCall)cKeyAssignment_2.eContents().get(0);
		private final Keyword cValueKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueSTRINGTerminalRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Annotation:
		//	'('
		//	'key' key=STRING
		//	'value' value=STRING
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'key' key=STRING 'value' value=STRING ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'key'
		public Keyword getKeyKeyword_1() { return cKeyKeyword_1; }
		
		//key=STRING
		public Assignment getKeyAssignment_2() { return cKeyAssignment_2; }
		
		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_2_0() { return cKeySTRINGTerminalRuleCall_2_0; }
		
		//'value'
		public Keyword getValueKeyword_3() { return cValueKeyword_3; }
		
		//value=STRING
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_4_0() { return cValueSTRINGTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMutableAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cMutableMutableKeyword_1_0 = (Keyword)cMutableAssignment_1.eContents().get(0);
		private final Assignment cRequiredAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cRequiredRequiredKeyword_2_0 = (Keyword)cRequiredAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameQualifiedIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTypeDataTypeCrossReference_4_1_0 = (CrossReference)cTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cTypeDataTypeQualifiedIDParserRuleCall_4_1_0_1 = (RuleCall)cTypeDataTypeCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDefaultAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDefaultSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDefaultAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cDescriptionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAnnotationsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cAnnotationsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_7_2_0 = (RuleCall)cAnnotationsAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cAnnotationsAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_7_3_1_0 = (RuleCall)cAnnotationsAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		
		//Attribute:
		//	'attribute'
		//	mutable?='mutable'?
		//	required?='required'?
		//	name=QualifiedID (':' type=[DataType|QualifiedID])? ('=' default=STRING)? ('description' description=STRING)?
		//	('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute' mutable?='mutable'? required?='required'? name=QualifiedID (':' type=[DataType|QualifiedID])? ('='
		//default=STRING)? ('description' description=STRING)? ('annotations' '{' annotations+=Annotation (","
		//annotations+=Annotation)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//mutable?='mutable'?
		public Assignment getMutableAssignment_1() { return cMutableAssignment_1; }
		
		//'mutable'
		public Keyword getMutableMutableKeyword_1_0() { return cMutableMutableKeyword_1_0; }
		
		//required?='required'?
		public Assignment getRequiredAssignment_2() { return cRequiredAssignment_2; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_2_0() { return cRequiredRequiredKeyword_2_0; }
		
		//name=QualifiedID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//QualifiedID
		public RuleCall getNameQualifiedIDParserRuleCall_3_0() { return cNameQualifiedIDParserRuleCall_3_0; }
		
		//(':' type=[DataType|QualifiedID])?
		public Group getGroup_4() { return cGroup_4; }
		
		//':'
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }
		
		//type=[DataType|QualifiedID]
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//[DataType|QualifiedID]
		public CrossReference getTypeDataTypeCrossReference_4_1_0() { return cTypeDataTypeCrossReference_4_1_0; }
		
		//QualifiedID
		public RuleCall getTypeDataTypeQualifiedIDParserRuleCall_4_1_0_1() { return cTypeDataTypeQualifiedIDParserRuleCall_4_1_0_1; }
		
		//('=' default=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//default=STRING
		public Assignment getDefaultAssignment_5_1() { return cDefaultAssignment_5_1; }
		
		//STRING
		public RuleCall getDefaultSTRINGTerminalRuleCall_5_1_0() { return cDefaultSTRINGTerminalRuleCall_5_1_0; }
		
		//('description' description=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_6_1() { return cDescriptionAssignment_6_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_1_0() { return cDescriptionSTRINGTerminalRuleCall_6_1_0; }
		
		//('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'annotations'
		public Keyword getAnnotationsKeyword_7_0() { return cAnnotationsKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_7_2() { return cAnnotationsAssignment_7_2; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_7_2_0() { return cAnnotationsAnnotationParserRuleCall_7_2_0; }
		
		//("," annotations+=Annotation)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_7_3_1() { return cAnnotationsAssignment_7_3_1; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_7_3_1_0() { return cAnnotationsAnnotationParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAttributesParameterDeclParserRuleCall_2_1_0 = (RuleCall)cAttributesAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cAttributesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cAttributesParameterDeclParserRuleCall_2_2_1_0 = (RuleCall)cAttributesAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTitleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cTitleAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAnnotationsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAnnotationsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_2_0 = (RuleCall)cAnnotationsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAnnotationsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_3_1_0 = (RuleCall)cAnnotationsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		
		//Action:
		//	'action'
		//	name=NameID ('(' attributes+=ParameterDecl ("," attributes+=ParameterDecl)* ')')? ('title' title=STRING)?
		//	('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'action' name=NameID ('(' attributes+=ParameterDecl ("," attributes+=ParameterDecl)* ')')? ('title' title=STRING)?
		//('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'action'
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }
		
		//name=NameID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//NameID
		public RuleCall getNameNameIDParserRuleCall_1_0() { return cNameNameIDParserRuleCall_1_0; }
		
		//('(' attributes+=ParameterDecl ("," attributes+=ParameterDecl)* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//attributes+=ParameterDecl
		public Assignment getAttributesAssignment_2_1() { return cAttributesAssignment_2_1; }
		
		//ParameterDecl
		public RuleCall getAttributesParameterDeclParserRuleCall_2_1_0() { return cAttributesParameterDeclParserRuleCall_2_1_0; }
		
		//("," attributes+=ParameterDecl)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//attributes+=ParameterDecl
		public Assignment getAttributesAssignment_2_2_1() { return cAttributesAssignment_2_2_1; }
		
		//ParameterDecl
		public RuleCall getAttributesParameterDeclParserRuleCall_2_2_1_0() { return cAttributesParameterDeclParserRuleCall_2_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//('title' title=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'title'
		public Keyword getTitleKeyword_3_0() { return cTitleKeyword_3_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_3_1() { return cTitleAssignment_3_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_3_1_0() { return cTitleSTRINGTerminalRuleCall_3_1_0; }
		
		//('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'annotations'
		public Keyword getAnnotationsKeyword_4_0() { return cAnnotationsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_4_2() { return cAnnotationsAssignment_4_2; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_2_0() { return cAnnotationsAnnotationParserRuleCall_4_2_0; }
		
		//("," annotations+=Annotation)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_4_3_1() { return cAnnotationsAssignment_4_3_1; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_3_1_0() { return cAnnotationsAnnotationParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
	}
	public class ParameterDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.ParameterDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQualifiedIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeDataTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeDataTypeQualifiedIDParserRuleCall_2_0_1 = (RuleCall)cTypeDataTypeCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefaultAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefaultSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDefaultAssignment_3_1.eContents().get(0);
		
		//ParameterDecl Attribute:
		//	name=QualifiedID
		//	':'
		//	type=[DataType|QualifiedID] ('=' default=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QualifiedID ':' type=[DataType|QualifiedID] ('=' default=STRING)?
		public Group getGroup() { return cGroup; }
		
		//name=QualifiedID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QualifiedID
		public RuleCall getNameQualifiedIDParserRuleCall_0_0() { return cNameQualifiedIDParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=[DataType|QualifiedID]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[DataType|QualifiedID]
		public CrossReference getTypeDataTypeCrossReference_2_0() { return cTypeDataTypeCrossReference_2_0; }
		
		//QualifiedID
		public RuleCall getTypeDataTypeQualifiedIDParserRuleCall_2_0_1() { return cTypeDataTypeQualifiedIDParserRuleCall_2_0_1; }
		
		//('=' default=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }
		
		//default=STRING
		public Assignment getDefaultAssignment_3_1() { return cDefaultAssignment_3_1; }
		
		//STRING
		public RuleCall getDefaultSTRINGTerminalRuleCall_3_1_0() { return cDefaultSTRINGTerminalRuleCall_3_1_0; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDescriptionAssignment_2_1.eContents().get(0);
		private final Keyword cBodyKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cBodyAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBodySTRINGTerminalRuleCall_4_0 = (RuleCall)cBodyAssignment_4.eContents().get(0);
		
		//Constraint:
		//	'constraint' name=NameID ('description' description=STRING)?
		//	'body' body=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'constraint' name=NameID ('description' description=STRING)? 'body' body=STRING
		public Group getGroup() { return cGroup; }
		
		//'constraint'
		public Keyword getConstraintKeyword_0() { return cConstraintKeyword_0; }
		
		//name=NameID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//NameID
		public RuleCall getNameNameIDParserRuleCall_1_0() { return cNameNameIDParserRuleCall_1_0; }
		
		//('description' description=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'description'
		public Keyword getDescriptionKeyword_2_0() { return cDescriptionKeyword_2_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_2_1() { return cDescriptionAssignment_2_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_1_0() { return cDescriptionSTRINGTerminalRuleCall_2_1_0; }
		
		//'body'
		public Keyword getBodyKeyword_3() { return cBodyKeyword_3; }
		
		//body=STRING
		public Assignment getBodyAssignment_4() { return cBodyAssignment_4; }
		
		//STRING
		public RuleCall getBodySTRINGTerminalRuleCall_4_0() { return cBodySTRINGTerminalRuleCall_4_0; }
	}
	public class FSMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.FSM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFSMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAttributeAttributeCrossReference_2_0 = (CrossReference)cAttributeAssignment_2.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedIDParserRuleCall_2_0_1 = (RuleCall)cAttributeAttributeCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedStateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedStateStateParserRuleCall_3_1_0 = (RuleCall)cOwnedStateAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cOwnedStateAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cOwnedStateStateParserRuleCall_3_2_1_0 = (RuleCall)cOwnedStateAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//FSM:
		//	'FSM'
		//	'attribute' attribute=[Attribute|QualifiedID] ('{' ownedState+=State ("," ownedState+=State)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'FSM' 'attribute' attribute=[Attribute|QualifiedID] ('{' ownedState+=State ("," ownedState+=State)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'FSM'
		public Keyword getFSMKeyword_0() { return cFSMKeyword_0; }
		
		//'attribute'
		public Keyword getAttributeKeyword_1() { return cAttributeKeyword_1; }
		
		//attribute=[Attribute|QualifiedID]
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//[Attribute|QualifiedID]
		public CrossReference getAttributeAttributeCrossReference_2_0() { return cAttributeAttributeCrossReference_2_0; }
		
		//QualifiedID
		public RuleCall getAttributeAttributeQualifiedIDParserRuleCall_2_0_1() { return cAttributeAttributeQualifiedIDParserRuleCall_2_0_1; }
		
		//('{' ownedState+=State ("," ownedState+=State)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//ownedState+=State
		public Assignment getOwnedStateAssignment_3_1() { return cOwnedStateAssignment_3_1; }
		
		//State
		public RuleCall getOwnedStateStateParserRuleCall_3_1_0() { return cOwnedStateStateParserRuleCall_3_1_0; }
		
		//("," ownedState+=State)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//ownedState+=State
		public Assignment getOwnedStateAssignment_3_2_1() { return cOwnedStateAssignment_3_2_1; }
		
		//State
		public RuleCall getOwnedStateStateParserRuleCall_3_2_1_0() { return cOwnedStateStateParserRuleCall_3_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInitialAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cInitialInitialKeyword_1_0 = (Keyword)cInitialAssignment_1.eContents().get(0);
		private final Assignment cFinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cFinalFinalKeyword_2_0 = (Keyword)cFinalAssignment_2.eContents().get(0);
		private final Assignment cLiteralAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cLiteralEnumerationLiteralCrossReference_3_0 = (CrossReference)cLiteralAssignment_3.eContents().get(0);
		private final RuleCall cLiteralEnumerationLiteralQualifiedIDParserRuleCall_3_0_1 = (RuleCall)cLiteralEnumerationLiteralCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTransitionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cOutgoingTransitionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cOutgoingTransitionTransitionParserRuleCall_4_2_0 = (RuleCall)cOutgoingTransitionAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cOutgoingTransitionAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cOutgoingTransitionTransitionParserRuleCall_4_3_1_0 = (RuleCall)cOutgoingTransitionAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		
		//State:
		//	'state'
		//	initial?='initial'?
		//	final?='final'?
		//	literal=[EnumerationLiteral|QualifiedID] ('transitions' '(' outgoingTransition+=Transition (","
		//	outgoingTransition+=Transition)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'state' initial?='initial'? final?='final'? literal=[EnumerationLiteral|QualifiedID] ('transitions' '('
		//outgoingTransition+=Transition ("," outgoingTransition+=Transition)* ')')?
		public Group getGroup() { return cGroup; }
		
		//'state'
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }
		
		//initial?='initial'?
		public Assignment getInitialAssignment_1() { return cInitialAssignment_1; }
		
		//'initial'
		public Keyword getInitialInitialKeyword_1_0() { return cInitialInitialKeyword_1_0; }
		
		//final?='final'?
		public Assignment getFinalAssignment_2() { return cFinalAssignment_2; }
		
		//'final'
		public Keyword getFinalFinalKeyword_2_0() { return cFinalFinalKeyword_2_0; }
		
		//literal=[EnumerationLiteral|QualifiedID]
		public Assignment getLiteralAssignment_3() { return cLiteralAssignment_3; }
		
		//[EnumerationLiteral|QualifiedID]
		public CrossReference getLiteralEnumerationLiteralCrossReference_3_0() { return cLiteralEnumerationLiteralCrossReference_3_0; }
		
		//QualifiedID
		public RuleCall getLiteralEnumerationLiteralQualifiedIDParserRuleCall_3_0_1() { return cLiteralEnumerationLiteralQualifiedIDParserRuleCall_3_0_1; }
		
		//('transitions' '(' outgoingTransition+=Transition ("," outgoingTransition+=Transition)* ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'transitions'
		public Keyword getTransitionsKeyword_4_0() { return cTransitionsKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//outgoingTransition+=Transition
		public Assignment getOutgoingTransitionAssignment_4_2() { return cOutgoingTransitionAssignment_4_2; }
		
		//Transition
		public RuleCall getOutgoingTransitionTransitionParserRuleCall_4_2_0() { return cOutgoingTransitionTransitionParserRuleCall_4_2_0; }
		
		//("," outgoingTransition+=Transition)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//outgoingTransition+=Transition
		public Assignment getOutgoingTransitionAssignment_4_3_1() { return cOutgoingTransitionAssignment_4_3_1; }
		
		//Transition
		public RuleCall getOutgoingTransitionTransitionParserRuleCall_4_3_1_0() { return cOutgoingTransitionTransitionParserRuleCall_4_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
	}
	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cActionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cActionAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cActionActionCrossReference_0_1_0 = (CrossReference)cActionAssignment_0_1.eContents().get(0);
		private final RuleCall cActionActionQualifiedIDParserRuleCall_0_1_0_1 = (RuleCall)cActionActionCrossReference_0_1_0.eContents().get(1);
		private final Keyword cToKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTargetStateCrossReference_2_0 = (CrossReference)cTargetAssignment_2.eContents().get(0);
		private final RuleCall cTargetStateQualifiedIDParserRuleCall_2_0_1 = (RuleCall)cTargetStateCrossReference_2_0.eContents().get(1);
		
		//Transition:
		//	('action' action=[Action|QualifiedID])?
		//	'to' target=[State|QualifiedID];
		@Override public ParserRule getRule() { return rule; }
		
		//('action' action=[Action|QualifiedID])? 'to' target=[State|QualifiedID]
		public Group getGroup() { return cGroup; }
		
		//('action' action=[Action|QualifiedID])?
		public Group getGroup_0() { return cGroup_0; }
		
		//'action'
		public Keyword getActionKeyword_0_0() { return cActionKeyword_0_0; }
		
		//action=[Action|QualifiedID]
		public Assignment getActionAssignment_0_1() { return cActionAssignment_0_1; }
		
		//[Action|QualifiedID]
		public CrossReference getActionActionCrossReference_0_1_0() { return cActionActionCrossReference_0_1_0; }
		
		//QualifiedID
		public RuleCall getActionActionQualifiedIDParserRuleCall_0_1_0_1() { return cActionActionQualifiedIDParserRuleCall_0_1_0_1; }
		
		//'to'
		public Keyword getToKeyword_1() { return cToKeyword_1; }
		
		//target=[State|QualifiedID]
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//[State|QualifiedID]
		public CrossReference getTargetStateCrossReference_2_0() { return cTargetStateCrossReference_2_0; }
		
		//QualifiedID
		public RuleCall getTargetStateQualifiedIDParserRuleCall_2_0_1() { return cTargetStateQualifiedIDParserRuleCall_2_0_1; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEObjectTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBooleanTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNumericTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEnumerationTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRecordTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cArrayTypeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//DataType:
		//	StringType | EObjectType | BooleanType | NumericType | EnumerationType | RecordType | ArrayType;
		@Override public ParserRule getRule() { return rule; }
		
		//StringType | EObjectType | BooleanType | NumericType | EnumerationType | RecordType | ArrayType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_0() { return cStringTypeParserRuleCall_0; }
		
		//EObjectType
		public RuleCall getEObjectTypeParserRuleCall_1() { return cEObjectTypeParserRuleCall_1; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_2() { return cBooleanTypeParserRuleCall_2; }
		
		//NumericType
		public RuleCall getNumericTypeParserRuleCall_3() { return cNumericTypeParserRuleCall_3; }
		
		//EnumerationType
		public RuleCall getEnumerationTypeParserRuleCall_4() { return cEnumerationTypeParserRuleCall_4; }
		
		//RecordType
		public RuleCall getRecordTypeParserRuleCall_5() { return cRecordTypeParserRuleCall_5; }
		
		//ArrayType
		public RuleCall getArrayTypeParserRuleCall_6() { return cArrayTypeParserRuleCall_6; }
	}
	public class StringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.StringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStringTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTypeIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDocumentationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDocumentationAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPatternKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPatternAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPatternSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cPatternAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLengthKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLengthAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLengthEIntegerObjectParserRuleCall_4_1_0 = (RuleCall)cLengthAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMinLengthKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMinLengthAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMinLengthEIntegerObjectParserRuleCall_5_1_0 = (RuleCall)cMinLengthAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMaxLengthKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMaxLengthAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMaxLengthEIntegerObjectParserRuleCall_6_1_0 = (RuleCall)cMaxLengthAssignment_6_1.eContents().get(0);
		
		//StringType:
		//	'StringType'
		//	name=TypeID (':' documentation=STRING)? ('pattern' pattern=STRING)? ('length' length=EIntegerObject)? ('minLength'
		//	minLength=EIntegerObject)? ('maxLength' maxLength=EIntegerObject)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'StringType' name=TypeID (':' documentation=STRING)? ('pattern' pattern=STRING)? ('length' length=EIntegerObject)?
		//('minLength' minLength=EIntegerObject)? ('maxLength' maxLength=EIntegerObject)?
		public Group getGroup() { return cGroup; }
		
		//'StringType'
		public Keyword getStringTypeKeyword_0() { return cStringTypeKeyword_0; }
		
		//name=TypeID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//TypeID
		public RuleCall getNameTypeIDParserRuleCall_1_0() { return cNameTypeIDParserRuleCall_1_0; }
		
		//(':' documentation=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//documentation=STRING
		public Assignment getDocumentationAssignment_2_1() { return cDocumentationAssignment_2_1; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_2_1_0() { return cDocumentationSTRINGTerminalRuleCall_2_1_0; }
		
		//('pattern' pattern=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'pattern'
		public Keyword getPatternKeyword_3_0() { return cPatternKeyword_3_0; }
		
		//pattern=STRING
		public Assignment getPatternAssignment_3_1() { return cPatternAssignment_3_1; }
		
		//STRING
		public RuleCall getPatternSTRINGTerminalRuleCall_3_1_0() { return cPatternSTRINGTerminalRuleCall_3_1_0; }
		
		//('length' length=EIntegerObject)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'length'
		public Keyword getLengthKeyword_4_0() { return cLengthKeyword_4_0; }
		
		//length=EIntegerObject
		public Assignment getLengthAssignment_4_1() { return cLengthAssignment_4_1; }
		
		//EIntegerObject
		public RuleCall getLengthEIntegerObjectParserRuleCall_4_1_0() { return cLengthEIntegerObjectParserRuleCall_4_1_0; }
		
		//('minLength' minLength=EIntegerObject)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'minLength'
		public Keyword getMinLengthKeyword_5_0() { return cMinLengthKeyword_5_0; }
		
		//minLength=EIntegerObject
		public Assignment getMinLengthAssignment_5_1() { return cMinLengthAssignment_5_1; }
		
		//EIntegerObject
		public RuleCall getMinLengthEIntegerObjectParserRuleCall_5_1_0() { return cMinLengthEIntegerObjectParserRuleCall_5_1_0; }
		
		//('maxLength' maxLength=EIntegerObject)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'maxLength'
		public Keyword getMaxLengthKeyword_6_0() { return cMaxLengthKeyword_6_0; }
		
		//maxLength=EIntegerObject
		public Assignment getMaxLengthAssignment_6_1() { return cMaxLengthAssignment_6_1; }
		
		//EIntegerObject
		public RuleCall getMaxLengthEIntegerObjectParserRuleCall_6_1_0() { return cMaxLengthEIntegerObjectParserRuleCall_6_1_0; }
	}
	public class EObjectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.EObjectType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEObjectTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTypeIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDocumentationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDocumentationAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInstanceClassNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInstanceClassNameSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cInstanceClassNameAssignment_3_1.eContents().get(0);
		
		//EObjectType:
		//	'EObjectType'
		//	name=TypeID (':' documentation=STRING)? ('type' instanceClassName=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'EObjectType' name=TypeID (':' documentation=STRING)? ('type' instanceClassName=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'EObjectType'
		public Keyword getEObjectTypeKeyword_0() { return cEObjectTypeKeyword_0; }
		
		//name=TypeID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//TypeID
		public RuleCall getNameTypeIDParserRuleCall_1_0() { return cNameTypeIDParserRuleCall_1_0; }
		
		//(':' documentation=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//documentation=STRING
		public Assignment getDocumentationAssignment_2_1() { return cDocumentationAssignment_2_1; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_2_1_0() { return cDocumentationSTRINGTerminalRuleCall_2_1_0; }
		
		//('type' instanceClassName=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//instanceClassName=STRING
		public Assignment getInstanceClassNameAssignment_3_1() { return cInstanceClassNameAssignment_3_1; }
		
		//STRING
		public RuleCall getInstanceClassNameSTRINGTerminalRuleCall_3_1_0() { return cInstanceClassNameSTRINGTerminalRuleCall_3_1_0; }
	}
	public class BooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.BooleanType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBooleanTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTypeIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDocumentationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDocumentationAssignment_2_1.eContents().get(0);
		
		//BooleanType:
		//	'BooleanType'
		//	name=TypeID (':' documentation=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'BooleanType' name=TypeID (':' documentation=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'BooleanType'
		public Keyword getBooleanTypeKeyword_0() { return cBooleanTypeKeyword_0; }
		
		//name=TypeID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//TypeID
		public RuleCall getNameTypeIDParserRuleCall_1_0() { return cNameTypeIDParserRuleCall_1_0; }
		
		//(':' documentation=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//documentation=STRING
		public Assignment getDocumentationAssignment_2_1() { return cDocumentationAssignment_2_1; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_2_1_0() { return cDocumentationSTRINGTerminalRuleCall_2_1_0; }
	}
	public class NumericTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.NumericType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumericTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTypeIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeNumericTypeEnumEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDocumentationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDocumentationAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTotalDigitsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTotalDigitsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTotalDigitsEIntegerObjectParserRuleCall_5_1_0 = (RuleCall)cTotalDigitsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMinExclusiveKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMinExclusiveAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMinExclusiveSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cMinExclusiveAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMaxExclusiveKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMaxExclusiveAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMaxExclusiveSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cMaxExclusiveAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cMinInclusiveKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cMinInclusiveAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cMinInclusiveSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cMinInclusiveAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cMaxInclusiveKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cMaxInclusiveAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cMaxInclusiveSTRINGTerminalRuleCall_9_1_0 = (RuleCall)cMaxInclusiveAssignment_9_1.eContents().get(0);
		
		//NumericType:
		//	'NumericType'
		//	name=TypeID 'type' type=NumericTypeEnum (':' documentation=STRING)? ('totalDigits' totalDigits=EIntegerObject)?
		//	('minExclusive' minExclusive=STRING)? ('maxExclusive' maxExclusive=STRING)? ('minInclusive' minInclusive=STRING)?
		//	('maxInclusive' maxInclusive=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'NumericType' name=TypeID 'type' type=NumericTypeEnum (':' documentation=STRING)? ('totalDigits'
		//totalDigits=EIntegerObject)? ('minExclusive' minExclusive=STRING)? ('maxExclusive' maxExclusive=STRING)?
		//('minInclusive' minInclusive=STRING)? ('maxInclusive' maxInclusive=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'NumericType'
		public Keyword getNumericTypeKeyword_0() { return cNumericTypeKeyword_0; }
		
		//name=TypeID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//TypeID
		public RuleCall getNameTypeIDParserRuleCall_1_0() { return cNameTypeIDParserRuleCall_1_0; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=NumericTypeEnum
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//NumericTypeEnum
		public RuleCall getTypeNumericTypeEnumEnumRuleCall_3_0() { return cTypeNumericTypeEnumEnumRuleCall_3_0; }
		
		//(':' documentation=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//':'
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }
		
		//documentation=STRING
		public Assignment getDocumentationAssignment_4_1() { return cDocumentationAssignment_4_1; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_1_0() { return cDocumentationSTRINGTerminalRuleCall_4_1_0; }
		
		//('totalDigits' totalDigits=EIntegerObject)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'totalDigits'
		public Keyword getTotalDigitsKeyword_5_0() { return cTotalDigitsKeyword_5_0; }
		
		//totalDigits=EIntegerObject
		public Assignment getTotalDigitsAssignment_5_1() { return cTotalDigitsAssignment_5_1; }
		
		//EIntegerObject
		public RuleCall getTotalDigitsEIntegerObjectParserRuleCall_5_1_0() { return cTotalDigitsEIntegerObjectParserRuleCall_5_1_0; }
		
		//('minExclusive' minExclusive=STRING)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'minExclusive'
		public Keyword getMinExclusiveKeyword_6_0() { return cMinExclusiveKeyword_6_0; }
		
		//minExclusive=STRING
		public Assignment getMinExclusiveAssignment_6_1() { return cMinExclusiveAssignment_6_1; }
		
		//STRING
		public RuleCall getMinExclusiveSTRINGTerminalRuleCall_6_1_0() { return cMinExclusiveSTRINGTerminalRuleCall_6_1_0; }
		
		//('maxExclusive' maxExclusive=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'maxExclusive'
		public Keyword getMaxExclusiveKeyword_7_0() { return cMaxExclusiveKeyword_7_0; }
		
		//maxExclusive=STRING
		public Assignment getMaxExclusiveAssignment_7_1() { return cMaxExclusiveAssignment_7_1; }
		
		//STRING
		public RuleCall getMaxExclusiveSTRINGTerminalRuleCall_7_1_0() { return cMaxExclusiveSTRINGTerminalRuleCall_7_1_0; }
		
		//('minInclusive' minInclusive=STRING)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'minInclusive'
		public Keyword getMinInclusiveKeyword_8_0() { return cMinInclusiveKeyword_8_0; }
		
		//minInclusive=STRING
		public Assignment getMinInclusiveAssignment_8_1() { return cMinInclusiveAssignment_8_1; }
		
		//STRING
		public RuleCall getMinInclusiveSTRINGTerminalRuleCall_8_1_0() { return cMinInclusiveSTRINGTerminalRuleCall_8_1_0; }
		
		//('maxInclusive' maxInclusive=STRING)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'maxInclusive'
		public Keyword getMaxInclusiveKeyword_9_0() { return cMaxInclusiveKeyword_9_0; }
		
		//maxInclusive=STRING
		public Assignment getMaxInclusiveAssignment_9_1() { return cMaxInclusiveAssignment_9_1; }
		
		//STRING
		public RuleCall getMaxInclusiveSTRINGTerminalRuleCall_9_1_0() { return cMaxInclusiveSTRINGTerminalRuleCall_9_1_0; }
	}
	public class EnumerationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.EnumerationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumerationTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTypeIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDocumentationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDocumentationAssignment_2_1.eContents().get(0);
		private final Keyword cLiteralsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLiteralsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLiteralsEnumerationLiteralParserRuleCall_5_0 = (RuleCall)cLiteralsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cLiteralsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cLiteralsEnumerationLiteralParserRuleCall_6_1_0 = (RuleCall)cLiteralsAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//EnumerationType:
		//	'EnumerationType'
		//	name=TypeID (':' documentation=STRING)?
		//	'literals' '(' literals+=EnumerationLiteral ("," literals+=EnumerationLiteral)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'EnumerationType' name=TypeID (':' documentation=STRING)? 'literals' '(' literals+=EnumerationLiteral (","
		//literals+=EnumerationLiteral)* ')'
		public Group getGroup() { return cGroup; }
		
		//'EnumerationType'
		public Keyword getEnumerationTypeKeyword_0() { return cEnumerationTypeKeyword_0; }
		
		//name=TypeID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//TypeID
		public RuleCall getNameTypeIDParserRuleCall_1_0() { return cNameTypeIDParserRuleCall_1_0; }
		
		//(':' documentation=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//documentation=STRING
		public Assignment getDocumentationAssignment_2_1() { return cDocumentationAssignment_2_1; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_2_1_0() { return cDocumentationSTRINGTerminalRuleCall_2_1_0; }
		
		//'literals'
		public Keyword getLiteralsKeyword_3() { return cLiteralsKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//literals+=EnumerationLiteral
		public Assignment getLiteralsAssignment_5() { return cLiteralsAssignment_5; }
		
		//EnumerationLiteral
		public RuleCall getLiteralsEnumerationLiteralParserRuleCall_5_0() { return cLiteralsEnumerationLiteralParserRuleCall_5_0; }
		
		//("," literals+=EnumerationLiteral)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//literals+=EnumerationLiteral
		public Assignment getLiteralsAssignment_6_1() { return cLiteralsAssignment_6_1; }
		
		//EnumerationLiteral
		public RuleCall getLiteralsEnumerationLiteralParserRuleCall_6_1_0() { return cLiteralsEnumerationLiteralParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class EnumerationLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.EnumerationLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameTypeIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDocumentationAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cDocumentationAssignment_1_1.eContents().get(0);
		
		//EnumerationLiteral:
		//	name=TypeID (':' documentation=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=TypeID (':' documentation=STRING)?
		public Group getGroup() { return cGroup; }
		
		//name=TypeID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//TypeID
		public RuleCall getNameTypeIDParserRuleCall_0_0() { return cNameTypeIDParserRuleCall_0_0; }
		
		//(':' documentation=STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//':'
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }
		
		//documentation=STRING
		public Assignment getDocumentationAssignment_1_1() { return cDocumentationAssignment_1_1; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_1_1_0() { return cDocumentationSTRINGTerminalRuleCall_1_1_0; }
	}
	public class RecordTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.RecordType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRecordKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTypeIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDocumentationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDocumentationAssignment_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRecordFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRecordFieldsRecordFieldParserRuleCall_4_0 = (RuleCall)cRecordFieldsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRecordFieldsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRecordFieldsRecordFieldParserRuleCall_5_1_0 = (RuleCall)cRecordFieldsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RecordType:
		//	'record'
		//	name=TypeID (':' documentation=STRING)?
		//	'{' recordFields+=RecordField ("," recordFields+=RecordField)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'record' name=TypeID (':' documentation=STRING)? '{' recordFields+=RecordField ("," recordFields+=RecordField)* '}'
		public Group getGroup() { return cGroup; }
		
		//'record'
		public Keyword getRecordKeyword_0() { return cRecordKeyword_0; }
		
		//name=TypeID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//TypeID
		public RuleCall getNameTypeIDParserRuleCall_1_0() { return cNameTypeIDParserRuleCall_1_0; }
		
		//(':' documentation=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//documentation=STRING
		public Assignment getDocumentationAssignment_2_1() { return cDocumentationAssignment_2_1; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_2_1_0() { return cDocumentationSTRINGTerminalRuleCall_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//recordFields+=RecordField
		public Assignment getRecordFieldsAssignment_4() { return cRecordFieldsAssignment_4; }
		
		//RecordField
		public RuleCall getRecordFieldsRecordFieldParserRuleCall_4_0() { return cRecordFieldsRecordFieldParserRuleCall_4_0; }
		
		//("," recordFields+=RecordField)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//recordFields+=RecordField
		public Assignment getRecordFieldsAssignment_5_1() { return cRecordFieldsAssignment_5_1; }
		
		//RecordField
		public RuleCall getRecordFieldsRecordFieldParserRuleCall_5_1_0() { return cRecordFieldsRecordFieldParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RecordFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.RecordField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMutableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cMutableMutableKeyword_0_0 = (Keyword)cMutableAssignment_0.eContents().get(0);
		private final Assignment cRequiredAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cRequiredRequiredKeyword_1_0 = (Keyword)cRequiredAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameQualifiedIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTypeDataTypeCrossReference_3_1_0 = (CrossReference)cTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cTypeDataTypeQualifiedIDParserRuleCall_3_1_0_1 = (RuleCall)cTypeDataTypeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefaultAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDefaultSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDefaultAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDescriptionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDescriptionAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAnnotationsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cAnnotationsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_6_2_0 = (RuleCall)cAnnotationsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cAnnotationsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_6_3_1_0 = (RuleCall)cAnnotationsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		
		//RecordField:
		//	mutable?='mutable'?
		//	required?='required'?
		//	name=QualifiedID (':' type=[DataType|QualifiedID]) ('=' default=STRING)? ('description' description=STRING)?
		//	('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//mutable?='mutable'? required?='required'? name=QualifiedID (':' type=[DataType|QualifiedID]) ('=' default=STRING)?
		//('description' description=STRING)? ('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup() { return cGroup; }
		
		//mutable?='mutable'?
		public Assignment getMutableAssignment_0() { return cMutableAssignment_0; }
		
		//'mutable'
		public Keyword getMutableMutableKeyword_0_0() { return cMutableMutableKeyword_0_0; }
		
		//required?='required'?
		public Assignment getRequiredAssignment_1() { return cRequiredAssignment_1; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_1_0() { return cRequiredRequiredKeyword_1_0; }
		
		//name=QualifiedID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//QualifiedID
		public RuleCall getNameQualifiedIDParserRuleCall_2_0() { return cNameQualifiedIDParserRuleCall_2_0; }
		
		//':' type=[DataType|QualifiedID]
		public Group getGroup_3() { return cGroup_3; }
		
		//':'
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }
		
		//type=[DataType|QualifiedID]
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//[DataType|QualifiedID]
		public CrossReference getTypeDataTypeCrossReference_3_1_0() { return cTypeDataTypeCrossReference_3_1_0; }
		
		//QualifiedID
		public RuleCall getTypeDataTypeQualifiedIDParserRuleCall_3_1_0_1() { return cTypeDataTypeQualifiedIDParserRuleCall_3_1_0_1; }
		
		//('=' default=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0() { return cEqualsSignKeyword_4_0; }
		
		//default=STRING
		public Assignment getDefaultAssignment_4_1() { return cDefaultAssignment_4_1; }
		
		//STRING
		public RuleCall getDefaultSTRINGTerminalRuleCall_4_1_0() { return cDefaultSTRINGTerminalRuleCall_4_1_0; }
		
		//('description' description=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'description'
		public Keyword getDescriptionKeyword_5_0() { return cDescriptionKeyword_5_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_5_1() { return cDescriptionAssignment_5_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_1_0() { return cDescriptionSTRINGTerminalRuleCall_5_1_0; }
		
		//('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'annotations'
		public Keyword getAnnotationsKeyword_6_0() { return cAnnotationsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_6_2() { return cAnnotationsAssignment_6_2; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_6_2_0() { return cAnnotationsAnnotationParserRuleCall_6_2_0; }
		
		//("," annotations+=Annotation)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//annotations+=Annotation
		public Assignment getAnnotationsAssignment_6_3_1() { return cAnnotationsAssignment_6_3_1; }
		
		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_6_3_1_0() { return cAnnotationsAnnotationParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
	}
	public class ArrayTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.ArrayType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArrayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTypeIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeDataTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeDataTypeQualifiedIDParserRuleCall_3_0_1 = (RuleCall)cTypeDataTypeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDocumentationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDocumentationSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDocumentationAssignment_4_1.eContents().get(0);
		
		//ArrayType:
		//	'array'
		//	name=TypeID ':' type=[DataType|QualifiedID] (':' documentation=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'array' name=TypeID ':' type=[DataType|QualifiedID] (':' documentation=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'array'
		public Keyword getArrayKeyword_0() { return cArrayKeyword_0; }
		
		//name=TypeID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//TypeID
		public RuleCall getNameTypeIDParserRuleCall_1_0() { return cNameTypeIDParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=[DataType|QualifiedID]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[DataType|QualifiedID]
		public CrossReference getTypeDataTypeCrossReference_3_0() { return cTypeDataTypeCrossReference_3_0; }
		
		//QualifiedID
		public RuleCall getTypeDataTypeQualifiedIDParserRuleCall_3_0_1() { return cTypeDataTypeQualifiedIDParserRuleCall_3_0_1; }
		
		//(':' documentation=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//':'
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }
		
		//documentation=STRING
		public Assignment getDocumentationAssignment_4_1() { return cDocumentationAssignment_4_1; }
		
		//STRING
		public RuleCall getDocumentationSTRINGTerminalRuleCall_4_1_0() { return cDocumentationSTRINGTerminalRuleCall_4_1_0; }
	}
	public class EIntegerObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.EIntegerObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EIntegerObject ecore::EIntegerObject:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class TypeIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.TypeID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeID:
		//	ID | KEYWORD;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class QualifiedIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.QualifiedID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQUALIFIED_IDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cKEYWORDParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//QualifiedID:
		//	ID | QUALIFIED_ID | KEYWORD;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | QUALIFIED_ID | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//QUALIFIED_ID
		public RuleCall getQUALIFIED_IDTerminalRuleCall_1() { return cQUALIFIED_IDTerminalRuleCall_1; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_2() { return cKEYWORDParserRuleCall_2; }
	}
	public class NameIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.NameID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0_1_0 = (RuleCall)cAlternatives_0_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NameID:
		//	ID (ID | '-')* | KEYWORD;
		@Override public ParserRule getRule() { return rule; }
		
		//ID (ID | '-')* | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID (ID | '-')*
		public Group getGroup_0() { return cGroup_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }
		
		//(ID | '-')*
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0_1_0() { return cIDTerminalRuleCall_0_1_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0_1_1() { return cHyphenMinusKeyword_0_1_1; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class KEYWORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.KEYWORD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cConfigurationKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cDescriptionKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cLocationKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cUseKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cResourceKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cTitleKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cSummaryKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cPartsKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cLinkKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cKindKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cTargetKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cMixinKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cAttributeKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cExtensionKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cSpecificationKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cImportKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cAsKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cExtendsKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cSourceKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cSchemeKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cAnnotationsKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cDependsKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Keyword cAppliesKeyword_22 = (Keyword)cAlternatives.eContents().get(22);
		private final Keyword cKeyKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cValueKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cMutableKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cRequiredKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cActionKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cConstraintKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cBodyKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		private final Keyword cFSMKeyword_30 = (Keyword)cAlternatives.eContents().get(30);
		private final Keyword cStateKeyword_31 = (Keyword)cAlternatives.eContents().get(31);
		private final Keyword cInitialKeyword_32 = (Keyword)cAlternatives.eContents().get(32);
		private final Keyword cFinalKeyword_33 = (Keyword)cAlternatives.eContents().get(33);
		private final Keyword cTransitionsKeyword_34 = (Keyword)cAlternatives.eContents().get(34);
		private final Keyword cToKeyword_35 = (Keyword)cAlternatives.eContents().get(35);
		private final Keyword cStringTypeKeyword_36 = (Keyword)cAlternatives.eContents().get(36);
		private final Keyword cPatternKeyword_37 = (Keyword)cAlternatives.eContents().get(37);
		private final Keyword cLengthKeyword_38 = (Keyword)cAlternatives.eContents().get(38);
		private final Keyword cMinLengthKeyword_39 = (Keyword)cAlternatives.eContents().get(39);
		private final Keyword cMaxLengthKeyword_40 = (Keyword)cAlternatives.eContents().get(40);
		private final Keyword cEObjectTypeKeyword_41 = (Keyword)cAlternatives.eContents().get(41);
		private final Keyword cTypeKeyword_42 = (Keyword)cAlternatives.eContents().get(42);
		private final Keyword cBooleanTypeKeyword_43 = (Keyword)cAlternatives.eContents().get(43);
		private final Keyword cNumericTypeKeyword_44 = (Keyword)cAlternatives.eContents().get(44);
		private final Keyword cTotalDigitsKeyword_45 = (Keyword)cAlternatives.eContents().get(45);
		private final Keyword cMinExclusiveKeyword_46 = (Keyword)cAlternatives.eContents().get(46);
		private final Keyword cMaxExclusiveKeyword_47 = (Keyword)cAlternatives.eContents().get(47);
		private final Keyword cMinInclusiveKeyword_48 = (Keyword)cAlternatives.eContents().get(48);
		private final Keyword cMaxInclusiveKeyword_49 = (Keyword)cAlternatives.eContents().get(49);
		private final Keyword cByteKeyword_50 = (Keyword)cAlternatives.eContents().get(50);
		private final Keyword cDoubleKeyword_51 = (Keyword)cAlternatives.eContents().get(51);
		private final Keyword cFloatKeyword_52 = (Keyword)cAlternatives.eContents().get(52);
		private final Keyword cIntegerKeyword_53 = (Keyword)cAlternatives.eContents().get(53);
		private final Keyword cLongKeyword_54 = (Keyword)cAlternatives.eContents().get(54);
		private final Keyword cShortKeyword_55 = (Keyword)cAlternatives.eContents().get(55);
		private final Keyword cBigDecimalKeyword_56 = (Keyword)cAlternatives.eContents().get(56);
		private final Keyword cEnumerationTypeKeyword_57 = (Keyword)cAlternatives.eContents().get(57);
		private final Keyword cLiteralsKeyword_58 = (Keyword)cAlternatives.eContents().get(58);
		private final Keyword cRecordKeyword_59 = (Keyword)cAlternatives.eContents().get(59);
		private final Keyword cArrayKeyword_60 = (Keyword)cAlternatives.eContents().get(60);
		
		//KEYWORD: // Configuration
		//	'configuration' | 'description' | 'location' | 'use' | // Resource
		//	'resource' | 'title' | 'summary' | 'parts' | //‘location’|
		//	// Link
		//	'link' | 'kind' | 'target' | // 'title'| 'location'|
		//	// MixinBase
		//	'mixin' | // AttributeState
		//	'attribute' | // Extension
		//	'extension' | 'specification' | 'import' | 'as' | //'description'|
		//	// Kind
		//	'extends' | 'source' | 'scheme' | 'annotations' | // 'kind' |'target' | 'title'|
		//	// Mixin
		//	'depends' | 'applies' | // 'mixin' | 'scheme' | 'title'| 'annotations' |
		//	// Annotation
		//	'key' | 'value' | // Attribute
		//	'mutable' | 'required' | // 'attribute' |'description'| 'annotations' |
		//	// Action
		//	'action' | // 'scheme' | 'title'| 'annotations' |
		//	// ParameterDecl
		//	// Constraint
		//	'constraint' | 'body' | // 'description'| 
		//	// FSM
		//	'FSM' | // 'attribute'|
		//	// State
		//	'state' | 'initial' | 'final' | 'transitions' | // Transition
		//	'to' | // 'action'|
		//	// DataType
		//	// StringType
		//	'StringType' | 'pattern' | 'length' | 'minLength' | 'maxLength' | // EObjectType
		//	'EObjectType' | 'type' | // BooleanType
		//	'BooleanType' | // NumericType
		//	'NumericType' | 'totalDigits' | 'minExclusive' | 'maxExclusive' | 'minInclusive' | 'maxInclusive' | // 'type' | 
		//	// NumericTypeEnum
		//	'Byte' | 'Double' | 'Float' | 'Integer' | 'Long' | 'Short' | 'BigDecimal' | // EnumerationType
		//	'EnumerationType' | 'literals' | //EnumerationLiteral
		//	//  
		//	// RecordType
		//	'record' | // RecordField
		//	// 'mutable'| 'required' | 'description'| 'annotations'
		//	// ArrayType
		//	'array';
		@Override public ParserRule getRule() { return rule; }
		
		//// Configuration
		//'configuration' | 'description' | 'location' | 'use' | // Resource
		//'resource' | 'title' | 'summary' | 'parts' | //‘location’|
		//// Link
		//'link' | 'kind' | 'target' | // 'title'| 'location'|
		//// MixinBase
		//'mixin' | // AttributeState
		//'attribute' | // Extension
		//'extension' | 'specification' | 'import' | 'as' | //'description'|
		//// Kind
		//'extends' | 'source' | 'scheme' | 'annotations' | // 'kind' |'target' | 'title'|
		//// Mixin
		//'depends' | 'applies' | // 'mixin' | 'scheme' | 'title'| 'annotations' |
		//// Annotation
		//'key' | 'value' | // Attribute
		//'mutable' | 'required' | // 'attribute' |'description'| 'annotations' |
		//// Action
		//'action' | // 'scheme' | 'title'| 'annotations' |
		//// ParameterDecl
		//// Constraint
		//'constraint' | 'body' | // 'description'| 
		//// FSM
		//'FSM' | // 'attribute'|
		//// State
		//'state' | 'initial' | 'final' | 'transitions' | // Transition
		//'to' | // 'action'|
		//// DataType
		//// StringType
		//'StringType' | 'pattern' | 'length' | 'minLength' | 'maxLength' | // EObjectType
		//'EObjectType' | 'type' | // BooleanType
		//'BooleanType' | // NumericType
		//'NumericType' | 'totalDigits' | 'minExclusive' | 'maxExclusive' | 'minInclusive' | 'maxInclusive' | // 'type' | 
		//// NumericTypeEnum
		//'Byte' | 'Double' | 'Float' | 'Integer' | 'Long' | 'Short' | 'BigDecimal' | // EnumerationType
		//'EnumerationType' | 'literals' | //EnumerationLiteral
		////  
		//// RecordType
		//'record' | // RecordField
		//// 'mutable'| 'required' | 'description'| 'annotations'
		//// ArrayType
		//'array'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//// Configuration
		//'configuration'
		public Keyword getConfigurationKeyword_0() { return cConfigurationKeyword_0; }
		
		//'description'
		public Keyword getDescriptionKeyword_1() { return cDescriptionKeyword_1; }
		
		//'location'
		public Keyword getLocationKeyword_2() { return cLocationKeyword_2; }
		
		//'use'
		public Keyword getUseKeyword_3() { return cUseKeyword_3; }
		
		//// Resource
		//'resource'
		public Keyword getResourceKeyword_4() { return cResourceKeyword_4; }
		
		//'title'
		public Keyword getTitleKeyword_5() { return cTitleKeyword_5; }
		
		//'summary'
		public Keyword getSummaryKeyword_6() { return cSummaryKeyword_6; }
		
		//'parts'
		public Keyword getPartsKeyword_7() { return cPartsKeyword_7; }
		
		////‘location’|
		//// Link
		//'link'
		public Keyword getLinkKeyword_8() { return cLinkKeyword_8; }
		
		//'kind'
		public Keyword getKindKeyword_9() { return cKindKeyword_9; }
		
		//'target'
		public Keyword getTargetKeyword_10() { return cTargetKeyword_10; }
		
		//// 'title'| 'location'|
		//// MixinBase
		//'mixin'
		public Keyword getMixinKeyword_11() { return cMixinKeyword_11; }
		
		//// AttributeState
		//'attribute'
		public Keyword getAttributeKeyword_12() { return cAttributeKeyword_12; }
		
		//// Extension
		//'extension'
		public Keyword getExtensionKeyword_13() { return cExtensionKeyword_13; }
		
		//'specification'
		public Keyword getSpecificationKeyword_14() { return cSpecificationKeyword_14; }
		
		//'import'
		public Keyword getImportKeyword_15() { return cImportKeyword_15; }
		
		//'as'
		public Keyword getAsKeyword_16() { return cAsKeyword_16; }
		
		////'description'|
		//// Kind
		//'extends'
		public Keyword getExtendsKeyword_17() { return cExtendsKeyword_17; }
		
		//'source'
		public Keyword getSourceKeyword_18() { return cSourceKeyword_18; }
		
		//'scheme'
		public Keyword getSchemeKeyword_19() { return cSchemeKeyword_19; }
		
		//'annotations'
		public Keyword getAnnotationsKeyword_20() { return cAnnotationsKeyword_20; }
		
		//// 'kind' |'target' | 'title'|
		//// Mixin
		//'depends'
		public Keyword getDependsKeyword_21() { return cDependsKeyword_21; }
		
		//'applies'
		public Keyword getAppliesKeyword_22() { return cAppliesKeyword_22; }
		
		//// 'mixin' | 'scheme' | 'title'| 'annotations' |
		//// Annotation
		//'key'
		public Keyword getKeyKeyword_23() { return cKeyKeyword_23; }
		
		//'value'
		public Keyword getValueKeyword_24() { return cValueKeyword_24; }
		
		//// Attribute
		//'mutable'
		public Keyword getMutableKeyword_25() { return cMutableKeyword_25; }
		
		//'required'
		public Keyword getRequiredKeyword_26() { return cRequiredKeyword_26; }
		
		//// 'attribute' |'description'| 'annotations' |
		//// Action
		//'action'
		public Keyword getActionKeyword_27() { return cActionKeyword_27; }
		
		//// 'scheme' | 'title'| 'annotations' |
		//// ParameterDecl
		//// Constraint
		//'constraint'
		public Keyword getConstraintKeyword_28() { return cConstraintKeyword_28; }
		
		//'body'
		public Keyword getBodyKeyword_29() { return cBodyKeyword_29; }
		
		//// 'description'| 
		//// FSM
		//'FSM'
		public Keyword getFSMKeyword_30() { return cFSMKeyword_30; }
		
		//// 'attribute'|
		//// State
		//'state'
		public Keyword getStateKeyword_31() { return cStateKeyword_31; }
		
		//'initial'
		public Keyword getInitialKeyword_32() { return cInitialKeyword_32; }
		
		//'final'
		public Keyword getFinalKeyword_33() { return cFinalKeyword_33; }
		
		//'transitions'
		public Keyword getTransitionsKeyword_34() { return cTransitionsKeyword_34; }
		
		//// Transition
		//'to'
		public Keyword getToKeyword_35() { return cToKeyword_35; }
		
		//// 'action'|
		//// DataType
		//// StringType
		//'StringType'
		public Keyword getStringTypeKeyword_36() { return cStringTypeKeyword_36; }
		
		//'pattern'
		public Keyword getPatternKeyword_37() { return cPatternKeyword_37; }
		
		//'length'
		public Keyword getLengthKeyword_38() { return cLengthKeyword_38; }
		
		//'minLength'
		public Keyword getMinLengthKeyword_39() { return cMinLengthKeyword_39; }
		
		//'maxLength'
		public Keyword getMaxLengthKeyword_40() { return cMaxLengthKeyword_40; }
		
		//// EObjectType
		//'EObjectType'
		public Keyword getEObjectTypeKeyword_41() { return cEObjectTypeKeyword_41; }
		
		//'type'
		public Keyword getTypeKeyword_42() { return cTypeKeyword_42; }
		
		//// BooleanType
		//'BooleanType'
		public Keyword getBooleanTypeKeyword_43() { return cBooleanTypeKeyword_43; }
		
		//// NumericType
		//'NumericType'
		public Keyword getNumericTypeKeyword_44() { return cNumericTypeKeyword_44; }
		
		//'totalDigits'
		public Keyword getTotalDigitsKeyword_45() { return cTotalDigitsKeyword_45; }
		
		//'minExclusive'
		public Keyword getMinExclusiveKeyword_46() { return cMinExclusiveKeyword_46; }
		
		//'maxExclusive'
		public Keyword getMaxExclusiveKeyword_47() { return cMaxExclusiveKeyword_47; }
		
		//'minInclusive'
		public Keyword getMinInclusiveKeyword_48() { return cMinInclusiveKeyword_48; }
		
		//'maxInclusive'
		public Keyword getMaxInclusiveKeyword_49() { return cMaxInclusiveKeyword_49; }
		
		//// 'type' | 
		//// NumericTypeEnum
		//'Byte'
		public Keyword getByteKeyword_50() { return cByteKeyword_50; }
		
		//'Double'
		public Keyword getDoubleKeyword_51() { return cDoubleKeyword_51; }
		
		//'Float'
		public Keyword getFloatKeyword_52() { return cFloatKeyword_52; }
		
		//'Integer'
		public Keyword getIntegerKeyword_53() { return cIntegerKeyword_53; }
		
		//'Long'
		public Keyword getLongKeyword_54() { return cLongKeyword_54; }
		
		//'Short'
		public Keyword getShortKeyword_55() { return cShortKeyword_55; }
		
		//'BigDecimal'
		public Keyword getBigDecimalKeyword_56() { return cBigDecimalKeyword_56; }
		
		//// EnumerationType
		//'EnumerationType'
		public Keyword getEnumerationTypeKeyword_57() { return cEnumerationTypeKeyword_57; }
		
		//'literals'
		public Keyword getLiteralsKeyword_58() { return cLiteralsKeyword_58; }
		
		////EnumerationLiteral
		////  
		//// RecordType
		//'record'
		public Keyword getRecordKeyword_59() { return cRecordKeyword_59; }
		
		//// RecordField
		//// 'mutable'| 'required' | 'description'| 'annotations'
		//// ArrayType
		//'array'
		public Keyword getArrayKeyword_60() { return cArrayKeyword_60; }
	}
	
	public class NumericTypeEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.NumericTypeEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cByteEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cByteByteKeyword_0_0 = (Keyword)cByteEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDoubleDoubleKeyword_1_0 = (Keyword)cDoubleEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFloatFloatKeyword_2_0 = (Keyword)cFloatEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIntegerIntegerKeyword_3_0 = (Keyword)cIntegerEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLongEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLongLongKeyword_4_0 = (Keyword)cLongEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cShortEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cShortShortKeyword_5_0 = (Keyword)cShortEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cBigDecimalEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cBigDecimalBigDecimalKeyword_6_0 = (Keyword)cBigDecimalEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum NumericTypeEnum:
		//	Byte | Double | Float | Integer | Long | Short |
		//	BigDecimal;
		public EnumRule getRule() { return rule; }
		
		//Byte | Double | Float | Integer | Long | Short | BigDecimal
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Byte
		public EnumLiteralDeclaration getByteEnumLiteralDeclaration_0() { return cByteEnumLiteralDeclaration_0; }
		
		//'Byte'
		public Keyword getByteByteKeyword_0_0() { return cByteByteKeyword_0_0; }
		
		//Double
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_1() { return cDoubleEnumLiteralDeclaration_1; }
		
		//'Double'
		public Keyword getDoubleDoubleKeyword_1_0() { return cDoubleDoubleKeyword_1_0; }
		
		//Float
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_2() { return cFloatEnumLiteralDeclaration_2; }
		
		//'Float'
		public Keyword getFloatFloatKeyword_2_0() { return cFloatFloatKeyword_2_0; }
		
		//Integer
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_3() { return cIntegerEnumLiteralDeclaration_3; }
		
		//'Integer'
		public Keyword getIntegerIntegerKeyword_3_0() { return cIntegerIntegerKeyword_3_0; }
		
		//Long
		public EnumLiteralDeclaration getLongEnumLiteralDeclaration_4() { return cLongEnumLiteralDeclaration_4; }
		
		//'Long'
		public Keyword getLongLongKeyword_4_0() { return cLongLongKeyword_4_0; }
		
		//Short
		public EnumLiteralDeclaration getShortEnumLiteralDeclaration_5() { return cShortEnumLiteralDeclaration_5; }
		
		//'Short'
		public Keyword getShortShortKeyword_5_0() { return cShortShortKeyword_5_0; }
		
		//BigDecimal
		public EnumLiteralDeclaration getBigDecimalEnumLiteralDeclaration_6() { return cBigDecimalEnumLiteralDeclaration_6; }
		
		//'BigDecimal'
		public Keyword getBigDecimalBigDecimalKeyword_6_0() { return cBigDecimalBigDecimalKeyword_6_0; }
	}
	
	private final GrammarElements pGrammar;
	private final ConfigurationElements pConfiguration;
	private final ResourceElements pResource;
	private final LinkElements pLink;
	private final MixinBaseElements pMixinBase;
	private final AttributeStateElements pAttributeState;
	private final ExtensionElements pExtension;
	private final KindElements pKind;
	private final MixinElements pMixin;
	private final AnnotationElements pAnnotation;
	private final AttributeElements pAttribute;
	private final ActionElements pAction;
	private final ParameterDeclElements pParameterDecl;
	private final ConstraintElements pConstraint;
	private final FSMElements pFSM;
	private final StateElements pState;
	private final TransitionElements pTransition;
	private final DataTypeElements pDataType;
	private final StringTypeElements pStringType;
	private final EObjectTypeElements pEObjectType;
	private final BooleanTypeElements pBooleanType;
	private final NumericTypeElements pNumericType;
	private final NumericTypeEnumElements eNumericTypeEnum;
	private final EnumerationTypeElements pEnumerationType;
	private final EnumerationLiteralElements pEnumerationLiteral;
	private final RecordTypeElements pRecordType;
	private final RecordFieldElements pRecordField;
	private final ArrayTypeElements pArrayType;
	private final EIntegerObjectElements pEIntegerObject;
	private final TypeIDElements pTypeID;
	private final QualifiedIDElements pQualifiedID;
	private final NameIDElements pNameID;
	private final TerminalRule tQUALIFIED_ID;
	private final TerminalRule tID_WITHOUT_CARET;
	private final KEYWORDElements pKEYWORD;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public OCCIGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGrammar = new GrammarElements();
		this.pConfiguration = new ConfigurationElements();
		this.pResource = new ResourceElements();
		this.pLink = new LinkElements();
		this.pMixinBase = new MixinBaseElements();
		this.pAttributeState = new AttributeStateElements();
		this.pExtension = new ExtensionElements();
		this.pKind = new KindElements();
		this.pMixin = new MixinElements();
		this.pAnnotation = new AnnotationElements();
		this.pAttribute = new AttributeElements();
		this.pAction = new ActionElements();
		this.pParameterDecl = new ParameterDeclElements();
		this.pConstraint = new ConstraintElements();
		this.pFSM = new FSMElements();
		this.pState = new StateElements();
		this.pTransition = new TransitionElements();
		this.pDataType = new DataTypeElements();
		this.pStringType = new StringTypeElements();
		this.pEObjectType = new EObjectTypeElements();
		this.pBooleanType = new BooleanTypeElements();
		this.pNumericType = new NumericTypeElements();
		this.eNumericTypeEnum = new NumericTypeEnumElements();
		this.pEnumerationType = new EnumerationTypeElements();
		this.pEnumerationLiteral = new EnumerationLiteralElements();
		this.pRecordType = new RecordTypeElements();
		this.pRecordField = new RecordFieldElements();
		this.pArrayType = new ArrayTypeElements();
		this.pEIntegerObject = new EIntegerObjectElements();
		this.pTypeID = new TypeIDElements();
		this.pQualifiedID = new QualifiedIDElements();
		this.pNameID = new NameIDElements();
		this.tQUALIFIED_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.QUALIFIED_ID");
		this.tID_WITHOUT_CARET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.cmf.occi.core.xtext.OCCI.ID_WITHOUT_CARET");
		this.pKEYWORD = new KEYWORDElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.eclipse.cmf.occi.core.xtext.OCCI".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Grammar ecore::EObject:
	//	Extension | Configuration;
	public GrammarElements getGrammarAccess() {
		return pGrammar;
	}
	
	public ParserRule getGrammarRule() {
		return getGrammarAccess().getRule();
	}
	
	//Configuration:
	//	{Configuration}
	//	'configuration' ('description' description=STRING)? ('location' location=STRING)? ('use' use+=[Extension|STRING])*
	//	resources+=Resource*
	//	mixins+=Mixin*;
	public ConfigurationElements getConfigurationAccess() {
		return pConfiguration;
	}
	
	public ParserRule getConfigurationRule() {
		return getConfigurationAccess().getRule();
	}
	
	//Resource:
	//	'resource'
	//	id=STRING
	//	':'
	//	kind=[Kind|QualifiedID] ('title' title=STRING)? ('location' location=STRING)? ('summary' summary=STRING)? ('{'
	//	parts+=MixinBase*
	//	attributes+=AttributeState*
	//	links+=Link*
	//	'}');
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}
	
	//Link:
	//	'link'
	//	id=STRING
	//	':'
	//	kind=[Kind|QualifiedID] ('title' title=STRING)? ('location' location=STRING)?
	//	'target' target=[Resource|STRING] ('{'
	//	attributes+=AttributeState*
	//	parts+=MixinBase*
	//	'}');
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//MixinBase:
	//	'mixin'
	//	mixin=[Mixin|QualifiedID]
	//	'{'
	//	attributes+=AttributeState*
	//	'}';
	public MixinBaseElements getMixinBaseAccess() {
		return pMixinBase;
	}
	
	public ParserRule getMixinBaseRule() {
		return getMixinBaseAccess().getRule();
	}
	
	//AttributeState:
	//	'attribute'
	//	name=QualifiedID
	//	'=' value=STRING;
	public AttributeStateElements getAttributeStateAccess() {
		return pAttributeState;
	}
	
	public ParserRule getAttributeStateRule() {
		return getAttributeStateAccess().getRule();
	}
	
	//Extension:
	//	'extension'
	//	name=NameID ':' scheme=STRING ('description' description=STRING)? ('specification' specification=STRING)? ('import'
	//	^import+=[Extension|STRING /* URI */] ('as' ID)?)* (kinds+=Kind
	//	| mixins+=Mixin
	//	| types+=DataType)*;
	public ExtensionElements getExtensionAccess() {
		return pExtension;
	}
	
	public ParserRule getExtensionRule() {
		return getExtensionAccess().getRule();
	}
	
	//Kind:
	//	'kind'
	//	name=NameID ('extends' parent=[Kind|QualifiedID])? ('source' source+=[Kind|QualifiedID] (","
	//	source+=[Kind|QualifiedID])*)? ('target' target+=[Kind|QualifiedID] ("," target+=[Kind|QualifiedID])*)? ('title'
	//	title=STRING)? ('{' (attributes+=Attribute
	//	| actions+=Action
	//	| constraints+=Constraint)+
	//	'}')?
	//	fsm=FSM? ('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
	public KindElements getKindAccess() {
		return pKind;
	}
	
	public ParserRule getKindRule() {
		return getKindAccess().getRule();
	}
	
	//Mixin:
	//	'mixin'
	//	name=NameID ('depends' '(' depends+=[Mixin|QualifiedID] ("," depends+=[Mixin|QualifiedID])* ')')? ('applies' '('
	//	applies+=[Kind|QualifiedID] ("," applies+=[Kind|QualifiedID])* ')')? ('title' title=STRING)?
	//	'scheme' scheme=STRING ('{' (attributes+=Attribute
	//	| actions+=Action
	//	| constraints+=Constraint)+
	//	'}')?
	//	fsm=FSM? ('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
	public MixinElements getMixinAccess() {
		return pMixin;
	}
	
	public ParserRule getMixinRule() {
		return getMixinAccess().getRule();
	}
	
	//Annotation:
	//	'('
	//	'key' key=STRING
	//	'value' value=STRING
	//	')';
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//Attribute:
	//	'attribute'
	//	mutable?='mutable'?
	//	required?='required'?
	//	name=QualifiedID (':' type=[DataType|QualifiedID])? ('=' default=STRING)? ('description' description=STRING)?
	//	('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Action:
	//	'action'
	//	name=NameID ('(' attributes+=ParameterDecl ("," attributes+=ParameterDecl)* ')')? ('title' title=STRING)?
	//	('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//ParameterDecl Attribute:
	//	name=QualifiedID
	//	':'
	//	type=[DataType|QualifiedID] ('=' default=STRING)?;
	public ParameterDeclElements getParameterDeclAccess() {
		return pParameterDecl;
	}
	
	public ParserRule getParameterDeclRule() {
		return getParameterDeclAccess().getRule();
	}
	
	//Constraint:
	//	'constraint' name=NameID ('description' description=STRING)?
	//	'body' body=STRING;
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//FSM:
	//	'FSM'
	//	'attribute' attribute=[Attribute|QualifiedID] ('{' ownedState+=State ("," ownedState+=State)* '}')?;
	public FSMElements getFSMAccess() {
		return pFSM;
	}
	
	public ParserRule getFSMRule() {
		return getFSMAccess().getRule();
	}
	
	//State:
	//	'state'
	//	initial?='initial'?
	//	final?='final'?
	//	literal=[EnumerationLiteral|QualifiedID] ('transitions' '(' outgoingTransition+=Transition (","
	//	outgoingTransition+=Transition)* ')')?;
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//Transition:
	//	('action' action=[Action|QualifiedID])?
	//	'to' target=[State|QualifiedID];
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//DataType:
	//	StringType | EObjectType | BooleanType | NumericType | EnumerationType | RecordType | ArrayType;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//StringType:
	//	'StringType'
	//	name=TypeID (':' documentation=STRING)? ('pattern' pattern=STRING)? ('length' length=EIntegerObject)? ('minLength'
	//	minLength=EIntegerObject)? ('maxLength' maxLength=EIntegerObject)?;
	public StringTypeElements getStringTypeAccess() {
		return pStringType;
	}
	
	public ParserRule getStringTypeRule() {
		return getStringTypeAccess().getRule();
	}
	
	//EObjectType:
	//	'EObjectType'
	//	name=TypeID (':' documentation=STRING)? ('type' instanceClassName=STRING)?;
	public EObjectTypeElements getEObjectTypeAccess() {
		return pEObjectType;
	}
	
	public ParserRule getEObjectTypeRule() {
		return getEObjectTypeAccess().getRule();
	}
	
	//BooleanType:
	//	'BooleanType'
	//	name=TypeID (':' documentation=STRING)?;
	public BooleanTypeElements getBooleanTypeAccess() {
		return pBooleanType;
	}
	
	public ParserRule getBooleanTypeRule() {
		return getBooleanTypeAccess().getRule();
	}
	
	//NumericType:
	//	'NumericType'
	//	name=TypeID 'type' type=NumericTypeEnum (':' documentation=STRING)? ('totalDigits' totalDigits=EIntegerObject)?
	//	('minExclusive' minExclusive=STRING)? ('maxExclusive' maxExclusive=STRING)? ('minInclusive' minInclusive=STRING)?
	//	('maxInclusive' maxInclusive=STRING)?;
	public NumericTypeElements getNumericTypeAccess() {
		return pNumericType;
	}
	
	public ParserRule getNumericTypeRule() {
		return getNumericTypeAccess().getRule();
	}
	
	//enum NumericTypeEnum:
	//	Byte | Double | Float | Integer | Long | Short |
	//	BigDecimal;
	public NumericTypeEnumElements getNumericTypeEnumAccess() {
		return eNumericTypeEnum;
	}
	
	public EnumRule getNumericTypeEnumRule() {
		return getNumericTypeEnumAccess().getRule();
	}
	
	//EnumerationType:
	//	'EnumerationType'
	//	name=TypeID (':' documentation=STRING)?
	//	'literals' '(' literals+=EnumerationLiteral ("," literals+=EnumerationLiteral)* ')';
	public EnumerationTypeElements getEnumerationTypeAccess() {
		return pEnumerationType;
	}
	
	public ParserRule getEnumerationTypeRule() {
		return getEnumerationTypeAccess().getRule();
	}
	
	//EnumerationLiteral:
	//	name=TypeID (':' documentation=STRING)?;
	public EnumerationLiteralElements getEnumerationLiteralAccess() {
		return pEnumerationLiteral;
	}
	
	public ParserRule getEnumerationLiteralRule() {
		return getEnumerationLiteralAccess().getRule();
	}
	
	//RecordType:
	//	'record'
	//	name=TypeID (':' documentation=STRING)?
	//	'{' recordFields+=RecordField ("," recordFields+=RecordField)* '}';
	public RecordTypeElements getRecordTypeAccess() {
		return pRecordType;
	}
	
	public ParserRule getRecordTypeRule() {
		return getRecordTypeAccess().getRule();
	}
	
	//RecordField:
	//	mutable?='mutable'?
	//	required?='required'?
	//	name=QualifiedID (':' type=[DataType|QualifiedID]) ('=' default=STRING)? ('description' description=STRING)?
	//	('annotations' '{' annotations+=Annotation ("," annotations+=Annotation)* '}')?;
	public RecordFieldElements getRecordFieldAccess() {
		return pRecordField;
	}
	
	public ParserRule getRecordFieldRule() {
		return getRecordFieldAccess().getRule();
	}
	
	//ArrayType:
	//	'array'
	//	name=TypeID ':' type=[DataType|QualifiedID] (':' documentation=STRING)?;
	public ArrayTypeElements getArrayTypeAccess() {
		return pArrayType;
	}
	
	public ParserRule getArrayTypeRule() {
		return getArrayTypeAccess().getRule();
	}
	
	//EIntegerObject ecore::EIntegerObject:
	//	'-'? INT;
	public EIntegerObjectElements getEIntegerObjectAccess() {
		return pEIntegerObject;
	}
	
	public ParserRule getEIntegerObjectRule() {
		return getEIntegerObjectAccess().getRule();
	}
	
	//TypeID:
	//	ID | KEYWORD;
	public TypeIDElements getTypeIDAccess() {
		return pTypeID;
	}
	
	public ParserRule getTypeIDRule() {
		return getTypeIDAccess().getRule();
	}
	
	//QualifiedID:
	//	ID | QUALIFIED_ID | KEYWORD;
	public QualifiedIDElements getQualifiedIDAccess() {
		return pQualifiedID;
	}
	
	public ParserRule getQualifiedIDRule() {
		return getQualifiedIDAccess().getRule();
	}
	
	//NameID:
	//	ID (ID | '-')* | KEYWORD;
	public NameIDElements getNameIDAccess() {
		return pNameID;
	}
	
	public ParserRule getNameIDRule() {
		return getNameIDAccess().getRule();
	}
	
	//terminal QUALIFIED_ID:
	//	ID ('.' ID_WITHOUT_CARET)+;
	public TerminalRule getQUALIFIED_IDRule() {
		return tQUALIFIED_ID;
	}
	
	//terminal ID_WITHOUT_CARET:
	//	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getID_WITHOUT_CARETRule() {
		return tID_WITHOUT_CARET;
	}
	
	//KEYWORD: // Configuration
	//	'configuration' | 'description' | 'location' | 'use' | // Resource
	//	'resource' | 'title' | 'summary' | 'parts' | //‘location’|
	//	// Link
	//	'link' | 'kind' | 'target' | // 'title'| 'location'|
	//	// MixinBase
	//	'mixin' | // AttributeState
	//	'attribute' | // Extension
	//	'extension' | 'specification' | 'import' | 'as' | //'description'|
	//	// Kind
	//	'extends' | 'source' | 'scheme' | 'annotations' | // 'kind' |'target' | 'title'|
	//	// Mixin
	//	'depends' | 'applies' | // 'mixin' | 'scheme' | 'title'| 'annotations' |
	//	// Annotation
	//	'key' | 'value' | // Attribute
	//	'mutable' | 'required' | // 'attribute' |'description'| 'annotations' |
	//	// Action
	//	'action' | // 'scheme' | 'title'| 'annotations' |
	//	// ParameterDecl
	//	// Constraint
	//	'constraint' | 'body' | // 'description'| 
	//	// FSM
	//	'FSM' | // 'attribute'|
	//	// State
	//	'state' | 'initial' | 'final' | 'transitions' | // Transition
	//	'to' | // 'action'|
	//	// DataType
	//	// StringType
	//	'StringType' | 'pattern' | 'length' | 'minLength' | 'maxLength' | // EObjectType
	//	'EObjectType' | 'type' | // BooleanType
	//	'BooleanType' | // NumericType
	//	'NumericType' | 'totalDigits' | 'minExclusive' | 'maxExclusive' | 'minInclusive' | 'maxInclusive' | // 'type' | 
	//	// NumericTypeEnum
	//	'Byte' | 'Double' | 'Float' | 'Integer' | 'Long' | 'Short' | 'BigDecimal' | // EnumerationType
	//	'EnumerationType' | 'literals' | //EnumerationLiteral
	//	//  
	//	// RecordType
	//	'record' | // RecordField
	//	// 'mutable'| 'required' | 'description'| 'annotations'
	//	// ArrayType
	//	'array';
	public KEYWORDElements getKEYWORDAccess() {
		return pKEYWORD;
	}
	
	public ParserRule getKEYWORDRule() {
		return getKEYWORDAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
