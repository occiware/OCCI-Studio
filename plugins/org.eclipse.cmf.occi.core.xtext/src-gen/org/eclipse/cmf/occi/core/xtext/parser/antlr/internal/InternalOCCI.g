/*
 * generated by Xtext 2.11.0
 */
grammar InternalOCCI;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.eclipse.cmf.occi.core.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.cmf.occi.core.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.cmf.occi.core.xtext.services.OCCIGrammarAccess;

}

@parser::members {

 	private OCCIGrammarAccess grammarAccess;

    public InternalOCCIParser(TokenStream input, OCCIGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Grammar";
   	}

   	@Override
   	protected OCCIGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGrammar
entryRuleGrammar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGrammarRule()); }
	iv_ruleGrammar=ruleGrammar
	{ $current=$iv_ruleGrammar.current; }
	EOF;

// Rule Grammar
ruleGrammar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getGrammarAccess().getExtensionParserRuleCall());
	}
	this_Extension_0=ruleExtension
	{
		$current = $this_Extension_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExtension
entryRuleExtension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtensionRule()); }
	iv_ruleExtension=ruleExtension
	{ $current=$iv_ruleExtension.current; }
	EOF;

// Rule Extension
ruleExtension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extension'
		{
			newLeafNode(otherlv_0, grammarAccess.getExtensionAccess().getExtensionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtensionAccess().getNameNameIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNameID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtensionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.NameID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getExtensionAccess().getColonKeyword_2());
		}
		(
			(
				lv_scheme_3_0=RULE_STRING
				{
					newLeafNode(lv_scheme_3_0, grammarAccess.getExtensionAccess().getSchemeSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtensionRule());
					}
					setWithLastConsumed(
						$current,
						"scheme",
						lv_scheme_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getExtensionAccess().getDescriptionKeyword_4_0());
			}
			(
				(
					lv_description_5_0=RULE_STRING
					{
						newLeafNode(lv_description_5_0, grammarAccess.getExtensionAccess().getDescriptionSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtensionRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_6='specification'
			{
				newLeafNode(otherlv_6, grammarAccess.getExtensionAccess().getSpecificationKeyword_5_0());
			}
			(
				(
					lv_specification_7_0=RULE_STRING
					{
						newLeafNode(lv_specification_7_0, grammarAccess.getExtensionAccess().getSpecificationSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtensionRule());
						}
						setWithLastConsumed(
							$current,
							"specification",
							lv_specification_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_8='import'
			{
				newLeafNode(otherlv_8, grammarAccess.getExtensionAccess().getImportKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtensionRule());
						}
					}
					otherlv_9=RULE_STRING
					{
						newLeafNode(otherlv_9, grammarAccess.getExtensionAccess().getImportExtensionCrossReference_6_1_0());
					}
				)
			)
			(
				otherlv_10='as'
				{
					newLeafNode(otherlv_10, grammarAccess.getExtensionAccess().getAsKeyword_6_2_0());
				}
				this_ID_11=RULE_ID
				{
					newLeafNode(this_ID_11, grammarAccess.getExtensionAccess().getIDTerminalRuleCall_6_2_1());
				}
			)?
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExtensionAccess().getKindsKindParserRuleCall_7_0_0());
					}
					lv_kinds_12_0=ruleKind
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtensionRule());
						}
						add(
							$current,
							"kinds",
							lv_kinds_12_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Kind");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getExtensionAccess().getMixinsMixinParserRuleCall_7_1_0());
					}
					lv_mixins_13_0=ruleMixin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtensionRule());
						}
						add(
							$current,
							"mixins",
							lv_mixins_13_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Mixin");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getExtensionAccess().getTypesDataTypeParserRuleCall_7_2_0());
					}
					lv_types_14_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtensionRule());
						}
						add(
							$current,
							"types",
							lv_types_14_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleKind
entryRuleKind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKindRule()); }
	iv_ruleKind=ruleKind
	{ $current=$iv_ruleKind.current; }
	EOF;

// Rule Kind
ruleKind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='kind'
		{
			newLeafNode(otherlv_0, grammarAccess.getKindAccess().getKindKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKindAccess().getNameNameIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNameID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKindRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.NameID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='extends'
			{
				newLeafNode(otherlv_2, grammarAccess.getKindAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKindRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getKindAccess().getParentKindCrossReference_2_1_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='source'
			{
				newLeafNode(otherlv_4, grammarAccess.getKindAccess().getSourceKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKindRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getKindAccess().getSourceKindCrossReference_3_1_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='target'
			{
				newLeafNode(otherlv_6, grammarAccess.getKindAccess().getTargetKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKindRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getKindAccess().getTargetKindCrossReference_4_1_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='annotations'
			{
				newLeafNode(otherlv_8, grammarAccess.getKindAccess().getAnnotationsKeyword_5_0());
			}
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getKindAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKindAccess().getAnnotationsAnnotationParserRuleCall_5_2_0());
					}
					lv_annotations_10_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKindRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_10_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getKindAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getKindAccess().getAnnotationsAnnotationParserRuleCall_5_3_1_0());
						}
						lv_annotations_12_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getKindRule());
							}
							add(
								$current,
								"annotations",
								lv_annotations_12_0,
								"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getKindAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_14='{'
		{
			newLeafNode(otherlv_14, grammarAccess.getKindAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			otherlv_15='title'
			{
				newLeafNode(otherlv_15, grammarAccess.getKindAccess().getTitleKeyword_7_0());
			}
			(
				(
					lv_title_16_0=RULE_STRING
					{
						newLeafNode(lv_title_16_0, grammarAccess.getKindAccess().getTitleSTRINGTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKindRule());
						}
						setWithLastConsumed(
							$current,
							"title",
							lv_title_16_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_17='scheme'
		{
			newLeafNode(otherlv_17, grammarAccess.getKindAccess().getSchemeKeyword_8());
		}
		(
			(
				lv_scheme_18_0=RULE_STRING
				{
					newLeafNode(lv_scheme_18_0, grammarAccess.getKindAccess().getSchemeSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKindRule());
					}
					setWithLastConsumed(
						$current,
						"scheme",
						lv_scheme_18_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getKindAccess().getAttributesAttributeParserRuleCall_10_0_0());
					}
					lv_attributes_19_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKindRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_19_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getKindAccess().getActionsActionParserRuleCall_10_1_0());
					}
					lv_actions_20_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKindRule());
						}
						add(
							$current,
							"actions",
							lv_actions_20_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getKindAccess().getConstraintsConstraintParserRuleCall_10_2_0());
					}
					lv_constraints_21_0=ruleConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKindRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_21_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Constraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_22='fsm'
			{
				newLeafNode(otherlv_22, grammarAccess.getKindAccess().getFsmKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKindAccess().getFsmFSMParserRuleCall_11_1_0());
					}
					lv_fsm_23_0=ruleFSM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKindRule());
						}
						set(
							$current,
							"fsm",
							lv_fsm_23_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.FSM");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMixin
entryRuleMixin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMixinRule()); }
	iv_ruleMixin=ruleMixin
	{ $current=$iv_ruleMixin.current; }
	EOF;

// Rule Mixin
ruleMixin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mixin'
		{
			newLeafNode(otherlv_0, grammarAccess.getMixinAccess().getMixinKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMixinAccess().getNameNameIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNameID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMixinRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.NameID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='depends'
			{
				newLeafNode(otherlv_2, grammarAccess.getMixinAccess().getDependsKeyword_2_0());
			}
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getMixinAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMixinRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMixinAccess().getDependsMixinCrossReference_2_2_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getMixinAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMixinRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMixinAccess().getDependsMixinCrossReference_2_3_1_0());
						}
						ruleQualifiedID
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getMixinAccess().getRightParenthesisKeyword_2_4());
			}
		)?
		(
			otherlv_8='applies'
			{
				newLeafNode(otherlv_8, grammarAccess.getMixinAccess().getAppliesKeyword_3_0());
			}
			otherlv_9='('
			{
				newLeafNode(otherlv_9, grammarAccess.getMixinAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMixinRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMixinAccess().getAppliesKindCrossReference_3_2_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getMixinAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMixinRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMixinAccess().getAppliesKindCrossReference_3_3_1_0());
						}
						ruleQualifiedID
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getMixinAccess().getRightParenthesisKeyword_3_4());
			}
		)?
		(
			otherlv_14='annotations'
			{
				newLeafNode(otherlv_14, grammarAccess.getMixinAccess().getAnnotationsKeyword_4_0());
			}
			otherlv_15='{'
			{
				newLeafNode(otherlv_15, grammarAccess.getMixinAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMixinAccess().getAnnotationsAnnotationParserRuleCall_4_2_0());
					}
					lv_annotations_16_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMixinRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_16_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_17=','
				{
					newLeafNode(otherlv_17, grammarAccess.getMixinAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMixinAccess().getAnnotationsAnnotationParserRuleCall_4_3_1_0());
						}
						lv_annotations_18_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMixinRule());
							}
							add(
								$current,
								"annotations",
								lv_annotations_18_0,
								"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getMixinAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_20='{'
		{
			newLeafNode(otherlv_20, grammarAccess.getMixinAccess().getLeftCurlyBracketKeyword_5());
		}
		otherlv_21='scheme'
		{
			newLeafNode(otherlv_21, grammarAccess.getMixinAccess().getSchemeKeyword_6());
		}
		(
			(
				lv_scheme_22_0=RULE_STRING
				{
					newLeafNode(lv_scheme_22_0, grammarAccess.getMixinAccess().getSchemeSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMixinRule());
					}
					setWithLastConsumed(
						$current,
						"scheme",
						lv_scheme_22_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_23='title'
			{
				newLeafNode(otherlv_23, grammarAccess.getMixinAccess().getTitleKeyword_8_0());
			}
			(
				(
					lv_title_24_0=RULE_STRING
					{
						newLeafNode(lv_title_24_0, grammarAccess.getMixinAccess().getTitleSTRINGTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMixinRule());
						}
						setWithLastConsumed(
							$current,
							"title",
							lv_title_24_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMixinAccess().getAttributesAttributeParserRuleCall_9_0_0());
					}
					lv_attributes_25_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMixinRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_25_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMixinAccess().getActionsActionParserRuleCall_9_1_0());
					}
					lv_actions_26_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMixinRule());
						}
						add(
							$current,
							"actions",
							lv_actions_26_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMixinAccess().getConstraintsConstraintParserRuleCall_9_2_0());
					}
					lv_constraints_27_0=ruleConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMixinRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_27_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Constraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_28='}'
		{
			newLeafNode(otherlv_28, grammarAccess.getMixinAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='annotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getAnnotationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='key'
		{
			newLeafNode(otherlv_2, grammarAccess.getAnnotationAccess().getKeyKeyword_2());
		}
		(
			(
				lv_key_3_0=RULE_STRING
				{
					newLeafNode(lv_key_3_0, grammarAccess.getAnnotationAccess().getKeySTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='value'
		{
			newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getValueKeyword_4());
		}
		(
			(
				lv_value_5_0=RULE_STRING
				{
					newLeafNode(lv_value_5_0, grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAnnotationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='attribute'
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
		}
		(
			(
				lv_mutable_1_0='mutable'
				{
					newLeafNode(lv_mutable_1_0, grammarAccess.getAttributeAccess().getMutableMutableKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "mutable", true, "mutable");
				}
			)
		)?
		(
			(
				lv_required_2_0='required'
				{
					newLeafNode(lv_required_2_0, grammarAccess.getAttributeAccess().getRequiredRequiredKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "required", true, "required");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getNameQualifiedIDParserRuleCall_3_0());
				}
				lv_name_3_0=ruleQualifiedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.QualifiedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getColonKeyword_4());
		}
		(
			otherlv_5='type'
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getTypeKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeDataTypeCrossReference_5_1_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getEqualsSignKeyword_6_0());
			}
			(
				(
					lv_default_8_0=RULE_STRING
					{
						newLeafNode(lv_default_8_0, grammarAccess.getAttributeAccess().getDefaultSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"default",
							lv_default_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_7_0());
			}
			(
				otherlv_10='description'
				{
					newLeafNode(otherlv_10, grammarAccess.getAttributeAccess().getDescriptionKeyword_7_1_0());
				}
				(
					(
						lv_description_11_0=RULE_STRING
						{
							newLeafNode(lv_description_11_0, grammarAccess.getAttributeAccess().getDescriptionSTRINGTerminalRuleCall_7_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeRule());
							}
							setWithLastConsumed(
								$current,
								"description",
								lv_description_11_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)?
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_7_2());
			}
		)
		(
			otherlv_13='annotations'
			{
				newLeafNode(otherlv_13, grammarAccess.getAttributeAccess().getAnnotationsKeyword_8_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getAnnotationsAnnotationParserRuleCall_8_2_0());
					}
					lv_annotations_15_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_15_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getAttributeAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAttributeAccess().getAnnotationsAnnotationParserRuleCall_8_3_1_0());
						}
						lv_annotations_17_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAttributeRule());
							}
							add(
								$current,
								"annotations",
								lv_annotations_17_0,
								"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='action'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionAccess().getActionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getNameNameIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNameID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.NameID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='scheme'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionAccess().getSchemeKeyword_2());
		}
		(
			(
				lv_scheme_3_0=RULE_STRING
				{
					newLeafNode(lv_scheme_3_0, grammarAccess.getActionAccess().getSchemeSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"scheme",
						lv_scheme_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getActionAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getAttributesParameterDeclParserRuleCall_4_1_0());
					}
					lv_attributes_5_0=ruleParameterDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_5_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.ParameterDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getActionAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getAttributesParameterDeclParserRuleCall_4_2_1_0());
						}
						lv_attributes_7_0=ruleParameterDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_7_0,
								"org.eclipse.cmf.occi.core.xtext.OCCI.ParameterDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getActionAccess().getRightParenthesisKeyword_4_3());
			}
		)?
		(
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_5_0());
			}
			otherlv_10='title'
			{
				newLeafNode(otherlv_10, grammarAccess.getActionAccess().getTitleKeyword_5_1());
			}
			(
				(
					lv_title_11_0=RULE_STRING
					{
						newLeafNode(lv_title_11_0, grammarAccess.getActionAccess().getTitleSTRINGTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed(
							$current,
							"title",
							lv_title_11_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		(
			otherlv_13='annotations'
			{
				newLeafNode(otherlv_13, grammarAccess.getActionAccess().getAnnotationsKeyword_6_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getAnnotationsAnnotationParserRuleCall_6_2_0());
					}
					lv_annotations_15_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_15_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getActionAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getAnnotationsAnnotationParserRuleCall_6_3_1_0());
						}
						lv_annotations_17_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							add(
								$current,
								"annotations",
								lv_annotations_17_0,
								"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
	)
;

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterDeclRule()); }
	iv_ruleParameterDecl=ruleParameterDecl
	{ $current=$iv_ruleParameterDecl.current; }
	EOF;

// Rule ParameterDecl
ruleParameterDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDeclAccess().getNameQualifiedIDParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDeclRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.QualifiedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterDeclRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeDataTypeCrossReference_2_0());
				}
				ruleQualifiedID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getParameterDeclAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					lv_default_4_0=RULE_STRING
					{
						newLeafNode(lv_default_4_0, grammarAccess.getParameterDeclAccess().getDefaultSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParameterDeclRule());
						}
						setWithLastConsumed(
							$current,
							"default",
							lv_default_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constraint'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getConstraintKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getNameNameIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNameID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.NameID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='description'
			{
				newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getDescriptionKeyword_2_0());
			}
			(
				(
					lv_description_3_0=RULE_STRING
					{
						newLeafNode(lv_description_3_0, grammarAccess.getConstraintAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstraintRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_4='body'
		{
			newLeafNode(otherlv_4, grammarAccess.getConstraintAccess().getBodyKeyword_3());
		}
		(
			(
				lv_body_5_0=RULE_STRING
				{
					newLeafNode(lv_body_5_0, grammarAccess.getConstraintAccess().getBodySTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"body",
						lv_body_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleFSM
entryRuleFSM returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFSMRule()); }
	iv_ruleFSM=ruleFSM
	{ $current=$iv_ruleFSM.current; }
	EOF;

// Rule FSM
ruleFSM returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FSM'
		{
			newLeafNode(otherlv_0, grammarAccess.getFSMAccess().getFSMKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFSMAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='attribute'
		{
			newLeafNode(otherlv_2, grammarAccess.getFSMAccess().getAttributeKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFSMRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFSMAccess().getAttributeAttributeCrossReference_3_0());
				}
				ruleQualifiedID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='states'
			{
				newLeafNode(otherlv_4, grammarAccess.getFSMAccess().getStatesKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getFSMAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFSMAccess().getOwnedStateStateParserRuleCall_4_2_0());
					}
					lv_ownedState_6_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFSMRule());
						}
						add(
							$current,
							"ownedState",
							lv_ownedState_6_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getFSMAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFSMAccess().getOwnedStateStateParserRuleCall_4_3_1_0());
						}
						lv_ownedState_8_0=ruleState
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFSMRule());
							}
							add(
								$current,
								"ownedState",
								lv_ownedState_8_0,
								"org.eclipse.cmf.occi.core.xtext.OCCI.State");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getFSMAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getFSMAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='State'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateAccess().getStateKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_initial_2_0='initial'
				{
					newLeafNode(lv_initial_2_0, grammarAccess.getStateAccess().getInitialInitialKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "initial", true, "initial");
				}
			)
		)?
		(
			(
				lv_final_3_0='final'
				{
					newLeafNode(lv_final_3_0, grammarAccess.getStateAccess().getFinalFinalKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "final", true, "final");
				}
			)
		)?
		(
			otherlv_4='literal'
			{
				newLeafNode(otherlv_4, grammarAccess.getStateAccess().getLiteralKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getStateAccess().getLiteralEnumerationLiteralCrossReference_4_1_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_6='transitions'
			{
				newLeafNode(otherlv_6, grammarAccess.getStateAccess().getTransitionsKeyword_5_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getStateAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getOutgoingTransitionTransitionParserRuleCall_5_2_0());
					}
					lv_outgoingTransition_8_0=ruleTransition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"outgoingTransition",
							lv_outgoingTransition_8_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Transition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getStateAccess().getRightParenthesisKeyword_5_3());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='action'
			{
				newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getActionKeyword_0_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getActionActionCrossReference_0_1_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getToKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getTargetStateCrossReference_2_0());
				}
				ruleQualifiedID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getStringTypeParserRuleCall_0());
		}
		this_StringType_0=ruleStringType
		{
			$current = $this_StringType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getEObjectTypeParserRuleCall_1());
		}
		this_EObjectType_1=ruleEObjectType
		{
			$current = $this_EObjectType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getBooleanTypeParserRuleCall_2());
		}
		this_BooleanType_2=ruleBooleanType
		{
			$current = $this_BooleanType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getNumericTypeParserRuleCall_3());
		}
		this_NumericType_3=ruleNumericType
		{
			$current = $this_NumericType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getEnumerationTypeParserRuleCall_4());
		}
		this_EnumerationType_4=ruleEnumerationType
		{
			$current = $this_EnumerationType_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getRecordTypeParserRuleCall_5());
		}
		this_RecordType_5=ruleRecordType
		{
			$current = $this_RecordType_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getArrayTypeParserRuleCall_6());
		}
		this_ArrayType_6=ruleArrayType
		{
			$current = $this_ArrayType_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringType
entryRuleStringType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringTypeRule()); }
	iv_ruleStringType=ruleStringType
	{ $current=$iv_ruleStringType.current; }
	EOF;

// Rule StringType
ruleStringType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StringType'
		{
			newLeafNode(otherlv_0, grammarAccess.getStringTypeAccess().getStringTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStringTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getStringTypeAccess().getLeftParenthesisKeyword_2());
		}
		(
			otherlv_3='documentation'
			{
				newLeafNode(otherlv_3, grammarAccess.getStringTypeAccess().getDocumentationKeyword_3_0());
			}
			(
				(
					lv_documentation_4_0=RULE_STRING
					{
						newLeafNode(lv_documentation_4_0, grammarAccess.getStringTypeAccess().getDocumentationSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStringTypeRule());
						}
						setWithLastConsumed(
							$current,
							"documentation",
							lv_documentation_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_5='pattern'
			{
				newLeafNode(otherlv_5, grammarAccess.getStringTypeAccess().getPatternKeyword_4_0());
			}
			(
				(
					lv_pattern_6_0=RULE_STRING
					{
						newLeafNode(lv_pattern_6_0, grammarAccess.getStringTypeAccess().getPatternSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStringTypeRule());
						}
						setWithLastConsumed(
							$current,
							"pattern",
							lv_pattern_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_7='length'
			{
				newLeafNode(otherlv_7, grammarAccess.getStringTypeAccess().getLengthKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStringTypeAccess().getLengthEIntegerObjectParserRuleCall_5_1_0());
					}
					lv_length_8_0=ruleEIntegerObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringTypeRule());
						}
						set(
							$current,
							"length",
							lv_length_8_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.EIntegerObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='minLength'
			{
				newLeafNode(otherlv_9, grammarAccess.getStringTypeAccess().getMinLengthKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStringTypeAccess().getMinLengthEIntegerObjectParserRuleCall_6_1_0());
					}
					lv_minLength_10_0=ruleEIntegerObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringTypeRule());
						}
						set(
							$current,
							"minLength",
							lv_minLength_10_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.EIntegerObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='maxLength'
			{
				newLeafNode(otherlv_11, grammarAccess.getStringTypeAccess().getMaxLengthKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStringTypeAccess().getMaxLengthEIntegerObjectParserRuleCall_7_1_0());
					}
					lv_maxLength_12_0=ruleEIntegerObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringTypeRule());
						}
						set(
							$current,
							"maxLength",
							lv_maxLength_12_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.EIntegerObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getStringTypeAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleEObjectType
entryRuleEObjectType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEObjectTypeRule()); }
	iv_ruleEObjectType=ruleEObjectType
	{ $current=$iv_ruleEObjectType.current; }
	EOF;

// Rule EObjectType
ruleEObjectType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EObjectType'
		{
			newLeafNode(otherlv_0, grammarAccess.getEObjectTypeAccess().getEObjectTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEObjectTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEObjectTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getEObjectTypeAccess().getLeftParenthesisKeyword_2());
		}
		(
			otherlv_3='documentation'
			{
				newLeafNode(otherlv_3, grammarAccess.getEObjectTypeAccess().getDocumentationKeyword_3_0());
			}
			(
				(
					lv_documentation_4_0=RULE_STRING
					{
						newLeafNode(lv_documentation_4_0, grammarAccess.getEObjectTypeAccess().getDocumentationSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEObjectTypeRule());
						}
						setWithLastConsumed(
							$current,
							"documentation",
							lv_documentation_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_5='instanceClassName'
			{
				newLeafNode(otherlv_5, grammarAccess.getEObjectTypeAccess().getInstanceClassNameKeyword_4_0());
			}
			(
				(
					lv_instanceClassName_6_0=RULE_STRING
					{
						newLeafNode(lv_instanceClassName_6_0, grammarAccess.getEObjectTypeAccess().getInstanceClassNameSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEObjectTypeRule());
						}
						setWithLastConsumed(
							$current,
							"instanceClassName",
							lv_instanceClassName_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getEObjectTypeAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	iv_ruleBooleanType=ruleBooleanType
	{ $current=$iv_ruleBooleanType.current; }
	EOF;

// Rule BooleanType
ruleBooleanType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BooleanType'
		{
			newLeafNode(otherlv_0, grammarAccess.getBooleanTypeAccess().getBooleanTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBooleanTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getBooleanTypeAccess().getLeftParenthesisKeyword_2());
		}
		(
			otherlv_3='documentation'
			{
				newLeafNode(otherlv_3, grammarAccess.getBooleanTypeAccess().getDocumentationKeyword_3_0());
			}
			(
				(
					lv_documentation_4_0=RULE_STRING
					{
						newLeafNode(lv_documentation_4_0, grammarAccess.getBooleanTypeAccess().getDocumentationSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanTypeRule());
						}
						setWithLastConsumed(
							$current,
							"documentation",
							lv_documentation_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBooleanTypeAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleNumericType
entryRuleNumericType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericTypeRule()); }
	iv_ruleNumericType=ruleNumericType
	{ $current=$iv_ruleNumericType.current; }
	EOF;

// Rule NumericType
ruleNumericType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NumericType'
		{
			newLeafNode(otherlv_0, grammarAccess.getNumericTypeAccess().getNumericTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNumericTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumericTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getNumericTypeAccess().getTypeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericTypeAccess().getTypeNumericTypeEnumEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleNumericTypeEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.NumericTypeEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getNumericTypeAccess().getLeftParenthesisKeyword_4());
		}
		(
			otherlv_5='documentation'
			{
				newLeafNode(otherlv_5, grammarAccess.getNumericTypeAccess().getDocumentationKeyword_5_0());
			}
			(
				(
					lv_documentation_6_0=RULE_STRING
					{
						newLeafNode(lv_documentation_6_0, grammarAccess.getNumericTypeAccess().getDocumentationSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumericTypeRule());
						}
						setWithLastConsumed(
							$current,
							"documentation",
							lv_documentation_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_7='totalDigits'
			{
				newLeafNode(otherlv_7, grammarAccess.getNumericTypeAccess().getTotalDigitsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNumericTypeAccess().getTotalDigitsEIntegerObjectParserRuleCall_6_1_0());
					}
					lv_totalDigits_8_0=ruleEIntegerObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumericTypeRule());
						}
						set(
							$current,
							"totalDigits",
							lv_totalDigits_8_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.EIntegerObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='minExclusive'
			{
				newLeafNode(otherlv_9, grammarAccess.getNumericTypeAccess().getMinExclusiveKeyword_7_0());
			}
			(
				(
					lv_minExclusive_10_0=RULE_STRING
					{
						newLeafNode(lv_minExclusive_10_0, grammarAccess.getNumericTypeAccess().getMinExclusiveSTRINGTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumericTypeRule());
						}
						setWithLastConsumed(
							$current,
							"minExclusive",
							lv_minExclusive_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_11='maxExclusive'
			{
				newLeafNode(otherlv_11, grammarAccess.getNumericTypeAccess().getMaxExclusiveKeyword_8_0());
			}
			(
				(
					lv_maxExclusive_12_0=RULE_STRING
					{
						newLeafNode(lv_maxExclusive_12_0, grammarAccess.getNumericTypeAccess().getMaxExclusiveSTRINGTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumericTypeRule());
						}
						setWithLastConsumed(
							$current,
							"maxExclusive",
							lv_maxExclusive_12_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_13='minInclusive'
			{
				newLeafNode(otherlv_13, grammarAccess.getNumericTypeAccess().getMinInclusiveKeyword_9_0());
			}
			(
				(
					lv_minInclusive_14_0=RULE_STRING
					{
						newLeafNode(lv_minInclusive_14_0, grammarAccess.getNumericTypeAccess().getMinInclusiveSTRINGTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumericTypeRule());
						}
						setWithLastConsumed(
							$current,
							"minInclusive",
							lv_minInclusive_14_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_15='maxInclusive'
			{
				newLeafNode(otherlv_15, grammarAccess.getNumericTypeAccess().getMaxInclusiveKeyword_10_0());
			}
			(
				(
					lv_maxInclusive_16_0=RULE_STRING
					{
						newLeafNode(lv_maxInclusive_16_0, grammarAccess.getNumericTypeAccess().getMaxInclusiveSTRINGTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumericTypeRule());
						}
						setWithLastConsumed(
							$current,
							"maxInclusive",
							lv_maxInclusive_16_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_17=')'
		{
			newLeafNode(otherlv_17, grammarAccess.getNumericTypeAccess().getRightParenthesisKeyword_11());
		}
	)
;

// Entry rule entryRuleEnumerationType
entryRuleEnumerationType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationTypeRule()); }
	iv_ruleEnumerationType=ruleEnumerationType
	{ $current=$iv_ruleEnumerationType.current; }
	EOF;

// Rule EnumerationType
ruleEnumerationType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnumerationType'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationTypeAccess().getEnumerationTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumerationTypeAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='literals'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumerationTypeAccess().getLiteralsKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumerationTypeAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationTypeAccess().getLiteralsEnumerationLiteralParserRuleCall_5_0());
				}
				lv_literals_5_0=ruleEnumerationLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
					}
					add(
						$current,
						"literals",
						lv_literals_5_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.EnumerationLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumerationTypeAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationTypeAccess().getLiteralsEnumerationLiteralParserRuleCall_6_1_0());
					}
					lv_literals_7_0=ruleEnumerationLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
						}
						add(
							$current,
							"literals",
							lv_literals_7_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.EnumerationLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getEnumerationTypeAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_9='documentation'
			{
				newLeafNode(otherlv_9, grammarAccess.getEnumerationTypeAccess().getDocumentationKeyword_8_0());
			}
			(
				(
					lv_documentation_10_0=RULE_STRING
					{
						newLeafNode(lv_documentation_10_0, grammarAccess.getEnumerationTypeAccess().getDocumentationSTRINGTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumerationTypeRule());
						}
						setWithLastConsumed(
							$current,
							"documentation",
							lv_documentation_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getEnumerationTypeAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationLiteralRule()); }
	iv_ruleEnumerationLiteral=ruleEnumerationLiteral
	{ $current=$iv_ruleEnumerationLiteral.current; }
	EOF;

// Rule EnumerationLiteral
ruleEnumerationLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEnumerationLiteralAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumerationLiteralAccess().getLeftParenthesisKeyword_1());
		}
		(
			otherlv_2='documentation'
			{
				newLeafNode(otherlv_2, grammarAccess.getEnumerationLiteralAccess().getDocumentationKeyword_2_0());
			}
			(
				(
					lv_documentation_3_0=RULE_STRING
					{
						newLeafNode(lv_documentation_3_0, grammarAccess.getEnumerationLiteralAccess().getDocumentationSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumerationLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"documentation",
							lv_documentation_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumerationLiteralAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRecordType
entryRuleRecordType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecordTypeRule()); }
	iv_ruleRecordType=ruleRecordType
	{ $current=$iv_ruleRecordType.current; }
	EOF;

// Rule RecordType
ruleRecordType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RecordType'
		{
			newLeafNode(otherlv_0, grammarAccess.getRecordTypeAccess().getRecordTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRecordTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecordTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getRecordTypeAccess().getLeftParenthesisKeyword_2());
		}
		(
			otherlv_3='documentation'
			{
				newLeafNode(otherlv_3, grammarAccess.getRecordTypeAccess().getDocumentationKeyword_3_0());
			}
			(
				(
					lv_documentation_4_0=RULE_STRING
					{
						newLeafNode(lv_documentation_4_0, grammarAccess.getRecordTypeAccess().getDocumentationSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRecordTypeRule());
						}
						setWithLastConsumed(
							$current,
							"documentation",
							lv_documentation_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_5='fields'
		{
			newLeafNode(otherlv_5, grammarAccess.getRecordTypeAccess().getFieldsKeyword_4());
		}
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getRecordTypeAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecordTypeAccess().getRecordFieldsRecordFieldParserRuleCall_6_0());
				}
				lv_recordFields_7_0=ruleRecordField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecordTypeRule());
					}
					add(
						$current,
						"recordFields",
						lv_recordFields_7_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.RecordField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getRecordTypeAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRecordTypeAccess().getRecordFieldsRecordFieldParserRuleCall_7_1_0());
					}
					lv_recordFields_9_0=ruleRecordField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRecordTypeRule());
						}
						add(
							$current,
							"recordFields",
							lv_recordFields_9_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.RecordField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getRecordTypeAccess().getRightParenthesisKeyword_8());
		}
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getRecordTypeAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleRecordField
entryRuleRecordField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecordFieldRule()); }
	iv_ruleRecordField=ruleRecordField
	{ $current=$iv_ruleRecordField.current; }
	EOF;

// Rule RecordField
ruleRecordField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='field'
		{
			newLeafNode(otherlv_0, grammarAccess.getRecordFieldAccess().getFieldKeyword_0());
		}
		(
			(
				lv_mutable_1_0='mutable'
				{
					newLeafNode(lv_mutable_1_0, grammarAccess.getRecordFieldAccess().getMutableMutableKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecordFieldRule());
					}
					setWithLastConsumed($current, "mutable", true, "mutable");
				}
			)
		)?
		(
			(
				lv_required_2_0='required'
				{
					newLeafNode(lv_required_2_0, grammarAccess.getRecordFieldAccess().getRequiredRequiredKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecordFieldRule());
					}
					setWithLastConsumed($current, "required", true, "required");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRecordFieldAccess().getNameQualifiedIDParserRuleCall_3_0());
				}
				lv_name_3_0=ruleQualifiedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecordFieldRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.cmf.occi.core.xtext.OCCI.QualifiedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getRecordFieldAccess().getColonKeyword_4());
		}
		(
			otherlv_5='type'
			{
				newLeafNode(otherlv_5, grammarAccess.getRecordFieldAccess().getTypeKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRecordFieldRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRecordFieldAccess().getTypeDataTypeCrossReference_5_1_0());
					}
					ruleQualifiedID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getRecordFieldAccess().getEqualsSignKeyword_6_0());
			}
			(
				(
					lv_default_8_0=RULE_STRING
					{
						newLeafNode(lv_default_8_0, grammarAccess.getRecordFieldAccess().getDefaultSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRecordFieldRule());
						}
						setWithLastConsumed(
							$current,
							"default",
							lv_default_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getRecordFieldAccess().getLeftCurlyBracketKeyword_7_0());
			}
			(
				otherlv_10='description'
				{
					newLeafNode(otherlv_10, grammarAccess.getRecordFieldAccess().getDescriptionKeyword_7_1_0());
				}
				(
					(
						lv_description_11_0=RULE_STRING
						{
							newLeafNode(lv_description_11_0, grammarAccess.getRecordFieldAccess().getDescriptionSTRINGTerminalRuleCall_7_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRecordFieldRule());
							}
							setWithLastConsumed(
								$current,
								"description",
								lv_description_11_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)?
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getRecordFieldAccess().getRightCurlyBracketKeyword_7_2());
			}
		)
		(
			otherlv_13='annotations'
			{
				newLeafNode(otherlv_13, grammarAccess.getRecordFieldAccess().getAnnotationsKeyword_8_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getRecordFieldAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRecordFieldAccess().getAnnotationsAnnotationParserRuleCall_8_2_0());
					}
					lv_annotations_15_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRecordFieldRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_15_0,
							"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getRecordFieldAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRecordFieldAccess().getAnnotationsAnnotationParserRuleCall_8_3_1_0());
						}
						lv_annotations_17_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecordFieldRule());
							}
							add(
								$current,
								"annotations",
								lv_annotations_17_0,
								"org.eclipse.cmf.occi.core.xtext.OCCI.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getRecordFieldAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
	)
;

// Entry rule entryRuleArrayType
entryRuleArrayType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	iv_ruleArrayType=ruleArrayType
	{ $current=$iv_ruleArrayType.current; }
	EOF;

// Rule ArrayType
ruleArrayType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ArrayType'
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getArrayTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getArrayTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getTypeKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getArrayTypeAccess().getTypeDataTypeCrossReference_3_0());
				}
				ruleQualifiedID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getArrayTypeAccess().getLeftParenthesisKeyword_4_0());
			}
			otherlv_5='documentation'
			{
				newLeafNode(otherlv_5, grammarAccess.getArrayTypeAccess().getDocumentationKeyword_4_1());
			}
			(
				(
					lv_documentation_6_0=RULE_STRING
					{
						newLeafNode(lv_documentation_6_0, grammarAccess.getArrayTypeAccess().getDocumentationSTRINGTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayTypeRule());
						}
						setWithLastConsumed(
							$current,
							"documentation",
							lv_documentation_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getArrayTypeAccess().getRightParenthesisKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleEIntegerObject
entryRuleEIntegerObject returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntegerObjectRule()); }
	iv_ruleEIntegerObject=ruleEIntegerObject
	{ $current=$iv_ruleEIntegerObject.current.getText(); }
	EOF;

// Rule EIntegerObject
ruleEIntegerObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntegerObjectAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntegerObjectAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleQualifiedID
entryRuleQualifiedID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedIDRule()); }
	iv_ruleQualifiedID=ruleQualifiedID
	{ $current=$iv_ruleQualifiedID.current.getText(); }
	EOF;

// Rule QualifiedID
ruleQualifiedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_QUALIFIED_ID_1=RULE_QUALIFIED_ID
		{
			$current.merge(this_QUALIFIED_ID_1);
		}
		{
			newLeafNode(this_QUALIFIED_ID_1, grammarAccess.getQualifiedIDAccess().getQUALIFIED_IDTerminalRuleCall_1());
		}
		    |
		{
			newCompositeNode(grammarAccess.getQualifiedIDAccess().getKEYWORDParserRuleCall_2());
		}
		this_KEYWORD_2=ruleKEYWORD
		{
			$current.merge(this_KEYWORD_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNameID
entryRuleNameID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNameIDRule()); }
	iv_ruleNameID=ruleNameID
	{ $current=$iv_ruleNameID.current.getText(); }
	EOF;

// Rule NameID
ruleNameID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_ID_0=RULE_ID
			{
				$current.merge(this_ID_0);
			}
			{
				newLeafNode(this_ID_0, grammarAccess.getNameIDAccess().getIDTerminalRuleCall_0_0());
			}
			(
				this_ID_1=RULE_ID
				{
					$current.merge(this_ID_1);
				}
				{
					newLeafNode(this_ID_1, grammarAccess.getNameIDAccess().getIDTerminalRuleCall_0_1_0());
				}
				    |
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNameIDAccess().getHyphenMinusKeyword_0_1_1());
				}
			)*
		)
		    |
		{
			newCompositeNode(grammarAccess.getNameIDAccess().getKEYWORDParserRuleCall_1());
		}
		this_KEYWORD_3=ruleKEYWORD
		{
			$current.merge(this_KEYWORD_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleKEYWORD
entryRuleKEYWORD returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKEYWORDRule()); }
	iv_ruleKEYWORD=ruleKEYWORD
	{ $current=$iv_ruleKEYWORD.current.getText(); }
	EOF;

// Rule KEYWORD
ruleKEYWORD returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='extension'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getExtensionKeyword_0());
		}
		    |
		kw='description'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getDescriptionKeyword_1());
		}
		    |
		kw='specification'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getSpecificationKeyword_2());
		}
		    |
		kw='as'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAsKeyword_3());
		}
		    |
		kw='kind'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getKindKeyword_4());
		}
		    |
		kw='extends'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getExtendsKeyword_5());
		}
		    |
		kw='source'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getSourceKeyword_6());
		}
		    |
		kw='target'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getTargetKeyword_7());
		}
		    |
		kw='annotations'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAnnotationsKeyword_8());
		}
		    |
		kw='title'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getTitleKeyword_9());
		}
		    |
		kw='scheme'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getSchemeKeyword_10());
		}
		    |
		kw='mixin'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMixinKeyword_11());
		}
		    |
		kw='depends'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getDependsKeyword_12());
		}
		    |
		kw='applies'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAppliesKeyword_13());
		}
		    |
		kw='annotation'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAnnotationKeyword_14());
		}
		    |
		kw='key'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getKeyKeyword_15());
		}
		    |
		kw='value'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getValueKeyword_16());
		}
		    |
		kw='attribute'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAttributeKeyword_17());
		}
		    |
		kw='mutable'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMutableKeyword_18());
		}
		    |
		kw='required'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getRequiredKeyword_19());
		}
		    |
		kw='type'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getTypeKeyword_20());
		}
		    |
		kw='action'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getActionKeyword_21());
		}
		    |
		kw='constraint'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getConstraintKeyword_22());
		}
		    |
		kw='body'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getBodyKeyword_23());
		}
		    |
		kw='StringType'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getStringTypeKeyword_24());
		}
		    |
		kw='documentation'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getDocumentationKeyword_25());
		}
		    |
		kw='pattern'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getPatternKeyword_26());
		}
		    |
		kw='length'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getLengthKeyword_27());
		}
		    |
		kw='minLength'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMinLengthKeyword_28());
		}
		    |
		kw='maxLength'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMaxLengthKeyword_29());
		}
		    |
		kw='EObjectType'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getEObjectTypeKeyword_30());
		}
		    |
		kw='instanceClassName'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getInstanceClassNameKeyword_31());
		}
		    |
		kw='BooleanType'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getBooleanTypeKeyword_32());
		}
		    |
		kw='NumericType'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getNumericTypeKeyword_33());
		}
		    |
		kw='totalDigits'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getTotalDigitsKeyword_34());
		}
		    |
		kw='minExclusive'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMinExclusiveKeyword_35());
		}
		    |
		kw='maxExclusive'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMaxExclusiveKeyword_36());
		}
		    |
		kw='minInclusive'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMinInclusiveKeyword_37());
		}
		    |
		kw='maxInclusive'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMaxInclusiveKeyword_38());
		}
		    |
		kw='Byte'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getByteKeyword_39());
		}
		    |
		kw='Double'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getDoubleKeyword_40());
		}
		    |
		kw='Float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getFloatKeyword_41());
		}
		    |
		kw='Integer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getIntegerKeyword_42());
		}
		    |
		kw='Long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getLongKeyword_43());
		}
		    |
		kw='Short'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getShortKeyword_44());
		}
		    |
		kw='BigDecimal'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getBigDecimalKeyword_45());
		}
		    |
		kw='EnumerationType'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getEnumerationTypeKeyword_46());
		}
		    |
		kw='literals'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getLiteralsKeyword_47());
		}
		    |
		kw='RecordType'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getRecordTypeKeyword_48());
		}
		    |
		kw='fields'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getFieldsKeyword_49());
		}
		    |
		kw='field'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getFieldKeyword_50());
		}
		    |
		kw='ArrayType'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getArrayTypeKeyword_51());
		}
	)
;

// Rule NumericTypeEnum
ruleNumericTypeEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Byte'
			{
				$current = grammarAccess.getNumericTypeEnumAccess().getByteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNumericTypeEnumAccess().getByteEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Double'
			{
				$current = grammarAccess.getNumericTypeEnumAccess().getDoubleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNumericTypeEnumAccess().getDoubleEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Float'
			{
				$current = grammarAccess.getNumericTypeEnumAccess().getFloatEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNumericTypeEnumAccess().getFloatEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Integer'
			{
				$current = grammarAccess.getNumericTypeEnumAccess().getIntegerEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getNumericTypeEnumAccess().getIntegerEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Long'
			{
				$current = grammarAccess.getNumericTypeEnumAccess().getLongEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getNumericTypeEnumAccess().getLongEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Short'
			{
				$current = grammarAccess.getNumericTypeEnumAccess().getShortEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getNumericTypeEnumAccess().getShortEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='BigDecimal'
			{
				$current = grammarAccess.getNumericTypeEnumAccess().getBigDecimalEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getNumericTypeEnumAccess().getBigDecimalEnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_QUALIFIED_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* '.' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ('.' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*)*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
