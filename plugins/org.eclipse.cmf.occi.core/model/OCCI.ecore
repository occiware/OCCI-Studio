<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="occi" nsURI="http://schemas.ogf.org/occi/core/ecore" nsPrefix="occi">
  <eAnnotations source="http://www.eclipse.org/OCL/Import">
    <details key="ecore" value="http://www.eclipse.org/emf/2002/Ecore"/>
  </eAnnotations>
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="AnnotatedElement" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="#//Annotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Annotation">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" lowerBound="1" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Category" abstract="true" eSuperTypes="#//AnnotatedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="IdentityUnique SchemeEndsWithSharp AttributesNameUnique"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="IdentityUnique" value="Category.allInstances()->isUnique(scheme + term)"/>
      <details key="SchemeEndsWithSharp" value="scheme.substring(scheme.size(), scheme.size()) = '#'"/>
      <details key="AttributesNameUnique" value="attributes->isUnique(name)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="#//Name"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="term" lowerBound="1" eType="#//String"
        changeable="false" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="self.name.toLowerCase()"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="scheme" lowerBound="1"
        eType="#//Scheme"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="title" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" upperBound="-1"
        eType="#//Attribute" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Constraint">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="#//Name"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" lowerBound="1" eType="#//OCL"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#//Category">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="ActionTermUnicity ConstraintNameUnique"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="ActionTermUnicity" value="actions->isUnique(term)"/>
      <details key="ConstraintNameUnique" value="constraints->isUnique(name)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="actions" upperBound="-1"
        eType="#//Action" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraints" upperBound="-1"
        eType="#//Constraint" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="fsm" eType="#//FSM" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FSM">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="State"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="AttributeTypeMustBeEEnum containedAttribute"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="AttributeTypeMustBeEEnum" value="attribute.type.oclIsTypeOf(EnumerationType)"/>
      <details key="containedAttribute" value="self.oclContainer().oclAsType(Type).attributes->includes(self.attribute)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedState" upperBound="-1"
        eType="#//State" containment="true" eOpposite="#//State/owningFSM">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="name" value="State"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" lowerBound="1"
        eType="#//Attribute"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="State">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="StateLiteralAlreadyDefinedInFSMAttributeType"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="StateLiteralAlreadyDefinedInFSMAttributeType" value="owningFSM.attribute.type=self.literal.enumerationType"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="literal" eType="#//EnumerationLiteral">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="name" value="State"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="initial" lowerBound="1"
        eType="#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="final" lowerBound="1" eType="#//Boolean"
        defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFSM" lowerBound="1"
        eType="#//FSM" eOpposite="#//FSM/ownedState"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outgoingTransition" upperBound="-1"
        eType="#//Transition" containment="true" eOpposite="#//Transition/source">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="name" value="State"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Transition">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="State"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="containedActionMustBeDeclaredInTheAppropriateType"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="containedActionMustBeDeclaredInTheAppropriateType" value="Tuple {&#xA;&#x9;&#x9;&#x9;&#x9;status: Boolean= let type: Type = self.oclContainer().oclAsType(State).oclContainer().oclAsType(FSM).oclContainer().oclAsType(Type) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.action &lt;> null) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;type.actions->union(type.oclAsType(Kind)->closure(parent)->flatten()->collect(k|k.actions)->flatten())->includes(self.action)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; endif,&#xA;&#x9;&#x9;&#x9;&#x9;message: String =if (self.action &lt;> null)  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then 'The action '+ self.action.name +' declared in '+self.action.oclContainer().oclAsType(Type).name+&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;' kind/mixin cannot be used in the FSM of '+self.oclContainer().oclAsType(State).oclContainer().oclAsType(FSM).oclContainer().oclAsType(Type).name+' kind/mixin.'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;'The action of Transition instance coming from the &quot;'+ source.literal.name +'&quot; state to the &quot;' +target.literal.name + '&quot; state in the FSM of &quot;' + source.owningFSM.oclContainer().oclAsType(Type).name+ '&quot; kind/mixin instance must be a set'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;,&#xA;&#x9;&#x9;&#x9;&#x9;severity :Integer = -1&#xA;&#x9;&#x9;&#x9;&#x9;}.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
        eType="#//State" eOpposite="#//State/outgoingTransition"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="#//State"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//Action">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="name" value="State"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Attribute" eSuperTypes="#//AnnotatedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="DefaultValueMustBeInstanceOfType"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="DefaultValueMustBeInstanceOfType" value="Tuple{&#xA;&#x9;&#x9;&#x9;&#x9;status : Boolean = &#x9;if (default &lt;> null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;if (type.oclIsTypeOf(BooleanType))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (default.toLower() = 'true' or default.toLower() = 'false') &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (type.oclIsTypeOf(EnumerationType)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (type.oclAsType(EnumerationType).literals->collect(l|l.name)->includes(default)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif, &#xA;&#x9;&#x9;&#x9;&#x9;message : String = 'The default value of the attribute '+ name +' is wrong', &#xA;&#x9;&#x9;&#x9;&#x9;severity :&#x9;Integer = - 1, &#xA;&#x9;&#x9;&#x9;&#x9;quickfix : String = 'quickfix'}&#xA;&#x9;&#x9;&#x9;&#x9;.status"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="#//AttributeName"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="mutable" lowerBound="1"
        eType="#//Boolean" defaultValueLiteral="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="required" lowerBound="1"
        eType="#//Boolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="default" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//DataType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Kind" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="CorrectScheme NoCyclicInheritance EntityKindIsRootParent AttributesNameNotAlreadyDefinedInParent targetReferenceInvariant sourceReferenceInvariant"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="CorrectScheme" value="scheme = self.oclContainer().oclAsType(Extension).scheme"/>
      <details key="NoCyclicInheritance" value="parent->closure(parent)->excludes(self)"/>
      <details key="EntityKindIsRootParent" value="self->closure(parent)->exists(k |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;k.term = 'entity' and k.scheme = 'http://schemas.ogf.org/occi/core#' and k.parent = null)"/>
      <details key="AttributesNameNotAlreadyDefinedInParent" value="attributes.name->excludesAll(parent->closure(parent).attributes.name)"/>
      <details key="targetReferenceInvariant" value="Tuple {&#xA;&#x9;&#x9;&#x9;&#x9;status: Boolean= &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(self.target->size() > 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self->closure(parent)->exists(k |k.term = 'link' and k.scheme = 'http://schemas.ogf.org/occi/core#')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.target->forAll(targetKind|targetKind->closure(parent)->exists(k |k.term = 'resource' and k.scheme = 'http://schemas.ogf.org/occi/core#'))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; endif,&#xA;&#x9;&#x9;&#x9;&#x9;message: String ='The target reference of '+self.name +' kind must connect a child of &quot;link&quot; Kind to a child of &quot;resource&quot; Kind' ,&#xA;&#x9;&#x9;&#x9;&#x9;severity :Integer = -1,&#xA;&#x9;&#x9;&#x9;&#x9;quickfix:String = 'quickfix'&#xA;&#x9;&#x9;&#x9;}.status"/>
      <details key="sourceReferenceInvariant" value="Tuple {&#xA;&#x9;&#x9;&#x9;&#x9;status: Boolean= &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(self.source->size() > 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self->closure(parent)->exists(k |k.term = 'link' and k.scheme = 'http://schemas.ogf.org/occi/core#')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.source->forAll(sourceKind|sourceKind->closure(parent)->exists(k |k.term = 'resource' and k.scheme = 'http://schemas.ogf.org/occi/core#'))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; endif,&#xA;&#x9;&#x9;&#x9;&#x9;message: String ='The source reference of '+self.name +' kind must connect a child of &quot;link&quot; Kind to a child of &quot;resource&quot; Kind' ,&#xA;&#x9;&#x9;&#x9;&#x9;severity :Integer = -1,&#xA;&#x9;&#x9;&#x9;&#x9;quickfix:String = 'quickfix'&#xA;&#x9;&#x9;&#x9;}.status"/>
    </eAnnotations>
    <eOperations name="occiIsKindOf" lowerBound="1" eType="#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="&#x9;if (self.parent &lt;> null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(kind &lt;> null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(self = kind)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(self.parent = kind) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.parent.occiIsKindOf(kind)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
      </eAnnotations>
      <eParameters name="kind" eType="#//Kind"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parent" eType="#//Kind"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="entities" ordered="false"
        upperBound="-1" eType="#//Entity" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="Entity.allInstances()->select(kind = self)"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" upperBound="-1"
        eType="#//Kind"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" upperBound="-1"
        eType="#//Kind"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Action" eSuperTypes="#//Category">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="CorrectScheme containedAction"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="CorrectScheme" value="let category = oclContainer().oclAsType(Category)&#xA;&#x9;&#x9;&#x9;in scheme = category.scheme.substring(1, category.scheme.size() - 1) + '/' + category.term + '/action#'"/>
      <details key="containedAction" value="Tuple {&#xA;&#x9;&#x9;&#x9;&#x9;status: Boolean= &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(self.oclContainer.oclIsTypeOf(Kind))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (self.oclContainer().oclAsType(Kind).fsm &lt;> null) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;self.oclContainer().oclAsType(Kind).fsm.ownedState.outgoingTransition.action->includes(self) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; endif,&#xA;&#x9;&#x9;&#x9;&#x9;message: String ='The action '+name+' doesn\'t appear in the FSM of '+self.oclContainer().oclAsType(Kind).name +' Kind',&#xA;&#x9;&#x9;&#x9;&#x9;severity :Integer = 1,&#xA;&#x9;&#x9;&#x9;&#x9;quickfix:String = 'quickfix'&#xA;&#x9;&#x9;&#x9;&#x9;}.status"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Mixin" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="CorrectScheme NoCyclicInheritance AttributesNameNotAlreadyDefinedInDepends"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="CorrectScheme" value="&#xA;&#xA;&#x9;&#x9;&#x9;/* Previously let ownerScheme = owner.oclAsType(Extension).scheme in scheme.substring(1,ownerScheme.size()-1) = ownerScheme.substring(1,ownerScheme.size()-1) */&#xA;&#x9;&#x9;&#x9;let owner = self.oclContainer()&#xA;&#x9;&#x9;&#x9;in if owner.oclIsTypeOf(Extension)&#xA;&#x9;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;let ownerScheme = owner.oclAsType(Extension).scheme&#xA;&#x9;&#x9;in scheme.substring(1, ownerScheme.size() - 1) = ownerScheme.substring(1, ownerScheme.size() - 1) else true&#xA;&#x9;&#x9;&#x9;endif"/>
      <details key="NoCyclicInheritance" value="depends->closure(depends)->excludes(self)"/>
      <details key="AttributesNameNotAlreadyDefinedInDepends" value="attributes.name->excludesAll(depends->closure(depends).attributes.name)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="depends" upperBound="-1"
        eType="#//Mixin"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="applies" upperBound="-1"
        eType="#//Kind"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="entities" ordered="false"
        upperBound="-1" eType="#//Entity" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="Entity.allInstances()->select(parts.mixin->includes(self))"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Entity" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="IdUnique AttributesNameUnique KindCompatibleWithOneAppliesOfEachMixin DifferentMixins"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="IdUnique" value="Entity.allInstances()->isUnique(id)"/>
      <details key="AttributesNameUnique" value="attributes->isUnique(name)"/>
      <details key="KindCompatibleWithOneAppliesOfEachMixin" value="parts.mixin->forAll(m |&#xA;&#x9;&#x9;&#x9;&#x9;m.applies->notEmpty() implies m.applies->exists(k | kind->closure(parent)->includes(k)))"/>
      <details key="DifferentMixins" value="Tuple {&#xA;&#x9;&#x9;&#x9;&#x9;status: Boolean= self.parts ->forAll(mixinBase1, mixinBase2 | mixinBase1 &lt;> mixinBase2 implies mixinBase1.mixin &lt;> mixinBase2.mixin),&#xA;&#x9;&#x9;&#x9;&#x9;message: String ='Two instances of the same mixin are not allowed on the same Entity '+self.oclAsType(Entity).id,&#xA;&#x9;&#x9;&#x9;&#x9;severity: Integer = -1,&#xA;&#x9;&#x9;&#x9;&#x9;quickfix: String = 'quickfix'&#xA;&#x9;&#x9;&#x9;}.status"/>
    </eAnnotations>
    <eOperations name="occiCreate"/>
    <eOperations name="occiRetrieve"/>
    <eOperations name="occiUpdate"/>
    <eOperations name="occiDelete"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="#//URI"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="title" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="kind" lowerBound="1" eType="#//Kind"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="location" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" upperBound="-1"
        eType="#//AttributeState" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mixins" ordered="false"
        upperBound="-1" eType="#//Mixin" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="parts.mixin->asSet()"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parts" upperBound="-1"
        eType="#//MixinBase" containment="true" eOpposite="#//MixinBase/entity"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MixinBase">
    <eStructuralFeatures xsi:type="ecore:EReference" name="mixin" lowerBound="1" eType="#//Mixin"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="entity" lowerBound="1"
        eType="#//Entity" eOpposite="#//Entity/parts"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" upperBound="-1"
        eType="#//AttributeState" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeState">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="#//AttributeName"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Resource" eSuperTypes="#//Entity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="ResourceKindIsInParent"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="ResourceKindIsInParent" value="kind->closure(parent)->exists(k |&#xA;&#x9;&#x9;&#x9;&#x9;k.term = 'resource' and k.scheme = 'http://schemas.ogf.org/occi/core#')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="summary" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="links" upperBound="-1"
        eType="#//Link" containment="true" eOpposite="#//Link/source"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rlinks" upperBound="-1"
        eType="#//Link" eOpposite="#//Link/target"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Link" eSuperTypes="#//Entity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="LinkKindIsInParent sourceReferenceInvariant targetReferenceInvariant"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="LinkKindIsInParent" value="kind->closure(parent)->exists(k |&#xA;&#x9;&#x9;&#x9;&#x9;k.term = 'link' and k.scheme = 'http://schemas.ogf.org/occi/core#')"/>
      <details key="sourceReferenceInvariant" value="Tuple {&#xA;&#x9;&#x9;&#x9;&#x9;status: Boolean= LinkSourceInvariant(self.source.kind,self.oclAsType(Entity).kind),&#xA;&#x9;&#x9;&#x9;&#x9;message: String ='The kind of the source reference in the link instance '+self.oclAsType(Entity).title+' must be a kind of the source of the kind of this link' ,&#xA;&#x9;&#x9;&#x9;&#x9;severity: Integer = -1,&#xA;&#x9;&#x9;&#x9;&#x9;quickfix: String = 'quickfix'&#xA;&#x9;&#x9;&#x9;}.status"/>
      <details key="targetReferenceInvariant" value="Tuple {&#xA;&#x9;&#x9;&#x9;&#x9;status: Boolean= LinkTargetInvariant(self.target.kind,self.oclAsType(Entity).kind),&#xA;&#x9;&#x9;&#x9;&#x9;message: String ='The kind of the target reference in the link instance '+self.oclAsType(Entity).title+' must be a kind of the target of the kind of this link' ,&#xA;&#x9;&#x9;&#x9;&#x9;severity: Integer = -1,&#xA;&#x9;&#x9;&#x9;&#x9;quickfix: String = 'quickfix'&#xA;&#x9;&#x9;&#x9;}.status"/>
    </eAnnotations>
    <eOperations name="LinkTargetInvariant" lowerBound="1" eType="#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/* if target or source of the kind of this link instance exists */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (linkInstanceKind.target->size() > 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;linkInstanceKind.target->exists (aTarget |resourcekind.occiIsKindOf(aTarget))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(linkInstanceKind.parent &lt;> null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LinkTargetInvariant(resourcekind, linkInstanceKind.parent)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
      </eAnnotations>
      <eParameters name="resourcekind" eType="#//Kind"/>
      <eParameters name="linkInstanceKind" eType="#//Kind"/>
    </eOperations>
    <eOperations name="LinkSourceInvariant" lowerBound="1" eType="#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/* if target or source of the kind of this link instance exists */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (linkInstanceKind.source->size() > 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;linkInstanceKind.source->exists (aSource|resourcekind.occiIsKindOf(aSource))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(linkInstanceKind.parent &lt;> null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LinkSourceInvariant(resourcekind, linkInstanceKind.parent)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
      </eAnnotations>
      <eParameters name="resourcekind" eType="#//Kind"/>
      <eParameters name="linkInstanceKind" eType="#//Kind"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
        eType="#//Resource" eOpposite="#//Resource/links"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="#//Resource" eOpposite="#//Resource/rlinks"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Extension">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="SchemeUnique KindsSchemeValid MixinsSchemeValid TermUnicity KindParentLocalOrImported MixinDependsLocalOrImported MixinAppliesLocalOrImported"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="SchemeUnique" value="Extension.allInstances()->isUnique(scheme)"/>
      <details key="KindsSchemeValid" value="kinds->forAll(k | k.scheme = self.scheme)"/>
      <details key="MixinsSchemeValid" value="mixins->forAll(m | m.scheme.substring(1, scheme.size() - 1) = scheme.substring(1,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;scheme.size() - 1))"/>
      <details key="TermUnicity" value="kinds.term->intersection(mixins.term)->isEmpty()"/>
      <details key="KindParentLocalOrImported" value="kinds->forAll(parent &lt;> null implies let parentExtension = parent.oclContainer()&#xA;&#x9;&#x9;&#x9;in parentExtension = self or import->includes(parentExtension))"/>
      <details key="MixinDependsLocalOrImported" value="mixins.depends->forAll(let extension = oclContainer()&#xA;&#x9;&#x9;&#x9;in extension = self or import->includes(extension))"/>
      <details key="MixinAppliesLocalOrImported" value="mixins.applies->forAll(let extension = oclContainer()&#xA;&#x9;&#x9;&#x9;in extension = self or import->includes(extension))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="#//Name"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="scheme" lowerBound="1"
        eType="#//Scheme"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="import" upperBound="-1"
        eType="#//Extension"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="kinds" upperBound="-1"
        eType="#//Kind" containment="true" eKeys="#//Category/term"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mixins" upperBound="-1"
        eType="#//Mixin" containment="true" eKeys="#//Category/term"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="types" upperBound="-1"
        eType="#//DataType" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="specification" eType="#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Configuration">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="AllResourcesKindsInUse AllResourcesMixinsInUse AllResourcesLinksKindsInUse AllResourcesLinksMixinsInUse AllResourcesLinksTargetsInConfiguration AllMixinsAreTags"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="AllResourcesKindsInUse" value="use->includesAll(resources.kind.oclContainer())"/>
      <details key="AllResourcesMixinsInUse" value="&#xA;&#xA;&#x9;&#x9;/* Previously use->includesAll(resources.mixins.oclContainer()) */&#xA;&#x9;&#x9;&#x9;resources.parts.mixin->forAll(mo |&#xA;&#x9;&#x9;&#x9;let mixinOwner = mo.oclContainer()&#xA;&#x9;&#x9;&#x9;in if mixinOwner.oclIsTypeOf(Extension)&#xA;&#x9;&#x9;&#x9;&#x9;then self.use->includes(mixinOwner.oclAsType(Extension)) else self.mixins->includes(mo) endif)"/>
      <details key="AllResourcesLinksKindsInUse" value="use->includesAll(resources.links.kind.oclContainer())"/>
      <details key="AllResourcesLinksMixinsInUse" value="&#xA;&#xA;&#x9;&#x9;/* Previously use->includesAll(resources.links.mixins.oclContainer()) */&#xA;&#x9;&#x9;&#x9;resources.links.parts.mixin->forAll(mo |&#xA;&#x9;&#x9;&#x9;let mixinOwner = mo.oclContainer()&#xA;&#x9;&#x9;&#x9;in if mixinOwner.oclIsTypeOf(Extension)&#xA;&#x9;&#x9;&#x9;&#x9;then self.use->includes(mixinOwner.oclAsType(Extension)) else self.mixins->includes(mo) endif)"/>
      <details key="AllResourcesLinksTargetsInConfiguration" value="resources.links.target->forAll(r | r.oclContainer() = self)"/>
      <details key="AllMixinsAreTags" value="mixins->forAll(attributes->isEmpty() and actions->isEmpty() and depends->isEmpty())"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="location" eType="#//URI"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="use" upperBound="-1" eType="#//Extension"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resources" upperBound="-1"
        eType="#//Resource" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mixins" upperBound="-1"
        eType="#//Mixin" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DataType" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="DataTypeNameRegex"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="DataTypeNameRegex" value="self.name.matches('[a-zA-Z_][a-zA-Z0-9_]*')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="documentation" eType="#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BasicType" abstract="true" eSuperTypes="#//DataType"/>
  <eClassifiers xsi:type="ecore:EClass" name="StringType" eSuperTypes="#//BasicType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="PatternMustBeNotEmpty"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="PatternMustBeNotEmpty" value="if (pattern &lt;> null)  then pattern.size() > 0 else true endif"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="pattern" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="length" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"
        unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="minLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"
        unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"
        unsettable="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EObjectType" eSuperTypes="#//BasicType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="instanceClassNameMustHaveValue"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="instanceClassNameMustHaveValue" value="instanceClassName.size() > 0"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceClassName" lowerBound="1"
        eType="#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanType" eSuperTypes="#//BasicType"/>
  <eClassifiers xsi:type="ecore:EClass" name="NumericType" eSuperTypes="#//BasicType">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="#//NumericTypeEnum"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="totalDigits" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"
        unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="minExclusive" eType="#//String"
        unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxExclusive" eType="#//String"
        unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="minInclusive" eType="#//String"
        unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxInclusive" eType="#//String"
        unsettable="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerationType" eSuperTypes="#//DataType">
    <eStructuralFeatures xsi:type="ecore:EReference" name="literals" lowerBound="1"
        upperBound="-1" eType="#//EnumerationLiteral" containment="true" eOpposite="#//EnumerationLiteral/enumerationType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="EnumerationLiteralNameRegex"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="EnumerationLiteralNameRegex" value="self.name.matches('[a-zA-Z_][a-zA-Z0-9_]*')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="#//Name"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="documentation" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="enumerationType" lowerBound="1"
        eType="#//EnumerationType" eOpposite="#//EnumerationType/literals"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RecordType" eSuperTypes="#//DataType">
    <eStructuralFeatures xsi:type="ecore:EReference" name="recordFields" lowerBound="1"
        upperBound="-1" eType="#//RecordField" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RecordField" eSuperTypes="#//Attribute">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="TypeDifferentContainer ContainerMustBeRecordType RecordFieldNameRegex"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="TypeDifferentContainer" value="self.type &lt;> self.oclContainer"/>
      <details key="ContainerMustBeRecordType" value="self.oclContainer.oclIsTypeOf(occi::RecordType)"/>
      <details key="RecordFieldNameRegex" value="self.name.matches('[a-zA-Z][a-zA-Z0-9]*')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ArrayType" eSuperTypes="#//DataType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="TypeDifferentContainer"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="TypeDifferentContainer" value="self.type &lt;> self"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//DataType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="URI" instanceClassName="java.lang.String">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="pattern" value="[A-Za-z][A-Za-z0-9+-\.]*:(//(([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(\[(((([0-9A-Fa-f]{1,4}:){6}|::([0-9A-Fa-f]{1,4}:){5}|([0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){4}|(([0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){3}|(([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){2}|(([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:)|(([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]))|(([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\.[A-Za-z0-9\-_~\.!$&amp;'()*+,;=:]+)\]|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9])|([A-Za-z0-9\-_~\.!$&amp;'()*+,;=]|%[0-9A-Fa-f]{2})*)(:[0-9]*)?(/([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|/(([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})+(/([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})+(/([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|.{0})(\?([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@/?]|%[0-9A-Fa-f]{2})*)?(\#([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@/?]|%[0-9A-Fa-f]{2})*)?"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="OCL" instanceClassName="java.lang.String"/>
  <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="boolean"/>
  <eClassifiers xsi:type="ecore:EDataType" name="AttributeName" instanceClassName="java.lang.String">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="pattern" value="[a-zA-Z0-9]+(\.[a-zA-Z0-9]+)*"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Name" instanceClassName="java.lang.String">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="pattern" value="[a-zA-Z][a-zA-Z0-9_-]*"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Scheme" instanceClassName="java.lang.String">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="pattern" value="[A-Za-z][A-Za-z0-9+-\.]*:(//(([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(\[(((([0-9A-Fa-f]{1,4}:){6}|::([0-9A-Fa-f]{1,4}:){5}|([0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){4}|(([0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){3}|(([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){2}|(([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:)|(([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]))|(([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\.[A-Za-z0-9\-_~\.!$&amp;'()*+,;=:]+)\]|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9])|([A-Za-z0-9\-_~\.!$&amp;'()*+,;=]|%[0-9A-Fa-f]{2})*)(:[0-9]*)?(/([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|/(([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})+(/([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})+(/([A-Za-z0-9\-_~\.!$&amp;'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|.{0})(\#)"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="NumericTypeEnum">
    <eLiterals name="Byte"/>
    <eLiterals name="Double" value="1"/>
    <eLiterals name="Float" value="2"/>
    <eLiterals name="Integer" value="3"/>
    <eLiterals name="Long" value="4"/>
    <eLiterals name="Short" value="5"/>
    <eLiterals name="BigDecimal" value="6"/>
  </eClassifiers>
</ecore:EPackage>
