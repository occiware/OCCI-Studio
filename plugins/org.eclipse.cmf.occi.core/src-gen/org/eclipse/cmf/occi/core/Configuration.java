/**
 * Copyright (c) 2017 Inria
 *  
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 * - Faiez Zalila <faiez.zalila@inria.fr>
 */
package org.eclipse.cmf.occi.core;

import java.util.Map;
import org.eclipse.emf.common.util.DiagnosticChain;
import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Configuration</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.cmf.occi.core.Configuration#getDescription <em>Description</em>}</li>
 *   <li>{@link org.eclipse.cmf.occi.core.Configuration#getLocation <em>Location</em>}</li>
 *   <li>{@link org.eclipse.cmf.occi.core.Configuration#getUse <em>Use</em>}</li>
 *   <li>{@link org.eclipse.cmf.occi.core.Configuration#getResources <em>Resources</em>}</li>
 *   <li>{@link org.eclipse.cmf.occi.core.Configuration#getMixins <em>Mixins</em>}</li>
 * </ul>
 *
 * @see org.eclipse.cmf.occi.core.OCCIPackage#getConfiguration()
 * @model annotation="http://www.eclipse.org/emf/2002/Ecore constraints='AllResourcesLinksKindsInUse'"
 * @generated
 */
public interface Configuration extends EObject {
	/**
	 * Returns the value of the '<em><b>Description</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Description</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Description</em>' attribute.
	 * @see #setDescription(String)
	 * @see org.eclipse.cmf.occi.core.OCCIPackage#getConfiguration_Description()
	 * @model dataType="org.eclipse.cmf.occi.core.String"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://schemas.ogf.org/occi/core/ecore/2.0!Configuration!description'"
	 * @generated
	 */
	String getDescription();

	/**
	 * Sets the value of the '{@link org.eclipse.cmf.occi.core.Configuration#getDescription <em>Description</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Description</em>' attribute.
	 * @see #getDescription()
	 * @generated
	 */
	void setDescription(String value);

	/**
	 * Returns the value of the '<em><b>Location</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Location</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Location</em>' attribute.
	 * @see #setLocation(String)
	 * @see org.eclipse.cmf.occi.core.OCCIPackage#getConfiguration_Location()
	 * @model dataType="org.eclipse.cmf.occi.core.URI"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://schemas.ogf.org/occi/core/ecore/2.0!Configuration!location'"
	 * @generated
	 */
	String getLocation();

	/**
	 * Sets the value of the '{@link org.eclipse.cmf.occi.core.Configuration#getLocation <em>Location</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Location</em>' attribute.
	 * @see #getLocation()
	 * @generated
	 */
	void setLocation(String value);

	/**
	 * Returns the value of the '<em><b>Use</b></em>' reference list.
	 * The list contents are of type {@link org.eclipse.cmf.occi.core.Extension}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Use</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Use</em>' reference list.
	 * @see org.eclipse.cmf.occi.core.OCCIPackage#getConfiguration_Use()
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://schemas.ogf.org/occi/core/ecore/2.0!Configuration!use'"
	 * @generated
	 */
	EList<Extension> getUse();

	/**
	 * Returns the value of the '<em><b>Resources</b></em>' containment reference list.
	 * The list contents are of type {@link org.eclipse.cmf.occi.core.Resource}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Resources</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Resources</em>' containment reference list.
	 * @see org.eclipse.cmf.occi.core.OCCIPackage#getConfiguration_Resources()
	 * @model containment="true"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://schemas.ogf.org/occi/core/ecore/2.0!Configuration!resources'"
	 * @generated
	 */
	EList<Resource> getResources();

	/**
	 * Returns the value of the '<em><b>Mixins</b></em>' containment reference list.
	 * The list contents are of type {@link org.eclipse.cmf.occi.core.Mixin}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Mixins</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Mixins</em>' containment reference list.
	 * @see org.eclipse.cmf.occi.core.OCCIPackage#getConfiguration_Mixins()
	 * @model containment="true"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel get='throw new UnsupportedOperationException();  // FIXME Unimplemented http://schemas.ogf.org/occi/core/ecore/2.0!Configuration!mixins'"
	 * @generated
	 */
	EList<Mixin> getMixins();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv AllMixinsAreTags:\n *   let severity : Integer[1] = \'Configuration::AllMixinsAreTags\'.getSeverity()\n *   in\n *     if severity <= 0\n *     then true\n *     else\n *       let\n *         result : Boolean[?] = mixins->forAll(\n *           attributes->isEmpty() and\n *           actions->isEmpty() and\n *           depends->isEmpty())\n *       in\n *         \'Configuration::AllMixinsAreTags\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.evaluation.Executor%> executor = <%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%>.getExecutor(this);\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.ids.IdResolver%> idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.IntegerValue%> severity_0 = <%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllMixinsAreTags);\nfinal /*@NonInvalid\052/ boolean le = <%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%>.INSTANCE.evaluate(executor, severity_0, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_0;\nif (le) {\n\tsymbol_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n}\nelse {\n\t/*@Caught\052/ /*@Nullable\052/ <%java.lang.Object%> CAUGHT_result;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Mixin%>> mixins = this.getMixins();\n\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_mixins = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Mixin, mixins);\n\t\t/*@Thrown\052/ <%java.lang.Object%> accumulator = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1 = BOXED_mixins.iterator();\n\t\t/*@Thrown\052/ <%java.lang.Boolean%> result;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1.hasNext()) {\n\t\t\t\tif (accumulator == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE) {\n\t\t\t\t\tresult = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow (<%org.eclipse.ocl.pivot.values.InvalidValueException%>)accumulator;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Mixin%> _1 = (<%org.eclipse.cmf.occi.core.Mixin%>)ITERATOR__1.next();\n\t\t\t/**\n\t\t\t * attributes->isEmpty() and actions->isEmpty() and depends->isEmpty()\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Attribute%>> attributes = _1.getAttributes();\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_attributes = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Attribute, attributes);\n\t\t\tfinal /*@NonInvalid\052/ boolean isEmpty = <%org.eclipse.ocl.pivot.library.collection.CollectionIsEmptyOperation%>.INSTANCE.evaluate(BOXED_attributes).booleanValue();\n\t\t\t/*@NonInvalid\052/ boolean and;\n\t\t\tif (isEmpty) {\n\t\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Action%>> actions = _1.getActions();\n\t\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_actions = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Action, actions);\n\t\t\t\tfinal /*@NonInvalid\052/ boolean isEmpty_0 = <%org.eclipse.ocl.pivot.library.collection.CollectionIsEmptyOperation%>.INSTANCE.evaluate(BOXED_actions).booleanValue();\n\t\t\t\tand = isEmpty_0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tand = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ boolean and_0;\n\t\t\tif (and) {\n\t\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Mixin%>> depends = _1.getDepends();\n\t\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_depends = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Mixin, depends);\n\t\t\t\tfinal /*@NonInvalid\052/ boolean isEmpty_1 = <%org.eclipse.ocl.pivot.library.collection.CollectionIsEmptyOperation%>.INSTANCE.evaluate(BOXED_depends).booleanValue();\n\t\t\t\tand_0 = isEmpty_1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tand_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE;\n\t\t\t}\n\t\t\t//\n\t\t\tif (and_0 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE) {\t\t\t\t\t// Normal unsuccessful body evaluation result\n\t\t\t\tresult = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE;\n\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Stop immediately\n\t\t\t}\n\t\t\telse if (and_0 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE) {\t\t\t\t// Normal successful body evaluation result\n\t\t\t\t;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Carry on\n\t\t\t}\n\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Impossible badly typed result\n\t\t\t\taccumulator = new <%org.eclipse.ocl.pivot.values.InvalidValueException%>(<%org.eclipse.ocl.pivot.messages.PivotMessages%>.NonBooleanBody, \"forAll\");\n\t\t\t}\n\t\t}\n\t\tCAUGHT_result = result;\n\t}\n\tcatch (<%java.lang.Exception%> e) {\n\t\tCAUGHT_result = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = <%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.ocl.pivot.ids.TypeId%>.BOOLEAN, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllMixinsAreTags, this, (Object)null, diagnostics, context, (Object)null, severity_0, CAUGHT_result, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n\tsymbol_0 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_0;'"
	 * @generated
	 */
	boolean AllMixinsAreTags(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv AllResourcesLinksTargetsInConfiguration:\n *   let\n *     severity : Integer[1] = \'Configuration::AllResourcesLinksTargetsInConfiguration\'.getSeverity()\n *   in\n *     if severity <= 0\n *     then true\n *     else\n *       let\n *         result : Boolean[?] = resources.links.target->forAll(r |\n *           r.oclContainer() = self)\n *       in\n *         \'Configuration::AllResourcesLinksTargetsInConfiguration\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.evaluation.Executor%> executor = <%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%>.getExecutor(this);\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.ids.IdResolver%> idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.IntegerValue%> severity_0 = <%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesLinksTargetsInConfiguration);\nfinal /*@NonInvalid\052/ boolean le = <%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%>.INSTANCE.evaluate(executor, severity_0, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_0;\nif (le) {\n\tsymbol_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n}\nelse {\n\t/*@Caught\052/ /*@Nullable\052/ <%java.lang.Object%> CAUGHT_result;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Resource%>> resources = this.getResources();\n\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_resources = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Resource, resources);\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_Link);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1 = BOXED_resources.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect_0;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1.hasNext()) {\n\t\t\t\tcollect_0 = accumulator;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Resource%> _1 = (<%org.eclipse.cmf.occi.core.Resource%>)ITERATOR__1.next();\n\t\t\t/**\n\t\t\t * links\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Link%>> links = _1.getLinks();\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_links = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Link, links);\n\t\t\t//\n\t\t\tfor (Object value : BOXED_links.flatten().getElements()) {\n\t\t\t\taccumulator.add(value);\n\t\t\t}\n\t\t}\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_Resource);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1_0 = collect_0.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_0.hasNext()) {\n\t\t\t\tcollect = accumulator_0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Link%> _1_0 = (<%org.eclipse.cmf.occi.core.Link%>)ITERATOR__1_0.next();\n\t\t\t/**\n\t\t\t * target\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Resource%> target = _1_0.getTarget();\n\t\t\t//\n\t\t\taccumulator_0.add(target);\n\t\t}\n\t\t/*@Thrown\052/ <%java.lang.Object%> accumulator_1 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR_r = collect.iterator();\n\t\t/*@Thrown\052/ <%java.lang.Boolean%> result;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR_r.hasNext()) {\n\t\t\t\tif (accumulator_1 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE) {\n\t\t\t\t\tresult = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow (<%org.eclipse.ocl.pivot.values.InvalidValueException%>)accumulator_1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Resource%> r = (<%org.eclipse.cmf.occi.core.Resource%>)ITERATOR_r.next();\n\t\t\t/**\n\t\t\t * r.oclContainer() = self\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.lang.Object%> oclContainer = <%org.eclipse.ocl.pivot.library.classifier.ClassifierOclContainerOperation%>.INSTANCE.evaluate(executor, r);\n\t\t\tfinal /*@NonInvalid\052/ boolean eq = this.equals(oclContainer);\n\t\t\t//\n\t\t\tif (eq == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE) {\t\t\t\t\t// Normal unsuccessful body evaluation result\n\t\t\t\tresult = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE;\n\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Stop immediately\n\t\t\t}\n\t\t\telse if (eq == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE) {\t\t\t\t// Normal successful body evaluation result\n\t\t\t\t;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Carry on\n\t\t\t}\n\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Impossible badly typed result\n\t\t\t\taccumulator_1 = new <%org.eclipse.ocl.pivot.values.InvalidValueException%>(<%org.eclipse.ocl.pivot.messages.PivotMessages%>.NonBooleanBody, \"forAll\");\n\t\t\t}\n\t\t}\n\t\tCAUGHT_result = result;\n\t}\n\tcatch (<%java.lang.Exception%> e) {\n\t\tCAUGHT_result = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = <%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.ocl.pivot.ids.TypeId%>.BOOLEAN, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesLinksTargetsInConfiguration, this, (Object)null, diagnostics, context, (Object)null, severity_0, CAUGHT_result, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n\tsymbol_0 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_0;'"
	 * @generated
	 */
	boolean AllResourcesLinksTargetsInConfiguration(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv AllResourcesKindsInUse:\n *   let\n *     severity : Integer[1] = \'Configuration::AllResourcesKindsInUse\'.getSeverity()\n *   in\n *     if severity <= 0\n *     then true\n *     else\n *       let\n *         result : Boolean[1] = use->includesAll(resources.kind.oclContainer())\n *       in\n *         \'Configuration::AllResourcesKindsInUse\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.evaluation.Executor%> executor = <%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%>.getExecutor(this);\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.ids.IdResolver%> idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.IntegerValue%> severity_0 = <%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesKindsInUse);\nfinal /*@NonInvalid\052/ boolean le = <%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%>.INSTANCE.evaluate(executor, severity_0, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_0;\nif (le) {\n\tsymbol_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n}\nelse {\n\t/*@Caught\052/ /*@NonNull\052/ <%java.lang.Object%> CAUGHT_result;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Extension%>> use = this.getUse();\n\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_use = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Extension, use);\n\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Resource%>> resources = this.getResources();\n\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_resources = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Resource, resources);\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_Kind);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1 = BOXED_resources.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect_0;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1.hasNext()) {\n\t\t\t\tcollect_0 = accumulator;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Resource%> _1 = (<%org.eclipse.cmf.occi.core.Resource%>)ITERATOR__1.next();\n\t\t\t/**\n\t\t\t * kind\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Kind%> kind = _1.getKind();\n\t\t\t//\n\t\t\taccumulator.add(kind);\n\t\t}\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_OclElement);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1_0 = collect_0.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_0.hasNext()) {\n\t\t\t\tcollect = accumulator_0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Kind%> _1_0 = (<%org.eclipse.cmf.occi.core.Kind%>)ITERATOR__1_0.next();\n\t\t\t/**\n\t\t\t * oclContainer()\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.lang.Object%> oclContainer = <%org.eclipse.ocl.pivot.library.classifier.ClassifierOclContainerOperation%>.INSTANCE.evaluate(executor, _1_0);\n\t\t\t//\n\t\t\tif (oclContainer instanceof <%org.eclipse.ocl.pivot.values.CollectionValue%>) {\n\t\t\t\tfor (Object value : ((<%org.eclipse.ocl.pivot.values.CollectionValue%>)oclContainer).flatten().getElements()) {\n\t\t\t\t\taccumulator_0.add(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taccumulator_0.add(oclContainer);\n\t\t\t}\n\t\t}\n\t\tfinal /*@Thrown\052/ boolean result = <%org.eclipse.ocl.pivot.library.collection.CollectionIncludesAllOperation%>.INSTANCE.evaluate(BOXED_use, collect).booleanValue();\n\t\tCAUGHT_result = result;\n\t}\n\tcatch (<%java.lang.Exception%> e) {\n\t\tCAUGHT_result = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = <%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.ocl.pivot.ids.TypeId%>.BOOLEAN, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesKindsInUse, this, (Object)null, diagnostics, context, (Object)null, severity_0, CAUGHT_result, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n\tsymbol_0 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_0;'"
	 * @generated
	 */
	boolean AllResourcesKindsInUse(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv AllResourcesLinksMixinsInUse:\n *   let\n *     severity : Integer[1] = \'Configuration::AllResourcesLinksMixinsInUse\'.getSeverity()\n *   in\n *     if severity <= 0\n *     then true\n *     else\n *       let\n *         result : Boolean[?] = resources.links.parts.mixin->forAll(mo |\n *           let mixinOwner : OclElement[?] = mo.oclContainer()\n *           in\n *             if mixinOwner.oclIsTypeOf(Extension)\n *             then\n *               self.use->includes(mixinOwner.oclAsType(Extension))\n *             else self.mixins->includes(mo)\n *             endif)\n *       in\n *         \'Configuration::AllResourcesLinksMixinsInUse\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.evaluation.Executor%> executor = <%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%>.getExecutor(this);\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.ids.IdResolver%> idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.IntegerValue%> severity_0 = <%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesLinksMixinsInUse);\nfinal /*@NonInvalid\052/ boolean le = <%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%>.INSTANCE.evaluate(executor, severity_0, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_1;\nif (le) {\n\tsymbol_1 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n}\nelse {\n\t/*@Caught\052/ /*@Nullable\052/ <%java.lang.Object%> CAUGHT_result;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Resource%>> resources = this.getResources();\n\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_resources = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Resource, resources);\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_Link);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1 = BOXED_resources.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect_1;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1.hasNext()) {\n\t\t\t\tcollect_1 = accumulator;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Resource%> _1 = (<%org.eclipse.cmf.occi.core.Resource%>)ITERATOR__1.next();\n\t\t\t/**\n\t\t\t * links\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Link%>> links = _1.getLinks();\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_links = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Link, links);\n\t\t\t//\n\t\t\tfor (Object value : BOXED_links.flatten().getElements()) {\n\t\t\t\taccumulator.add(value);\n\t\t\t}\n\t\t}\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_MixinBase);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1_0 = collect_1.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect_0;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_0.hasNext()) {\n\t\t\t\tcollect_0 = accumulator_0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Link%> _1_0 = (<%org.eclipse.cmf.occi.core.Link%>)ITERATOR__1_0.next();\n\t\t\t/**\n\t\t\t * parts\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.MixinBase%>> parts = _1_0.getParts();\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_parts = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_MixinBase, parts);\n\t\t\t//\n\t\t\tfor (Object value : BOXED_parts.flatten().getElements()) {\n\t\t\t\taccumulator_0.add(value);\n\t\t\t}\n\t\t}\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator_1 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_Mixin);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1_1 = collect_0.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_1.hasNext()) {\n\t\t\t\tcollect = accumulator_1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.MixinBase%> _1_1 = (<%org.eclipse.cmf.occi.core.MixinBase%>)ITERATOR__1_1.next();\n\t\t\t/**\n\t\t\t * mixin\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Mixin%> mixin = _1_1.getMixin();\n\t\t\t//\n\t\t\taccumulator_1.add(mixin);\n\t\t}\n\t\t/*@Thrown\052/ <%java.lang.Object%> accumulator_2 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR_mo = collect.iterator();\n\t\t/*@Thrown\052/ <%java.lang.Boolean%> result;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR_mo.hasNext()) {\n\t\t\t\tif (accumulator_2 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE) {\n\t\t\t\t\tresult = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow (<%org.eclipse.ocl.pivot.values.InvalidValueException%>)accumulator_2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Mixin%> mo = (<%org.eclipse.cmf.occi.core.Mixin%>)ITERATOR_mo.next();\n\t\t\t/**\n\t\t\t *\n\t\t\t * let mixinOwner : OclElement[?] = mo.oclContainer()\n\t\t\t * in\n\t\t\t *   if mixinOwner.oclIsTypeOf(Extension)\n\t\t\t *   then\n\t\t\t *     self.use->includes(mixinOwner.oclAsType(Extension))\n\t\t\t *   else self.mixins->includes(mo)\n\t\t\t *   endif\n\t\t\t \052/\n\t\t\t/*@Caught\052/ /*@NonNull\052/ <%java.lang.Object%> CAUGHT_symbol_0;\n\t\t\ttry {\n\t\t\t\tfinal /*@NonInvalid\052/ <%java.lang.Object%> mixinOwner = <%org.eclipse.ocl.pivot.library.classifier.ClassifierOclContainerOperation%>.INSTANCE.evaluate(executor, mo);\n\t\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.Class%> TYP_occi_c_c_Extension_0 = idResolver.getClass(<%org.eclipse.cmf.occi.OCCITables%>.CLSSid_Extension, null);\n\t\t\t\tfinal /*@Thrown\052/ boolean oclIsTypeOf = <%org.eclipse.ocl.pivot.library.oclany.OclAnyOclIsTypeOfOperation%>.INSTANCE.evaluate(executor, mixinOwner, TYP_occi_c_c_Extension_0).booleanValue();\n\t\t\t\t/*@Thrown\052/ boolean symbol_0;\n\t\t\t\tif (oclIsTypeOf) {\n\t\t\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Extension%>> use = this.getUse();\n\t\t\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_use = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Extension, use);\n\t\t\t\t\tfinal /*@Thrown\052/ <%org.eclipse.cmf.occi.core.Extension%> oclAsType = <%org.eclipse.ocl.pivot.utilities.ClassUtil%>.nonNullState((<%org.eclipse.cmf.occi.core.Extension%>)<%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%>.INSTANCE.evaluate(executor, mixinOwner, TYP_occi_c_c_Extension_0));\n\t\t\t\t\tfinal /*@Thrown\052/ boolean includes = <%org.eclipse.ocl.pivot.library.collection.CollectionIncludesOperation%>.INSTANCE.evaluate(BOXED_use, oclAsType).booleanValue();\n\t\t\t\t\tsymbol_0 = includes;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Mixin%>> mixins = this.getMixins();\n\t\t\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_mixins = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Mixin, mixins);\n\t\t\t\t\tfinal /*@NonInvalid\052/ boolean includes_0 = <%org.eclipse.ocl.pivot.library.collection.CollectionIncludesOperation%>.INSTANCE.evaluate(BOXED_mixins, mo).booleanValue();\n\t\t\t\t\tsymbol_0 = includes_0;\n\t\t\t\t}\n\t\t\t\tCAUGHT_symbol_0 = symbol_0;\n\t\t\t}\n\t\t\tcatch (<%java.lang.Exception%> e) {\n\t\t\t\tCAUGHT_symbol_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createInvalidValue(e);\n\t\t\t}\n\t\t\t//\n\t\t\tif (CAUGHT_symbol_0 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE) {\t\t\t\t\t// Normal unsuccessful body evaluation result\n\t\t\t\tresult = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE;\n\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Stop immediately\n\t\t\t}\n\t\t\telse if (CAUGHT_symbol_0 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE) {\t\t\t\t// Normal successful body evaluation result\n\t\t\t\t;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Carry on\n\t\t\t}\n\t\t\telse if (CAUGHT_symbol_0 instanceof <%org.eclipse.ocl.pivot.values.InvalidValueException%>) {\t\t// Abnormal exception evaluation result\n\t\t\t\taccumulator_2 = CAUGHT_symbol_0;\t\t\t\t\t\t\t\t\t// Cache an exception failure\n\t\t\t}\n\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Impossible badly typed result\n\t\t\t\taccumulator_2 = new <%org.eclipse.ocl.pivot.values.InvalidValueException%>(<%org.eclipse.ocl.pivot.messages.PivotMessages%>.NonBooleanBody, \"forAll\");\n\t\t\t}\n\t\t}\n\t\tCAUGHT_result = result;\n\t}\n\tcatch (<%java.lang.Exception%> e) {\n\t\tCAUGHT_result = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = <%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.ocl.pivot.ids.TypeId%>.BOOLEAN, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesLinksMixinsInUse, this, (Object)null, diagnostics, context, (Object)null, severity_0, CAUGHT_result, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n\tsymbol_1 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_1;'"
	 * @generated
	 */
	boolean AllResourcesLinksMixinsInUse(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv AllResourcesMixinsInUse:\n *   let\n *     severity : Integer[1] = \'Configuration::AllResourcesMixinsInUse\'.getSeverity()\n *   in\n *     if severity <= 0\n *     then true\n *     else\n *       let\n *         result : Boolean[?] = resources.parts.mixin->forAll(mo |\n *           let mixinOwner : OclElement[?] = mo.oclContainer()\n *           in\n *             if mixinOwner.oclIsTypeOf(Extension)\n *             then\n *               self.use->includes(mixinOwner.oclAsType(Extension))\n *             else self.mixins->includes(mo)\n *             endif)\n *       in\n *         \'Configuration::AllResourcesMixinsInUse\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.evaluation.Executor%> executor = <%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%>.getExecutor(this);\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.ids.IdResolver%> idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.IntegerValue%> severity_0 = <%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesMixinsInUse);\nfinal /*@NonInvalid\052/ boolean le = <%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%>.INSTANCE.evaluate(executor, severity_0, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_1;\nif (le) {\n\tsymbol_1 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n}\nelse {\n\t/*@Caught\052/ /*@Nullable\052/ <%java.lang.Object%> CAUGHT_result;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Resource%>> resources = this.getResources();\n\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_resources = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Resource, resources);\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_MixinBase);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1 = BOXED_resources.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect_0;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1.hasNext()) {\n\t\t\t\tcollect_0 = accumulator;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Resource%> _1 = (<%org.eclipse.cmf.occi.core.Resource%>)ITERATOR__1.next();\n\t\t\t/**\n\t\t\t * parts\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.MixinBase%>> parts = _1.getParts();\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_parts = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_MixinBase, parts);\n\t\t\t//\n\t\t\tfor (Object value : BOXED_parts.flatten().getElements()) {\n\t\t\t\taccumulator.add(value);\n\t\t\t}\n\t\t}\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_Mixin);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1_0 = collect_0.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_0.hasNext()) {\n\t\t\t\tcollect = accumulator_0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.MixinBase%> _1_0 = (<%org.eclipse.cmf.occi.core.MixinBase%>)ITERATOR__1_0.next();\n\t\t\t/**\n\t\t\t * mixin\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Mixin%> mixin = _1_0.getMixin();\n\t\t\t//\n\t\t\taccumulator_0.add(mixin);\n\t\t}\n\t\t/*@Thrown\052/ <%java.lang.Object%> accumulator_1 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR_mo = collect.iterator();\n\t\t/*@Thrown\052/ <%java.lang.Boolean%> result;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR_mo.hasNext()) {\n\t\t\t\tif (accumulator_1 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE) {\n\t\t\t\t\tresult = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow (<%org.eclipse.ocl.pivot.values.InvalidValueException%>)accumulator_1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Mixin%> mo = (<%org.eclipse.cmf.occi.core.Mixin%>)ITERATOR_mo.next();\n\t\t\t/**\n\t\t\t *\n\t\t\t * let mixinOwner : OclElement[?] = mo.oclContainer()\n\t\t\t * in\n\t\t\t *   if mixinOwner.oclIsTypeOf(Extension)\n\t\t\t *   then\n\t\t\t *     self.use->includes(mixinOwner.oclAsType(Extension))\n\t\t\t *   else self.mixins->includes(mo)\n\t\t\t *   endif\n\t\t\t \052/\n\t\t\t/*@Caught\052/ /*@NonNull\052/ <%java.lang.Object%> CAUGHT_symbol_0;\n\t\t\ttry {\n\t\t\t\tfinal /*@NonInvalid\052/ <%java.lang.Object%> mixinOwner = <%org.eclipse.ocl.pivot.library.classifier.ClassifierOclContainerOperation%>.INSTANCE.evaluate(executor, mo);\n\t\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.Class%> TYP_occi_c_c_Extension_0 = idResolver.getClass(<%org.eclipse.cmf.occi.OCCITables%>.CLSSid_Extension, null);\n\t\t\t\tfinal /*@Thrown\052/ boolean oclIsTypeOf = <%org.eclipse.ocl.pivot.library.oclany.OclAnyOclIsTypeOfOperation%>.INSTANCE.evaluate(executor, mixinOwner, TYP_occi_c_c_Extension_0).booleanValue();\n\t\t\t\t/*@Thrown\052/ boolean symbol_0;\n\t\t\t\tif (oclIsTypeOf) {\n\t\t\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Extension%>> use = this.getUse();\n\t\t\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_use = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Extension, use);\n\t\t\t\t\tfinal /*@Thrown\052/ <%org.eclipse.cmf.occi.core.Extension%> oclAsType = <%org.eclipse.ocl.pivot.utilities.ClassUtil%>.nonNullState((<%org.eclipse.cmf.occi.core.Extension%>)<%org.eclipse.ocl.pivot.library.oclany.OclAnyOclAsTypeOperation%>.INSTANCE.evaluate(executor, mixinOwner, TYP_occi_c_c_Extension_0));\n\t\t\t\t\tfinal /*@Thrown\052/ boolean includes = <%org.eclipse.ocl.pivot.library.collection.CollectionIncludesOperation%>.INSTANCE.evaluate(BOXED_use, oclAsType).booleanValue();\n\t\t\t\t\tsymbol_0 = includes;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Mixin%>> mixins = this.getMixins();\n\t\t\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_mixins = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Mixin, mixins);\n\t\t\t\t\tfinal /*@NonInvalid\052/ boolean includes_0 = <%org.eclipse.ocl.pivot.library.collection.CollectionIncludesOperation%>.INSTANCE.evaluate(BOXED_mixins, mo).booleanValue();\n\t\t\t\t\tsymbol_0 = includes_0;\n\t\t\t\t}\n\t\t\t\tCAUGHT_symbol_0 = symbol_0;\n\t\t\t}\n\t\t\tcatch (<%java.lang.Exception%> e) {\n\t\t\t\tCAUGHT_symbol_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createInvalidValue(e);\n\t\t\t}\n\t\t\t//\n\t\t\tif (CAUGHT_symbol_0 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE) {\t\t\t\t\t// Normal unsuccessful body evaluation result\n\t\t\t\tresult = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.FALSE_VALUE;\n\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Stop immediately\n\t\t\t}\n\t\t\telse if (CAUGHT_symbol_0 == <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE) {\t\t\t\t// Normal successful body evaluation result\n\t\t\t\t;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Carry on\n\t\t\t}\n\t\t\telse if (CAUGHT_symbol_0 instanceof <%org.eclipse.ocl.pivot.values.InvalidValueException%>) {\t\t// Abnormal exception evaluation result\n\t\t\t\taccumulator_1 = CAUGHT_symbol_0;\t\t\t\t\t\t\t\t\t// Cache an exception failure\n\t\t\t}\n\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Impossible badly typed result\n\t\t\t\taccumulator_1 = new <%org.eclipse.ocl.pivot.values.InvalidValueException%>(<%org.eclipse.ocl.pivot.messages.PivotMessages%>.NonBooleanBody, \"forAll\");\n\t\t\t}\n\t\t}\n\t\tCAUGHT_result = result;\n\t}\n\tcatch (<%java.lang.Exception%> e) {\n\t\tCAUGHT_result = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = <%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.ocl.pivot.ids.TypeId%>.BOOLEAN, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesMixinsInUse, this, (Object)null, diagnostics, context, (Object)null, severity_0, CAUGHT_result, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n\tsymbol_1 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_1;'"
	 * @generated
	 */
	boolean AllResourcesMixinsInUse(DiagnosticChain diagnostics, Map<Object, Object> context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='/**\n *\n * inv AllResourcesLinksKindsInUse:\n *   let\n *     severity : Integer[1] = \'Configuration::AllResourcesLinksKindsInUse\'.getSeverity()\n *   in\n *     if severity <= 0\n *     then true\n *     else\n *       let\n *         result : Boolean[1] = use->includesAll(\n *           resources.links.kind.oclContainer())\n *       in\n *         \'Configuration::AllResourcesLinksKindsInUse\'.logDiagnostic(self, null, diagnostics, context, null, severity, result, 0)\n *     endif\n \052/\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.evaluation.Executor%> executor = <%org.eclipse.ocl.pivot.internal.utilities.PivotUtilInternal%>.getExecutor(this);\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.ids.IdResolver%> idResolver = executor.getIdResolver();\nfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.IntegerValue%> severity_0 = <%org.eclipse.ocl.pivot.library.string.CGStringGetSeverityOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesLinksKindsInUse);\nfinal /*@NonInvalid\052/ boolean le = <%org.eclipse.ocl.pivot.library.oclany.OclComparableLessThanEqualOperation%>.INSTANCE.evaluate(executor, severity_0, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n/*@NonInvalid\052/ boolean symbol_0;\nif (le) {\n\tsymbol_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.TRUE_VALUE;\n}\nelse {\n\t/*@Caught\052/ /*@NonNull\052/ <%java.lang.Object%> CAUGHT_result;\n\ttry {\n\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Extension%>> use = this.getUse();\n\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_use = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Extension, use);\n\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Resource%>> resources = this.getResources();\n\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_resources = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Resource, resources);\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_Link);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1 = BOXED_resources.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect_1;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1.hasNext()) {\n\t\t\t\tcollect_1 = accumulator;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Resource%> _1 = (<%org.eclipse.cmf.occi.core.Resource%>)ITERATOR__1.next();\n\t\t\t/**\n\t\t\t * links\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.util.List%><<%org.eclipse.cmf.occi.core.Link%>> links = _1.getLinks();\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.ocl.pivot.values.OrderedSetValue%> BOXED_links = idResolver.createOrderedSetOfAll(<%org.eclipse.cmf.occi.OCCITables%>.ORD_CLSSid_Link, links);\n\t\t\t//\n\t\t\tfor (Object value : BOXED_links.flatten().getElements()) {\n\t\t\t\taccumulator.add(value);\n\t\t\t}\n\t\t}\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator_0 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_Kind);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1_0 = collect_1.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect_0;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_0.hasNext()) {\n\t\t\t\tcollect_0 = accumulator_0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Link%> _1_0 = (<%org.eclipse.cmf.occi.core.Link%>)ITERATOR__1_0.next();\n\t\t\t/**\n\t\t\t * kind\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Kind%> kind = _1_0.getKind();\n\t\t\t//\n\t\t\taccumulator_0.add(kind);\n\t\t}\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%>.Accumulator accumulator_1 = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createSequenceAccumulatorValue(<%org.eclipse.cmf.occi.OCCITables%>.SEQ_CLSSid_OclElement);\n\t\t/*@NonNull\052/ <%java.util.Iterator%><<%java.lang.Object%>> ITERATOR__1_1 = collect_0.iterator();\n\t\t/*@Thrown\052/ <%org.eclipse.ocl.pivot.values.SequenceValue%> collect;\n\t\twhile (true) {\n\t\t\tif (!ITERATOR__1_1.hasNext()) {\n\t\t\t\tcollect = accumulator_1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/*@NonInvalid\052/ <%org.eclipse.cmf.occi.core.Kind%> _1_1 = (<%org.eclipse.cmf.occi.core.Kind%>)ITERATOR__1_1.next();\n\t\t\t/**\n\t\t\t * oclContainer()\n\t\t\t \052/\n\t\t\tfinal /*@NonInvalid\052/ <%java.lang.Object%> oclContainer = <%org.eclipse.ocl.pivot.library.classifier.ClassifierOclContainerOperation%>.INSTANCE.evaluate(executor, _1_1);\n\t\t\t//\n\t\t\tif (oclContainer instanceof <%org.eclipse.ocl.pivot.values.CollectionValue%>) {\n\t\t\t\tfor (Object value : ((<%org.eclipse.ocl.pivot.values.CollectionValue%>)oclContainer).flatten().getElements()) {\n\t\t\t\t\taccumulator_1.add(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taccumulator_1.add(oclContainer);\n\t\t\t}\n\t\t}\n\t\tfinal /*@Thrown\052/ boolean result = <%org.eclipse.ocl.pivot.library.collection.CollectionIncludesAllOperation%>.INSTANCE.evaluate(BOXED_use, collect).booleanValue();\n\t\tCAUGHT_result = result;\n\t}\n\tcatch (<%java.lang.Exception%> e) {\n\t\tCAUGHT_result = <%org.eclipse.ocl.pivot.utilities.ValueUtil%>.createInvalidValue(e);\n\t}\n\tfinal /*@NonInvalid\052/ boolean logDiagnostic = <%org.eclipse.ocl.pivot.library.string.CGStringLogDiagnosticOperation%>.INSTANCE.evaluate(executor, <%org.eclipse.ocl.pivot.ids.TypeId%>.BOOLEAN, <%org.eclipse.cmf.occi.OCCITables%>.STR_Configuration_c_c_AllResourcesLinksKindsInUse, this, (Object)null, diagnostics, context, (Object)null, severity_0, CAUGHT_result, <%org.eclipse.cmf.occi.OCCITables%>.INT_0).booleanValue();\n\tsymbol_0 = logDiagnostic;\n}\nreturn Boolean.TRUE == symbol_0;'"
	 * @generated
	 */
	boolean AllResourcesLinksKindsInUse(DiagnosticChain diagnostics, Map<Object, Object> context);

} // Configuration
